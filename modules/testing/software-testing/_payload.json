[{"data":1,"prerenderedAt":848},["ShallowReactive",2],{"content-query-nZ2leosR2Z":3,"content-query-AT44bg6JPw":289},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"type":9,"order":10,"body":11,"_type":283,"_id":284,"_source":285,"_file":286,"_extension":287,"plainText":288},"/modules/testing/software-testing","testing",false,"","Software Testing","reading",2,{"type":12,"children":13,"toc":275},"root",[14,23,29,34,39,46,51,56,62,67,123,129,134],{"type":15,"tag":16,"props":17,"children":19},"element","h2",{"id":18},"software-testing-5-minutes",[20],{"type":21,"value":22},"text","Software Testing (5 minutes)",{"type":15,"tag":24,"props":25,"children":26},"p",{},[27],{"type":21,"value":28},"Software testing is the process of evaluating and verifying that software and its components meet specified requirements and function as expected. This critical step in the software development lifecycle ensures that the final product is reliable, functional, and free of significant defects.",{"type":15,"tag":24,"props":30,"children":31},{},[32],{"type":21,"value":33},"The primary goal of software testing is to identify defects, errors, flaws, or bugs early in the development process. By detecting issues early, developers can address them before the software is released, reducing the risk of costly fixes and enhancing overall quality. Software testing can be conducted manually, where a human tester actively uses the software, performing various actions and observing the results to detect any anomalies or unexpected behavior. Alternatively, automated testing utilizes test scripts or tools to execute tests automatically, which is efficient for repetitive tasks and can quickly cover a wide range of test scenarios.",{"type":15,"tag":24,"props":35,"children":36},{},[37],{"type":21,"value":38},"Untested software can be likened to uncalibrated experimental devices. Just as uncalibrated instruments may provide inaccurate data and lead to erroneous conclusions, untested software can contain hidden defects that compromise its reliability and performance, potentially leading to critical failures in real-world applications; see optional section below.",{"type":15,"tag":40,"props":41,"children":43},"h3",{"id":42},"what-can-tests-help-you-do",[44],{"type":21,"value":45},"What can tests help you do?",{"type":15,"tag":24,"props":47,"children":48},{},[49],{"type":21,"value":50},"Tests play a crucial role in ensuring the reliability, validity, and reproducibility of your software's results. They help users easily verify that they have correctly installed your software, often providing examples of how to use it effectively. Tests also enable other developers to contribute to your software and make modifications with confidence, knowing that nothing is breaking.",{"type":15,"tag":24,"props":52,"children":53},{},[54],{"type":21,"value":55},"Additionally, tests preserve expected functionality by ensuring that new changes do not introduce unintended side effects. They manage complexity by encouraging code that is easier to test, which in turn makes it easier to understand and maintain.",{"type":15,"tag":40,"props":57,"children":59},{"id":58},"types-of-testing",[60],{"type":21,"value":61},"Types of Testing",{"type":15,"tag":24,"props":63,"children":64},{},[65],{"type":21,"value":66},"There are several types of tests used in software development, each serving a specific purpose to ensure the quality and functionality of the software.",{"type":15,"tag":68,"props":69,"children":70},"ul",{},[71,83,93,103,113],{"type":15,"tag":72,"props":73,"children":74},"li",{},[75,81],{"type":15,"tag":76,"props":77,"children":78},"strong",{},[79],{"type":21,"value":80},"Smoke Tests",{"type":21,"value":82},": Also known as \"verification testing\", \"confidence testing\" or \"sanity testing\", smoke tests are a preliminary type of testing that checks the basic functionality of the software. They are often used to determine if a new build is stable enough to proceed with more detailed testing. Smoke tests quickly identify major issues that could prevent the software from functioning at a basic level.",{"type":15,"tag":72,"props":84,"children":85},{},[86,91],{"type":15,"tag":76,"props":87,"children":88},{},[89],{"type":21,"value":90},"Unit Tests",{"type":21,"value":92},": These tests focus on individual functions or components of the software, testing them one at a time. Unit tests are designed to validate that each function performs as expected in isolation, ensuring that the smallest parts of the codebase work correctly.",{"type":15,"tag":72,"props":94,"children":95},{},[96,101],{"type":15,"tag":76,"props":97,"children":98},{},[99],{"type":21,"value":100},"Integration Tests",{"type":21,"value":102},": These tests evaluate how different parts of the software work together. Integration tests are crucial for identifying issues that arise when components interact, ensuring that the integrated parts function seamlessly as a whole.",{"type":15,"tag":72,"props":104,"children":105},{},[106,111],{"type":15,"tag":76,"props":107,"children":108},{},[109],{"type":21,"value":110},"System Tests",{"type":21,"value":112},": These tests involve evaluating the entire software system running in an environment that simulates real-world conditions. System tests aim to verify that the software meets all specified requirements and performs well under expected usage scenarios.",{"type":15,"tag":72,"props":114,"children":115},{},[116,121],{"type":15,"tag":76,"props":117,"children":118},{},[119],{"type":21,"value":120},"Regression Tests",{"type":21,"value":122},": These tests are used to ensure that recent code changes have not adversely affected existing functionality. By checking that the software produces the same results as before the changes, regression tests help maintain stability and prevent the reintroduction of previously fixed bugs.",{"type":15,"tag":16,"props":124,"children":126},{"id":125},"examples-of-untested-research-software-40-minutes-optional",[127],{"type":21,"value":128},"Examples of untested research software (40 minutes, optional)",{"type":15,"tag":24,"props":130,"children":131},{},[132],{"type":21,"value":133},"There are several examples in which the lack of proper software testings resulted in serious consequences. Here are a few interesting cases:",{"type":15,"tag":68,"props":135,"children":136},{},[137,156,173,190,207,224,241,258],{"type":15,"tag":72,"props":138,"children":139},{},[140,148],{"type":15,"tag":141,"props":142,"children":146},"a",{"href":143,"rel":144},"https://en.wikipedia.org/wiki/Therac-25",[145],"nofollow",[147],{"type":21,"value":143},{"type":15,"tag":68,"props":149,"children":150},{},[151],{"type":15,"tag":72,"props":152,"children":153},{},[154],{"type":21,"value":155},"(1980) A tragic example of software bugs leading to loss of life, the Therac-25 radiation therapy machine had a flaw in its software, which resulted in patients receiving lethal doses of radiation.",{"type":15,"tag":72,"props":157,"children":158},{},[159,165],{"type":15,"tag":141,"props":160,"children":163},{"href":161,"rel":162},"https://en.wikipedia.org/wiki/Ariane_flight_V88",[145],[164],{"type":21,"value":161},{"type":15,"tag":68,"props":166,"children":167},{},[168],{"type":15,"tag":72,"props":169,"children":170},{},[171],{"type":21,"value":172},"(1996) This European Space Agency rocket was destroyed just 40 seconds after its launch due to a software bug.",{"type":15,"tag":72,"props":174,"children":175},{},[176,182],{"type":15,"tag":141,"props":177,"children":180},{"href":178,"rel":179},"https://www.wired.com/2010/11/1110mars-climate-observer-report/",[145],[181],{"type":21,"value":178},{"type":15,"tag":68,"props":183,"children":184},{},[185],{"type":15,"tag":72,"props":186,"children":187},{},[188],{"type":21,"value":189},"(1999) The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake.",{"type":15,"tag":72,"props":191,"children":192},{},[193,199],{"type":15,"tag":141,"props":194,"children":197},{"href":195,"rel":196},"https://en.wikipedia.org/wiki/Year_2000_problem",[145],[198],{"type":21,"value":195},{"type":15,"tag":68,"props":200,"children":201},{},[202],{"type":15,"tag":72,"props":203,"children":204},{},[205],{"type":21,"value":206},"(2000) The Y2K bug was a widespread computer flaw that was expected to cause chaos as the date changed from December 31, 1999, to January 1, 2000.",{"type":15,"tag":72,"props":208,"children":209},{},[210,216],{"type":15,"tag":141,"props":211,"children":214},{"href":212,"rel":213},"https://www.science.org/doi/full/10.1126/science.314.5807.1856",[145],[215],{"type":21,"value":212},{"type":15,"tag":68,"props":217,"children":218},{},[219],{"type":15,"tag":72,"props":220,"children":221},{},[222],{"type":21,"value":223},"(2006) A software flaw (a plus sign which should have been a minus) lead to a retraction of 5 scientific articles.",{"type":15,"tag":72,"props":225,"children":226},{},[227,233],{"type":15,"tag":141,"props":228,"children":231},{"href":229,"rel":230},"https://en.wikipedia.org/wiki/Knight_Capital_Group",[145],[232],{"type":21,"value":229},{"type":15,"tag":68,"props":234,"children":235},{},[236],{"type":15,"tag":72,"props":237,"children":238},{},[239],{"type":21,"value":240},"(2013) Knight Capital, a financial services firm, lost around $440 million within less than an hour due to a software glitch in its trading algorithms.",{"type":15,"tag":72,"props":242,"children":243},{},[244,250],{"type":15,"tag":141,"props":245,"children":248},{"href":246,"rel":247},"https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings",[145],[249],{"type":21,"value":246},{"type":15,"tag":68,"props":251,"children":252},{},[253],{"type":15,"tag":72,"props":254,"children":255},{},[256],{"type":21,"value":257},"(2018-2019) Software issues with the Boeing 737 MAX's Maneuvering Characteristics Augmentation System (MCAS) were implicated in two fatal crashes",{"type":15,"tag":72,"props":259,"children":260},{},[261,267],{"type":15,"tag":141,"props":262,"children":265},{"href":263,"rel":264},"https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/",[145],[266],{"type":21,"value":263},{"type":15,"tag":68,"props":268,"children":269},{},[270],{"type":15,"tag":72,"props":271,"children":272},{},[273],{"type":21,"value":274},"(2019) Researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies.",{"title":7,"searchDepth":10,"depth":10,"links":276},[277,282],{"id":18,"depth":10,"text":22,"children":278},[279,281],{"id":42,"depth":280,"text":45},3,{"id":58,"depth":280,"text":61},{"id":125,"depth":10,"text":128},"markdown","local_fs:modules:testing:software-testing.md","local_fs","modules/testing/software-testing.md","md","---\ntitle: Software Testing\ntype: reading\norder: 2\n---\n\n## Software Testing (5 minutes)\n\nSoftware testing is the process of evaluating and verifying that software and its components meet specified requirements and function as expected. This critical step in the software development lifecycle ensures that the final product is reliable, functional, and free of significant defects.\n\nThe primary goal of software testing is to identify defects, errors, flaws, or bugs early in the development process. By detecting issues early, developers can address them before the software is released, reducing the risk of costly fixes and enhancing overall quality. Software testing can be conducted manually, where a human tester actively uses the software, performing various actions and observing the results to detect any anomalies or unexpected behavior. Alternatively, automated testing utilizes test scripts or tools to execute tests automatically, which is efficient for repetitive tasks and can quickly cover a wide range of test scenarios.\n\nUntested software can be likened to uncalibrated experimental devices. Just as uncalibrated instruments may provide inaccurate data and lead to erroneous conclusions, untested software can contain hidden defects that compromise its reliability and performance, potentially leading to critical failures in real-world applications; see optional section below.\n\n### What can tests help you do?\n\nTests play a crucial role in ensuring the reliability, validity, and reproducibility of your software's results. They help users easily verify that they have correctly installed your software, often providing examples of how to use it effectively. Tests also enable other developers to contribute to your software and make modifications with confidence, knowing that nothing is breaking.\n\nAdditionally, tests preserve expected functionality by ensuring that new changes do not introduce unintended side effects. They manage complexity by encouraging code that is easier to test, which in turn makes it easier to understand and maintain.\n\n### Types of Testing\n\nThere are several types of tests used in software development, each serving a specific purpose to ensure the quality and functionality of the software.\n\n- **Smoke Tests**: Also known as \"verification testing\", \"confidence testing\" or \"sanity testing\", smoke tests are a preliminary type of testing that checks the basic functionality of the software. They are often used to determine if a new build is stable enough to proceed with more detailed testing. Smoke tests quickly identify major issues that could prevent the software from functioning at a basic level.\n\n- **Unit Tests**: These tests focus on individual functions or components of the software, testing them one at a time. Unit tests are designed to validate that each function performs as expected in isolation, ensuring that the smallest parts of the codebase work correctly.\n\n- **Integration Tests**: These tests evaluate how different parts of the software work together. Integration tests are crucial for identifying issues that arise when components interact, ensuring that the integrated parts function seamlessly as a whole.\n\n- **System Tests**: These tests involve evaluating the entire software system running in an environment that simulates real-world conditions. System tests aim to verify that the software meets all specified requirements and performs well under expected usage scenarios.\n\n- **Regression Tests**: These tests are used to ensure that recent code changes have not adversely affected existing functionality. By checking that the software produces the same results as before the changes, regression tests help maintain stability and prevent the reintroduction of previously fixed bugs.\n\n## Examples of untested research software (40 minutes, optional)\n\nThere are several examples in which the lack of proper software testings resulted in serious consequences. Here are a few interesting cases:\n\n- https://en.wikipedia.org/wiki/Therac-25\n  - (1980) A tragic example of software bugs leading to loss of life, the Therac-25 radiation therapy machine had a flaw in its software, which resulted in patients receiving lethal doses of radiation.\n\n- https://en.wikipedia.org/wiki/Ariane_flight_V88\n  - (1996) This European Space Agency rocket was destroyed just 40 seconds after its launch due to a software bug.\n\n- https://www.wired.com/2010/11/1110mars-climate-observer-report/\n  - (1999) The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake.\n\n- https://en.wikipedia.org/wiki/Year_2000_problem\n  - (2000) The Y2K bug was a widespread computer flaw that was expected to cause chaos as the date changed from December 31, 1999, to January 1, 2000.\n\n- https://www.science.org/doi/full/10.1126/science.314.5807.1856\n  - (2006) A software flaw (a plus sign which should have been a minus) lead to a retraction of 5 scientific articles.\n\n- https://en.wikipedia.org/wiki/Knight_Capital_Group\n  - (2013) Knight Capital, a financial services firm, lost around $440 million within less than an hour due to a software glitch in its trading algorithms.\n\n- https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings\n  - (2018-2019) Software issues with the Boeing 737 MAX's Maneuvering Characteristics Augmentation System (MCAS) were implicated in two fatal crashes\n\n- https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/\n  - (2019) Researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies.",[290,326,431,584],{"_path":291,"_dir":292,"_draft":6,"_partial":6,"_locale":7,"title":293,"description":7,"order":294,"body":295,"_type":283,"_id":323,"_source":285,"_file":324,"_extension":287,"plainText":325},"/main/about","main","About",1,{"type":12,"children":296,"toc":319},[297,303,308,314],{"type":15,"tag":16,"props":298,"children":300},{"id":299},"about-the-research-software-support",[301],{"type":21,"value":302},"About the Research Software Support",{"type":15,"tag":24,"props":304,"children":305},{},[306],{"type":21,"value":307},"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.",{"type":15,"tag":16,"props":309,"children":311},{"id":310},"target-audience",[312],{"type":21,"value":313},"Target audience",{"type":15,"tag":24,"props":315,"children":316},{},[317],{"type":21,"value":318},"The target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software.",{"title":7,"searchDepth":10,"depth":10,"links":320},[321,322],{"id":299,"depth":10,"text":302},{"id":310,"depth":10,"text":313},"local_fs:main:about.md","main/about.md","---\ntitle: About\norder: 1\n---\n\n## About the Research Software Support\nIn the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\n\n## Target audience\n\nThe target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software.",{"_path":327,"_dir":292,"_draft":6,"_partial":6,"_locale":7,"title":328,"description":7,"order":329,"body":330,"_type":283,"_id":428,"_source":285,"_file":429,"_extension":287,"plainText":430},"/main/contribute","Contribute",4,{"type":12,"children":331,"toc":423},[332,338,343,349,354],{"type":15,"tag":16,"props":333,"children":335},{"id":334},"contributing-to-the-research-software-support",[336],{"type":21,"value":337},"Contributing to the Research Software Support",{"type":15,"tag":24,"props":339,"children":340},{},[341],{"type":21,"value":342},"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project.",{"type":15,"tag":40,"props":344,"children":346},{"id":345},"what-can-i-do",[347],{"type":21,"value":348},"What can I do?",{"type":15,"tag":24,"props":350,"children":351},{},[352],{"type":21,"value":353},"Go to our github repository by clicking on the GitHub logo in the top right of this website.",{"type":15,"tag":68,"props":355,"children":356},{},[357,371,394,406],{"type":15,"tag":72,"props":358,"children":359},{},[360,362,369],{"type":21,"value":361},"Contribute to the content discussion in the ",{"type":15,"tag":141,"props":363,"children":366},{"href":364,"rel":365},"https://github.com/esciencecenter-digital-skills/research-software-support/labels/module%20discussion",[145],[367],{"type":21,"value":368},"module issues",{"type":21,"value":370},", e.g. by listing good resources for information.",{"type":15,"tag":72,"props":372,"children":373},{},[374,376,383,385,392],{"type":21,"value":375},"Review a lesson module; both by looking at ",{"type":15,"tag":141,"props":377,"children":380},{"href":378,"rel":379},"https://github.com/esciencecenter-digital-skills/research-software-support/pulls",[145],[381],{"type":21,"value":382},"open PRs",{"type":21,"value":384},", as well as flagging issues for improvement in the ",{"type":15,"tag":141,"props":386,"children":389},{"href":387,"rel":388},"https://esciencecenter-digital-skills.github.io/research-software-support/",[145],[390],{"type":21,"value":391},"existing content",{"type":21,"value":393},".",{"type":15,"tag":72,"props":395,"children":396},{},[397,404],{"type":15,"tag":141,"props":398,"children":401},{"href":399,"rel":400},"https://github.com/esciencecenter-digital-skills/research-software-support/issues",[145],[402],{"type":21,"value":403},"Provide feedback",{"type":21,"value":405}," on the different subjects covered: what did we miss? Should something be restructured?",{"type":15,"tag":72,"props":407,"children":408},{},[409,415,417],{"type":15,"tag":410,"props":411,"children":412},"span",{},[413],{"type":21,"value":414},"Suggest a new entry",{"type":21,"value":416}," for the ",{"type":15,"tag":141,"props":418,"children":420},{"href":419},"/main/yellowpages",[421],{"type":21,"value":422},"Research Software Support Yellow Pages",{"title":7,"searchDepth":10,"depth":10,"links":424},[425],{"id":334,"depth":10,"text":337,"children":426},[427],{"id":345,"depth":280,"text":348},"local_fs:main:contribute.md","main/contribute.md","---\ntitle: Contribute\norder: 4\n---\n\n## Contributing to the Research Software Support\n\nIn the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project.\n\n### What can I do?\n\nGo to our github repository by clicking on the GitHub logo in the top right of this website. \n\n* Contribute to the content discussion in the [module issues](https://github.com/esciencecenter-digital-skills/research-software-support/labels/module%20discussion), e.g. by listing good resources for information.\n* Review a lesson module; both by looking at [open PRs](https://github.com/esciencecenter-digital-skills/research-software-support/pulls), as well as flagging issues for improvement in the [existing content](https://esciencecenter-digital-skills.github.io/research-software-support/).\n* [Provide feedback](https://github.com/esciencecenter-digital-skills/research-software-support/issues) on the different subjects covered: what did we miss? Should something be restructured?\n* [Suggest a new entry] for the [Research Software Support Yellow Pages](/main/yellowpages)",{"_path":432,"_dir":292,"_draft":6,"_partial":6,"_locale":7,"title":433,"description":7,"order":280,"body":434,"_type":283,"_id":581,"_source":285,"_file":582,"_extension":287,"plainText":583},"/main/masterclass","Masterclass",{"type":12,"children":435,"toc":573},[436,441,463,469,475,505,511,546,552],{"type":15,"tag":16,"props":437,"children":439},{"id":438},"about",[440],{"type":21,"value":293},{"type":15,"tag":24,"props":442,"children":443},{},[444,446,453,455,461],{"type":21,"value":445},"The Research Software Support Masterclass is the live workshop version of these online materials. If you are interested in following or even hosting such a masterclass, have a look at the ",{"type":15,"tag":141,"props":447,"children":450},{"href":448,"rel":449},"https://www.esciencecenter.nl/digital-skills/",[145],[451],{"type":21,"value":452},"training page",{"type":21,"value":454}," or contact the ",{"type":15,"tag":141,"props":456,"children":458},{"href":457},"mailto:training@esciencecenter.nl",[459],{"type":21,"value":460},"training team",{"type":21,"value":462}," at the Netherlands eScience Center.",{"type":15,"tag":16,"props":464,"children":466},{"id":465},"homework",[467],{"type":21,"value":468},"Homework",{"type":15,"tag":40,"props":470,"children":472},{"id":471},"research-software",[473],{"type":21,"value":474},"Research Software",{"type":15,"tag":476,"props":477,"children":478},"ol",{},[479,492],{"type":15,"tag":72,"props":480,"children":481},{},[482,484,491],{"type":21,"value":483},"Find a piece of research software that you like (because of the topic or nice picture, or whetever other reason) from the ",{"type":15,"tag":141,"props":485,"children":488},{"href":486,"rel":487},"https://research-software-directory.org/software?page=1&rows=48",[145],[489],{"type":21,"value":490},"Research Software Directory",{"type":21,"value":393},{"type":15,"tag":72,"props":493,"children":494},{},[495,497,503],{"type":21,"value":496},"Do the ",{"type":15,"tag":141,"props":498,"children":500},{"href":499},"/modules/researchsoftware/exercise-research-life-cycle",[501],{"type":21,"value":502},"exercise about the research life cycle",{"type":21,"value":504}," from the Research Software module, use the piece of software you chose.",{"type":15,"tag":40,"props":506,"children":508},{"id":507},"software-in-the-research-landscape",[509],{"type":21,"value":510},"Software in the Research landscape",{"type":15,"tag":476,"props":512,"children":513},{},[514,541],{"type":15,"tag":72,"props":515,"children":516},{},[517,519,525,527,532,534,539],{"type":21,"value":518},"From all the different initiatives, concepts and organizations discussed in the ",{"type":15,"tag":141,"props":520,"children":522},{"href":521},"/modules/softwarelandscape/slides",[523],{"type":21,"value":524},"Software Landscape module",{"type":21,"value":526}," or the ",{"type":15,"tag":141,"props":528,"children":529},{"href":419},[530],{"type":21,"value":531},"Yellow Pages",{"type":21,"value":533},", pick ",{"type":15,"tag":76,"props":535,"children":536},{},[537],{"type":21,"value":538},"three",{"type":21,"value":540}," that your chosen piece of software could/should connect to and/or use.",{"type":15,"tag":72,"props":542,"children":543},{},[544],{"type":21,"value":545},"Explain why you chose these three and what makes them valuable for the chosen piece of software.",{"type":15,"tag":40,"props":547,"children":549},{"id":548},"software-management-plan",[550],{"type":21,"value":551},"Software Management Plan",{"type":15,"tag":476,"props":553,"children":554},{},[555,568],{"type":15,"tag":72,"props":556,"children":557},{},[558,560,566],{"type":21,"value":559},"Create a software management plan template which fits your piece of software by using step 2 and 3 from the ",{"type":15,"tag":141,"props":561,"children":563},{"href":562},"/modules/softwaremanagementplans/templatebuilding",[564],{"type":21,"value":565},"Template Building exercise",{"type":21,"value":567}," in the software management plan module.",{"type":15,"tag":72,"props":569,"children":570},{},[571],{"type":21,"value":572},"Fill out your own software management plan template. Keep it short and to the point.",{"title":7,"searchDepth":10,"depth":10,"links":574},[575,576],{"id":438,"depth":10,"text":293},{"id":465,"depth":10,"text":468,"children":577},[578,579,580],{"id":471,"depth":280,"text":474},{"id":507,"depth":280,"text":510},{"id":548,"depth":280,"text":551},"local_fs:main:masterclass.md","main/masterclass.md","---\ntitle: Masterclass\norder: 3\n---\n\n## About\nThe Research Software Support Masterclass is the live workshop version of these online materials. If you are interested in following or even hosting such a masterclass, have a look at the [training page](https://www.esciencecenter.nl/digital-skills/) or contact the [training team](mailto:training@esciencecenter.nl) at the Netherlands eScience Center.\n\n## Homework\n\n### Research Software\n\n1. Find a piece of research software that you like (because of the topic or nice picture, or whetever other reason) from the [Research Software Directory](https://research-software-directory.org/software?page=1&rows=48).\n\n1. Do the [exercise about the research life cycle](/modules/researchsoftware/exercise-research-life-cycle) from the Research Software module, use the piece of software you chose.\n\n### Software in the Research landscape\n\n1. From all the different initiatives, concepts and organizations discussed in the [Software Landscape module](/modules/softwarelandscape/slides) or the [Yellow Pages](/main/yellowpages), pick **three** that your chosen piece of software could/should connect to and/or use. \n\n2. Explain why you chose these three and what makes them valuable for the chosen piece of software. \n\n\n### Software Management Plan\n\n1. Create a software management plan template which fits your piece of software by using step 2 and 3 from the [Template Building exercise](/modules/softwaremanagementplans/templatebuilding) in the software management plan module.\n\n2. Fill out your own software management plan template. Keep it short and to the point. \n\n",{"_path":419,"_dir":292,"_draft":6,"_partial":6,"_locale":7,"title":531,"description":585,"order":280,"body":586,"_type":283,"_id":845,"_source":285,"_file":846,"_extension":287,"plainText":847},"These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the contributing guidelines.",{"type":12,"children":587,"toc":837},[588,594,609,615,638,644,667,673,716,722,765,771,798,804],{"type":15,"tag":589,"props":590,"children":592},"h1",{"id":591},"research-software-support-yellow-pages",[593],{"type":21,"value":422},{"type":15,"tag":24,"props":595,"children":596},{},[597],{"type":15,"tag":598,"props":599,"children":600},"em",{},[601,603,608],{"type":21,"value":602},"These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the ",{"type":15,"tag":141,"props":604,"children":605},{"href":327},[606],{"type":21,"value":607},"contributing guidelines",{"type":21,"value":393},{"type":15,"tag":16,"props":610,"children":612},{"id":611},"research-software-engineers-communities-and-networks",[613],{"type":21,"value":614},"Research Software Engineers communities and networks",{"type":15,"tag":68,"props":616,"children":617},{},[618,628],{"type":15,"tag":72,"props":619,"children":620},{},[621],{"type":15,"tag":141,"props":622,"children":625},{"href":623,"rel":624},"https://nl-rse.org/",[145],[626],{"type":21,"value":627},"NL RSE",{"type":15,"tag":72,"props":629,"children":630},{},[631],{"type":15,"tag":141,"props":632,"children":635},{"href":633,"rel":634},"https://society-rse.org/",[145],[636],{"type":21,"value":637},"Society of Research Software Engineering",{"type":15,"tag":16,"props":639,"children":641},{"id":640},"open-science",[642],{"type":21,"value":643},"Open Science",{"type":15,"tag":68,"props":645,"children":646},{},[647,657],{"type":15,"tag":72,"props":648,"children":649},{},[650],{"type":15,"tag":141,"props":651,"children":654},{"href":652,"rel":653},"https://www.openscience.nl/en",[145],[655],{"type":21,"value":656},"Open Science NL",{"type":15,"tag":72,"props":658,"children":659},{},[660],{"type":15,"tag":141,"props":661,"children":664},{"href":662,"rel":663},"https://freeopensourcesoftware.org/",[145],[665],{"type":21,"value":666},"FOSS (Free and Open Source Software)",{"type":15,"tag":16,"props":668,"children":670},{"id":669},"fair",[671],{"type":21,"value":672},"FAIR",{"type":15,"tag":68,"props":674,"children":675},{},[676,686,696,706],{"type":15,"tag":72,"props":677,"children":678},{},[679],{"type":15,"tag":141,"props":680,"children":683},{"href":681,"rel":682},"https://www.nature.com/articles/s41597-022-01710-x",[145],[684],{"type":21,"value":685},"FAIR for Research Software",{"type":15,"tag":72,"props":687,"children":688},{},[689],{"type":15,"tag":141,"props":690,"children":693},{"href":691,"rel":692},"https://www.researchsoft.org/",[145],[694],{"type":21,"value":695},"ReSA (Research Software Alliance)",{"type":15,"tag":72,"props":697,"children":698},{},[699],{"type":15,"tag":141,"props":700,"children":703},{"href":701,"rel":702},"https://www.rd-alliance.org/",[145],[704],{"type":21,"value":705},"RDA (Research Data Alliance)",{"type":15,"tag":72,"props":707,"children":708},{},[709],{"type":15,"tag":141,"props":710,"children":713},{"href":711,"rel":712},"https://force11.org/",[145],[714],{"type":21,"value":715},"FORCE11 (Future of Research Communications and e-Scholarship)",{"type":15,"tag":16,"props":717,"children":719},{"id":718},"research-software-traininglearning",[720],{"type":21,"value":721},"Research Software training/learning",{"type":15,"tag":68,"props":723,"children":724},{},[725,735,745,755],{"type":15,"tag":72,"props":726,"children":727},{},[728],{"type":15,"tag":141,"props":729,"children":732},{"href":730,"rel":731},"https://researchsoftwaretraining.nl",[145],[733],{"type":21,"value":734},"Research Software Training",{"type":15,"tag":72,"props":736,"children":737},{},[738],{"type":15,"tag":141,"props":739,"children":742},{"href":740,"rel":741},"https://carpentries.org/",[145],[743],{"type":21,"value":744},"Carpentries",{"type":15,"tag":72,"props":746,"children":747},{},[748],{"type":15,"tag":141,"props":749,"children":752},{"href":750,"rel":751},"https://coderefinery.org/",[145],[753],{"type":21,"value":754},"Code Refinery",{"type":15,"tag":72,"props":756,"children":757},{},[758],{"type":15,"tag":141,"props":759,"children":762},{"href":760,"rel":761},"https://book.the-turing-way.org/",[145],[763],{"type":21,"value":764},"The Turing Way",{"type":15,"tag":16,"props":766,"children":768},{"id":767},"technical-support",[769],{"type":21,"value":770},"Technical support",{"type":15,"tag":68,"props":772,"children":773},{},[774,786],{"type":15,"tag":72,"props":775,"children":776},{},[777,784],{"type":15,"tag":141,"props":778,"children":781},{"href":779,"rel":780},"https://esciencecenter.nl/",[145],[782],{"type":21,"value":783},"Netherlands eScience Center",{"type":21,"value":785}," (Research Software / Training)",{"type":15,"tag":72,"props":787,"children":788},{},[789,796],{"type":15,"tag":141,"props":790,"children":793},{"href":791,"rel":792},"https://surf.nl/",[145],[794],{"type":21,"value":795},"SURF",{"type":21,"value":797}," (Academic ICT services / High Performance Computing / Data Storage)",{"type":15,"tag":16,"props":799,"children":801},{"id":800},"other",[802],{"type":21,"value":803},"Other",{"type":15,"tag":68,"props":805,"children":806},{},[807,817,827],{"type":15,"tag":72,"props":808,"children":809},{},[810],{"type":15,"tag":141,"props":811,"children":814},{"href":812,"rel":813},"https://zenodo.org/records/7248877",[145],[815],{"type":21,"value":816},"Practical Guide to Software Management Plans",{"type":15,"tag":72,"props":818,"children":819},{},[820],{"type":15,"tag":141,"props":821,"children":824},{"href":822,"rel":823},"https://www.softwareheritage.org/",[145],[825],{"type":21,"value":826},"Software Heritage",{"type":15,"tag":72,"props":828,"children":829},{},[830],{"type":15,"tag":141,"props":831,"children":834},{"href":832,"rel":833},"https://www.software.ac.uk/",[145],[835],{"type":21,"value":836},"Software Sustainability Institute",{"title":7,"searchDepth":10,"depth":10,"links":838},[839,840,841,842,843,844],{"id":611,"depth":10,"text":614},{"id":640,"depth":10,"text":643},{"id":669,"depth":10,"text":672},{"id":718,"depth":10,"text":721},{"id":767,"depth":10,"text":770},{"id":800,"depth":10,"text":803},"local_fs:main:yellowpages.md","main/yellowpages.md","---\ntitle: Yellow Pages\norder: 3\n---\n\n# Research Software Support Yellow Pages\n*These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the [contributing guidelines](/main/contribute).*\n\n## Research Software Engineers communities and networks\n- [NL RSE](https://nl-rse.org/)\n- [Society of Research Software Engineering](https://society-rse.org/)\n\n## Open Science\n- [Open Science NL](https://www.openscience.nl/en)\n- [FOSS (Free and Open Source Software)](https://freeopensourcesoftware.org/)\n\n## FAIR\n- [FAIR for Research Software](https://www.nature.com/articles/s41597-022-01710-x) \n- [ReSA (Research Software Alliance)](https://www.researchsoft.org/)\n- [RDA (Research Data Alliance)](https://www.rd-alliance.org/)\n- [FORCE11 (Future of Research Communications and e-Scholarship)](https://force11.org/)\n\n## Research Software training/learning\n- [Research Software Training](https://researchsoftwaretraining.nl)\n- [Carpentries](https://carpentries.org/) \n- [Code Refinery](https://coderefinery.org/)\n- [The Turing Way](https://book.the-turing-way.org/)\n\n## Technical support\n- [Netherlands eScience Center](https://esciencecenter.nl/) (Research Software / Training)\n- [SURF](https://surf.nl/) (Academic ICT services / High Performance Computing / Data Storage)\n\n## Other\n- [Practical Guide to Software Management Plans](https://zenodo.org/records/7248877)\n- [Software Heritage](https://www.softwareheritage.org/)\n- [Software Sustainability Institute](https://www.software.ac.uk/)\n",1727849576698]