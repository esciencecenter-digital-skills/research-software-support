[{"data":1,"prerenderedAt":1135},["Reactive",2],{"content-query-o5SfQqZsgv":3,"content-query-iNGZlqY6Fl":207},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"body":9,"_type":202,"_id":203,"_source":204,"_file":205,"_extension":206},"/modules/testing/exercise2","testing",false,"","Exercise 2",{"type":10,"children":11,"toc":196},"root",[12,20,27,47,51,57,59,172,175,181,187],{"type":13,"tag":14,"props":15,"children":17},"element","h1",{"id":16},"exercise-2",[18],{"type":19,"value":8},"text",{"type":13,"tag":21,"props":22,"children":24},"h2",{"id":23},"instructions",[25],{"type":19,"value":26},"Instructions",{"type":13,"tag":28,"props":29,"children":30},"ul",{},[31,37,42],{"type":13,"tag":32,"props":33,"children":34},"li",{},[35],{"type":19,"value":36},"Match the items in Column A with their corresponding items in Column B.",{"type":13,"tag":32,"props":38,"children":39},{},[40],{"type":19,"value":41},"Write the letter of the correct match next to each item in Column A.",{"type":13,"tag":32,"props":43,"children":44},{},[45],{"type":19,"value":46},"Have fun and learn!",{"type":13,"tag":48,"props":49,"children":50},"hr",{},[],{"type":13,"tag":21,"props":52,"children":54},{"id":53},"exercise",[55],{"type":19,"value":56},"Exercise",{"type":19,"value":58},"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"type":13,"tag":60,"props":61,"children":62},"table",{},[63,87],{"type":13,"tag":64,"props":65,"children":66},"thead",{},[67],{"type":13,"tag":68,"props":69,"children":70},"tr",{},[71,77,82],{"type":13,"tag":72,"props":73,"children":74},"th",{},[75],{"type":19,"value":76},"Column A: Test Type",{"type":13,"tag":72,"props":78,"children":79},{},[80],{"type":19,"value":81},"Match",{"type":13,"tag":72,"props":83,"children":84},{},[85],{"type":19,"value":86},"Column B: Description",{"type":13,"tag":88,"props":89,"children":90},"tbody",{},[91,108,124,140,156],{"type":13,"tag":68,"props":92,"children":93},{},[94,100,103],{"type":13,"tag":95,"props":96,"children":97},"td",{},[98],{"type":19,"value":99},"1. Smoke Test",{"type":13,"tag":95,"props":101,"children":102},{},[],{"type":13,"tag":95,"props":104,"children":105},{},[106],{"type":19,"value":107},"A. Style of testing that focuses on retesting after changes are made. The results of tests after the changes are compared to the results before, and errors are raised if these are different. The purpose of this test is to ensure that changes (enhancements or defect fixes) to the software have not adversely affected it.",{"type":13,"tag":68,"props":109,"children":110},{},[111,116,119],{"type":13,"tag":95,"props":112,"children":113},{},[114],{"type":19,"value":115},"2. Unit Test",{"type":13,"tag":95,"props":117,"children":118},{},[],{"type":13,"tag":95,"props":120,"children":121},{},[122],{"type":19,"value":123},"B. A level of the software testing process where the complete, integrated system is tested. The purpose of this test is to evaluate whether the system as a whole gives the correct outputs for given inputs.",{"type":13,"tag":68,"props":125,"children":126},{},[127,132,135],{"type":13,"tag":95,"props":128,"children":129},{},[130],{"type":19,"value":131},"3. Integration Test",{"type":13,"tag":95,"props":133,"children":134},{},[],{"type":13,"tag":95,"props":136,"children":137},{},[138],{"type":19,"value":139},"C. Very brief initial checks that ensure the basic units required to run the software can be initialized. If these fail there is no point proceeding to additional levels of testing until they are fixed.",{"type":13,"tag":68,"props":141,"children":142},{},[143,148,151],{"type":13,"tag":95,"props":144,"children":145},{},[146],{"type":19,"value":147},"4. System Test",{"type":13,"tag":95,"props":149,"children":150},{},[],{"type":13,"tag":95,"props":152,"children":153},{},[154],{"type":19,"value":155},"D. A level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units.",{"type":13,"tag":68,"props":157,"children":158},{},[159,164,167],{"type":13,"tag":95,"props":160,"children":161},{},[162],{"type":19,"value":163},"5. Regression Test",{"type":13,"tag":95,"props":165,"children":166},{},[],{"type":13,"tag":95,"props":168,"children":169},{},[170],{"type":19,"value":171},"E. A level of the software testing process where individual units of a software are tested. The purpose is to ensure that each unit of the software works as expected.",{"type":13,"tag":48,"props":173,"children":174},{},[],{"type":13,"tag":21,"props":176,"children":178},{"id":177},"hint",[179],{"type":19,"value":180},"Hint",{"type":13,"tag":182,"props":183,"children":184},"p",{},[185],{"type":19,"value":186},"Here’s an analogy: during the process of manufacturing a ballpoint pen, the cap, the body, the tail, the ink cartridge and the ballpoint are produced separately and unit tested separately. When two or more units are ready, they are assembled and integration testing is performed, for example a test to check the cap fits on the body. When the complete pen is integrated, system testing is performed to check it can be used to write like any pen should.",{"type":13,"tag":182,"props":188,"children":189},{},[190],{"type":13,"tag":191,"props":192,"children":193},"small",{},[194],{"type":19,"value":195}," correct answers: 1.C., 2.E., 3.D., 4.B., and 5.A ",{"title":7,"searchDepth":197,"depth":197,"links":198},2,[199,200,201],{"id":23,"depth":197,"text":26},{"id":53,"depth":197,"text":56},{"id":177,"depth":197,"text":180},"markdown","github:modules:testing:03.exercise2.md","github","modules/testing/03.exercise2.md","md",[208,633,738,889,966],{"_path":209,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":210,"description":7,"body":211,"_type":202,"_id":630,"_source":204,"_file":631,"_extension":632},"/modules/testing/presentation","Presentation",{"type":10,"children":212,"toc":620},[213,219,222,228,237,254,259,263,268,273,278,281,287,307,339,343,348,353,358,363,376,379,385,413,417,422,427,432,437,442,445,451,495,499,504,509,514,519,524,527,533,541,545,550,555,558,564,571,574,580,598,601,611],{"type":13,"tag":21,"props":214,"children":216},{"id":215},"software-testing",[217],{"type":19,"value":218},"Software Testing",{"type":13,"tag":48,"props":220,"children":221},{},[],{"type":13,"tag":21,"props":223,"children":225},{"id":224},"what-is-software-testing",[226],{"type":19,"value":227},"What is software testing?",{"type":13,"tag":229,"props":230,"children":231},"blockquote",{},[232],{"type":13,"tag":182,"props":233,"children":234},{},[235],{"type":19,"value":236},"“Software testing is the process of evaluating and verifying that a software product or application does what it’s supposed to do. The benefits of good testing include preventing bugs and improving performance.”",{"type":13,"tag":182,"props":238,"children":239},{},[240],{"type":13,"tag":191,"props":241,"children":242},{},[243,252],{"type":13,"tag":244,"props":245,"children":249},"a",{"href":246,"rel":247},"https://www.ibm.com/topics/software-testing",[248],"nofollow",[250],{"type":19,"value":251},"From IBM Featured Topics",{"type":19,"value":253}," ",{"type":13,"tag":182,"props":255,"children":256},{},[257],{"type":19,"value":258},"Note:",{"type":13,"tag":182,"props":260,"children":261},{},[262],{"type":19,"value":227},{"type":13,"tag":182,"props":264,"children":265},{},[266],{"type":19,"value":267},"Software testing is the process of evaluating and verifying that a software and its components meet specified requirements and work as expected. Its primary purpose is to identify defects, errors, flaws, or bugs early in the development process.",{"type":13,"tag":182,"props":269,"children":270},{},[271],{"type":19,"value":272},"Software testing can be done manually, where a human actively uses the software to observe for defects, or automatically, where test scripts or tools are used to execute tests.",{"type":13,"tag":182,"props":274,"children":275},{},[276],{"type":19,"value":277},"Untested software can be compared to uncalibrated experimental devices.",{"type":13,"tag":48,"props":279,"children":280},{},[],{"type":13,"tag":21,"props":282,"children":284},{"id":283},"risks-of-untested-software",[285],{"type":19,"value":286},"Risks of untested software",{"type":13,"tag":288,"props":289,"children":290},"center",{},[291,298,303],{"type":13,"tag":292,"props":293,"children":297},"img",{"src":294,"width":295,"style":296},"media/testing-motivation1.png","30%","display:inline;",[],{"type":13,"tag":292,"props":299,"children":302},{"src":300,"width":301,"style":296},"media/testing-motivation2.png","25%",[],{"type":13,"tag":292,"props":304,"children":306},{"src":305,"width":295,"style":296},"media/testing-motivation3.png",[],{"type":13,"tag":182,"props":308,"children":309},{},[310],{"type":13,"tag":191,"props":311,"children":312},{},[313,315,322,324,330,332,338],{"type":19,"value":314}," Find the complete articles ",{"type":13,"tag":244,"props":316,"children":319},{"href":317,"rel":318},"https://www.science.org/doi/full/10.1126/science.314.5807.1856",[248],[320],{"type":19,"value":321},"here",{"type":19,"value":323},", ",{"type":13,"tag":244,"props":325,"children":328},{"href":326,"rel":327},"https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/",[248],[329],{"type":19,"value":321},{"type":19,"value":331},", and ",{"type":13,"tag":244,"props":333,"children":336},{"href":334,"rel":335},"https://www.wired.com/2010/11/1110mars-climate-observer-report/",[248],[337],{"type":19,"value":321},{"type":19,"value":253},{"type":13,"tag":182,"props":340,"children":341},{},[342],{"type":19,"value":258},{"type":13,"tag":182,"props":344,"children":345},{},[346],{"type":19,"value":347},"There are several examples in which the lack of proper software testings resulted in serious consequences.",{"type":13,"tag":182,"props":349,"children":350},{},[351],{"type":19,"value":352},"The first article from 2006 reports about a software flaw (a plus sign in place of a minus sign) that lead to a retraction of 5 scientific articles.",{"type":13,"tag":182,"props":354,"children":355},{},[356],{"type":19,"value":357},"In the second from 2019, researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies.",{"type":13,"tag":182,"props":359,"children":360},{},[361],{"type":19,"value":362},"The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake.",{"type":13,"tag":182,"props":364,"children":365},{},[366,368,374],{"type":19,"value":367},"There is also the case of the Ariane flight V88, an European Space Agency rocket which was destroyed just 40 seconds after its launch due to a software bug; see ",{"type":13,"tag":244,"props":369,"children":372},{"href":370,"rel":371},"https://en.wikipedia.org/wiki/Ariane_flight_V88",[248],[373],{"type":19,"value":370},{"type":19,"value":375},".",{"type":13,"tag":48,"props":377,"children":378},{},[],{"type":13,"tag":21,"props":380,"children":382},{"id":381},"why-testing-your-software",[383],{"type":19,"value":384},"Why testing your software ?",{"type":13,"tag":28,"props":386,"children":387},{},[388,393,398,403,408],{"type":13,"tag":32,"props":389,"children":390},{},[391],{"type":19,"value":392},"Ensure software reliability, validity, and reproducibility.",{"type":13,"tag":32,"props":394,"children":395},{},[396],{"type":19,"value":397},"Confirm correct installation and demonstrate use.",{"type":13,"tag":32,"props":399,"children":400},{},[401],{"type":19,"value":402},"Boost developer confidence for contributions and modifications.",{"type":13,"tag":32,"props":404,"children":405},{},[406],{"type":19,"value":407},"Maintain expected software functionality.",{"type":13,"tag":32,"props":409,"children":410},{},[411],{"type":19,"value":412},"Simplify and manage code complexity.",{"type":13,"tag":182,"props":414,"children":415},{},[416],{"type":19,"value":258},{"type":13,"tag":182,"props":418,"children":419},{},[420],{"type":19,"value":421},"Why testing your software is so crucial?",{"type":13,"tag":182,"props":423,"children":424},{},[425],{"type":19,"value":426},"Specifically for research software, tests are vital for ensuring the reliability, validity, and reproducibility of your scientific results.",{"type":13,"tag":182,"props":428,"children":429},{},[430],{"type":19,"value":431},"They help users by enabling them confirm that the software is installed correctly, providing usage examples.",{"type":13,"tag":182,"props":433,"children":434},{},[435],{"type":19,"value":436},"Tests also help other developers modify and contribute to your software. A good test suite gives collaborators confidence to make modifications without breaking existing functionalities.\nThey preserve the expected functionality of the software.",{"type":13,"tag":182,"props":438,"children":439},{},[440],{"type":19,"value":441},"Manage complexity: Code that is easy to test is often easier to understand and maintain.",{"type":13,"tag":48,"props":443,"children":444},{},[],{"type":13,"tag":21,"props":446,"children":448},{"id":447},"types-of-testing",[449],{"type":19,"value":450},"Types of testing",{"type":13,"tag":28,"props":452,"children":453},{},[454,465,475,485],{"type":13,"tag":32,"props":455,"children":456},{},[457,463],{"type":13,"tag":458,"props":459,"children":460},"strong",{},[461],{"type":19,"value":462},"Unit tests",{"type":19,"value":464},": Assess individual components for correctness.",{"type":13,"tag":32,"props":466,"children":467},{},[468,473],{"type":13,"tag":458,"props":469,"children":470},{},[471],{"type":19,"value":472},"Integration tests",{"type":19,"value":474},": Verify interactions between different parts of the software.",{"type":13,"tag":32,"props":476,"children":477},{},[478,483],{"type":13,"tag":458,"props":479,"children":480},{},[481],{"type":19,"value":482},"System tests",{"type":19,"value":484},": Evaluate the complete and integrated software system.",{"type":13,"tag":32,"props":486,"children":487},{},[488,493],{"type":13,"tag":458,"props":489,"children":490},{},[491],{"type":19,"value":492},"Regression tests",{"type":19,"value":494},": Ensure new changes don’t disrupt existing functionality.",{"type":13,"tag":182,"props":496,"children":497},{},[498],{"type":19,"value":258},{"type":13,"tag":182,"props":500,"children":501},{},[502],{"type":19,"value":503},"There are several types of software testing, each of which with its own purpose.",{"type":13,"tag":182,"props":505,"children":506},{},[507],{"type":19,"value":508},"In unit tests each individual unit of a software is tested separately. The purpose is to ensure that each component of the software works as expected.",{"type":13,"tag":182,"props":510,"children":511},{},[512],{"type":19,"value":513},"Integration tests are a level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units.",{"type":13,"tag":182,"props":515,"children":516},{},[517],{"type":19,"value":518},"The complete, integrated system is checked via the so-called system tests. The purpose here is to evaluate whether the software as a whole gives the correct outputs for given inputs.",{"type":13,"tag":182,"props":520,"children":521},{},[522],{"type":19,"value":523},"Finally, regression tests check for unexpected side-effects in existing features after changes.",{"type":13,"tag":48,"props":525,"children":526},{},[],{"type":13,"tag":21,"props":528,"children":530},{"id":529},"cicd",[531],{"type":19,"value":532},"CI/CD",{"type":13,"tag":288,"props":534,"children":535},{},[536],{"type":13,"tag":292,"props":537,"children":540},{"src":538,"width":539},"media/cicd_scheme.png","80%",[],{"type":13,"tag":182,"props":542,"children":543},{},[544],{"type":19,"value":258},{"type":13,"tag":182,"props":546,"children":547},{},[548],{"type":19,"value":549},"Continuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes, often several times a day, into a shared remote repository. After every integration, a working version of the project is build and the software's test suite is run automatically, making it possible to identify defects, errors, flaws, or bugs introduced by changes early in the development process. This helps keep the code up-to-date and reduces the chances of major issues when combining everyone's work.",{"type":13,"tag":182,"props":551,"children":552},{},[553],{"type":19,"value":554},"Continuous deployment (CD) is the next step after CI in the CI/CD pipeline shown in the figure. CD is the practice of automatically deploying every working version of the project that passes the automated testing phase to its end-users.",{"type":13,"tag":48,"props":556,"children":557},{},[],{"type":13,"tag":21,"props":559,"children":561},{"id":560},"benefits-of-ci",[562],{"type":19,"value":563},"Benefits of CI",{"type":13,"tag":288,"props":565,"children":566},{},[567],{"type":13,"tag":292,"props":568,"children":570},{"src":569,"width":539},"media/benefits_of_ci.png",[],{"type":13,"tag":48,"props":572,"children":573},{},[],{"type":13,"tag":21,"props":575,"children":577},{"id":576},"take-home-messages",[578],{"type":19,"value":579},"Take home messages",{"type":13,"tag":28,"props":581,"children":582},{},[583,588,593],{"type":13,"tag":32,"props":584,"children":585},{},[586],{"type":19,"value":587},"Software testing is key for quality, reliability, and reproducibility",{"type":13,"tag":32,"props":589,"children":590},{},[591],{"type":19,"value":592},"Unit tests verify individual components, integration tests check component interactions",{"type":13,"tag":32,"props":594,"children":595},{},[596],{"type":19,"value":597},"CI/CD streamline development and enhance deployment efficiency.",{"type":13,"tag":48,"props":599,"children":600},{},[],{"type":13,"tag":182,"props":602,"children":603},{},[604],{"type":13,"tag":244,"props":605,"children":608},{"href":606,"rel":607},"http://www.esciencecenter.nl",[248],[609],{"type":19,"value":610},"www.esciencecenter.nl",{"type":13,"tag":182,"props":612,"children":613},{},[614],{"type":13,"tag":244,"props":615,"children":617},{"href":616},"mailto:info@esciencecenter.nl",[618],{"type":19,"value":619},"info@esciencecenter.nl",{"title":7,"searchDepth":197,"depth":197,"links":621},[622,623,624,625,626,627,628,629],{"id":215,"depth":197,"text":218},{"id":224,"depth":197,"text":227},{"id":283,"depth":197,"text":286},{"id":381,"depth":197,"text":384},{"id":447,"depth":197,"text":450},{"id":529,"depth":197,"text":532},{"id":560,"depth":197,"text":563},{"id":576,"depth":197,"text":579},"github:modules:testing:01.presentation.pmd","modules/testing/01.presentation.pmd","pmd",{"_path":634,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":635,"description":636,"body":637,"_type":202,"_id":736,"_source":204,"_file":737,"_extension":206},"/modules/testing/exercise1","Exercise 1","Choose an alternative that correctly answers the following questions:",{"type":10,"children":638,"toc":734},[639,644,648,656,661,666,671,676,681,684,692,697,702,707,712,717,720],{"type":13,"tag":14,"props":640,"children":642},{"id":641},"exercise-1",[643],{"type":19,"value":635},{"type":13,"tag":182,"props":645,"children":646},{},[647],{"type":19,"value":636},{"type":13,"tag":182,"props":649,"children":650},{},[651],{"type":13,"tag":458,"props":652,"children":653},{},[654],{"type":19,"value":655},"1.1 What is software testing?",{"type":13,"tag":182,"props":657,"children":658},{},[659],{"type":19,"value":660},"a) A method for evaluating a software's compatibility with different operating systems.",{"type":13,"tag":182,"props":662,"children":663},{},[664],{"type":19,"value":665},"b) The process of releasing updates and patches for software.",{"type":13,"tag":182,"props":667,"children":668},{},[669],{"type":19,"value":670},"c) The process of verifying and validating that a software meets the required specifications and works as intended.",{"type":13,"tag":182,"props":672,"children":673},{},[674],{"type":19,"value":675},"d) A step in the software lifecycle focused on community engagement and feedback.",{"type":13,"tag":182,"props":677,"children":678},{},[679],{"type":19,"value":680},"e) The practice of documenting software functionalities.",{"type":13,"tag":48,"props":682,"children":683},{},[],{"type":13,"tag":182,"props":685,"children":686},{},[687],{"type":13,"tag":458,"props":688,"children":689},{},[690],{"type":19,"value":691},"1.2 Why is software testing important?",{"type":13,"tag":182,"props":693,"children":694},{},[695],{"type":19,"value":696},"a) To build and maintain the community's trust by demonstrating commitment to quality.",{"type":13,"tag":182,"props":698,"children":699},{},[700],{"type":19,"value":701},"b) To identify and fix bugs, ensure the software meets required standards, and assess its reliability and reproducibility.",{"type":13,"tag":182,"props":703,"children":704},{},[705],{"type":19,"value":706},"c) To design the software's user interface and graphics.",{"type":13,"tag":182,"props":708,"children":709},{},[710],{"type":19,"value":711},"d) To accelerate the overall software development process.",{"type":13,"tag":182,"props":713,"children":714},{},[715],{"type":19,"value":716},"e) To facilitate easier collaboration among developers.",{"type":13,"tag":48,"props":718,"children":719},{},[],{"type":13,"tag":182,"props":721,"children":722},{},[723],{"type":13,"tag":191,"props":724,"children":725},{},[726,727,732],{"type":19,"value":253},{"type":13,"tag":458,"props":728,"children":729},{},[730],{"type":19,"value":731},"answers:",{"type":19,"value":733},"\n1.1 c)\n1.2 The most obvious answer is b), but in fact all answers except c) are correct\n",{"title":7,"searchDepth":197,"depth":197,"links":735},[],"github:modules:testing:02.exercise1.md","modules/testing/02.exercise1.md",{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"body":739,"_type":202,"_id":203,"_source":204,"_file":205,"_extension":206},{"type":10,"children":740,"toc":884},[741,745,749,764,767,771,772,866,869,873,877],{"type":13,"tag":14,"props":742,"children":743},{"id":16},[744],{"type":19,"value":8},{"type":13,"tag":21,"props":746,"children":747},{"id":23},[748],{"type":19,"value":26},{"type":13,"tag":28,"props":750,"children":751},{},[752,756,760],{"type":13,"tag":32,"props":753,"children":754},{},[755],{"type":19,"value":36},{"type":13,"tag":32,"props":757,"children":758},{},[759],{"type":19,"value":41},{"type":13,"tag":32,"props":761,"children":762},{},[763],{"type":19,"value":46},{"type":13,"tag":48,"props":765,"children":766},{},[],{"type":13,"tag":21,"props":768,"children":769},{"id":53},[770],{"type":19,"value":56},{"type":19,"value":58},{"type":13,"tag":60,"props":773,"children":774},{},[775,793],{"type":13,"tag":64,"props":776,"children":777},{},[778],{"type":13,"tag":68,"props":779,"children":780},{},[781,785,789],{"type":13,"tag":72,"props":782,"children":783},{},[784],{"type":19,"value":76},{"type":13,"tag":72,"props":786,"children":787},{},[788],{"type":19,"value":81},{"type":13,"tag":72,"props":790,"children":791},{},[792],{"type":19,"value":86},{"type":13,"tag":88,"props":794,"children":795},{},[796,810,824,838,852],{"type":13,"tag":68,"props":797,"children":798},{},[799,803,806],{"type":13,"tag":95,"props":800,"children":801},{},[802],{"type":19,"value":99},{"type":13,"tag":95,"props":804,"children":805},{},[],{"type":13,"tag":95,"props":807,"children":808},{},[809],{"type":19,"value":107},{"type":13,"tag":68,"props":811,"children":812},{},[813,817,820],{"type":13,"tag":95,"props":814,"children":815},{},[816],{"type":19,"value":115},{"type":13,"tag":95,"props":818,"children":819},{},[],{"type":13,"tag":95,"props":821,"children":822},{},[823],{"type":19,"value":123},{"type":13,"tag":68,"props":825,"children":826},{},[827,831,834],{"type":13,"tag":95,"props":828,"children":829},{},[830],{"type":19,"value":131},{"type":13,"tag":95,"props":832,"children":833},{},[],{"type":13,"tag":95,"props":835,"children":836},{},[837],{"type":19,"value":139},{"type":13,"tag":68,"props":839,"children":840},{},[841,845,848],{"type":13,"tag":95,"props":842,"children":843},{},[844],{"type":19,"value":147},{"type":13,"tag":95,"props":846,"children":847},{},[],{"type":13,"tag":95,"props":849,"children":850},{},[851],{"type":19,"value":155},{"type":13,"tag":68,"props":853,"children":854},{},[855,859,862],{"type":13,"tag":95,"props":856,"children":857},{},[858],{"type":19,"value":163},{"type":13,"tag":95,"props":860,"children":861},{},[],{"type":13,"tag":95,"props":863,"children":864},{},[865],{"type":19,"value":171},{"type":13,"tag":48,"props":867,"children":868},{},[],{"type":13,"tag":21,"props":870,"children":871},{"id":177},[872],{"type":19,"value":180},{"type":13,"tag":182,"props":874,"children":875},{},[876],{"type":19,"value":186},{"type":13,"tag":182,"props":878,"children":879},{},[880],{"type":13,"tag":191,"props":881,"children":882},{},[883],{"type":19,"value":195},{"title":7,"searchDepth":197,"depth":197,"links":885},[886,887,888],{"id":23,"depth":197,"text":26},{"id":53,"depth":197,"text":56},{"id":177,"depth":197,"text":180},{"_path":890,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":891,"description":7,"body":892,"_type":202,"_id":964,"_source":204,"_file":965,"_extension":206},"/modules/testing/exercise3","Exercise 3",{"type":10,"children":893,"toc":960},[894,899,905,916,922,927,932,937,942,947,952],{"type":13,"tag":14,"props":895,"children":897},{"id":896},"exercise-3",[898],{"type":19,"value":891},{"type":13,"tag":21,"props":900,"children":902},{"id":901},"scenario",[903],{"type":19,"value":904},"Scenario",{"type":13,"tag":182,"props":906,"children":907},{},[908,910,915],{"type":19,"value":909},"You are part of a research team working on a complex simulation software that models climate change. The software is developed collaboratively by a diverse group of scientists, each contributing to different modules (e.g., ocean temperature modeling, atmospheric chemistry, etc.). The team has faced issues with code integration, where new contributions occasionally break existing functionalities or cause unexpected results, leading to delays in their research. You are considering the adoption of ",{"type":13,"tag":458,"props":911,"children":912},{},[913],{"type":19,"value":914},"Continuous Integration",{"type":19,"value":375},{"type":13,"tag":21,"props":917,"children":919},{"id":918},"question",[920],{"type":19,"value":921},"Question",{"type":13,"tag":182,"props":923,"children":924},{},[925],{"type":19,"value":926},"Which of the following best describes Continuous Integration and its benefits for this project?",{"type":13,"tag":182,"props":928,"children":929},{},[930],{"type":19,"value":931},"a) Continuous Integration is a practice where team members work in isolation to ensure their code is perfect before integrating it once at the end of the project, helping to avoid conflicts and errors.",{"type":13,"tag":182,"props":933,"children":934},{},[935],{"type":19,"value":936},"b) Continuous Integration involves the use of specialized software to automatically translate code into multiple programming languages, making it more versatile and reducing workload.",{"type":13,"tag":182,"props":938,"children":939},{},[940],{"type":19,"value":941},"c) Continuous Integration is a development practice where team members frequently integrate their work, often several times a day, to detect and fix integration issues early, thereby improving collaboration and code quality.",{"type":13,"tag":182,"props":943,"children":944},{},[945],{"type":19,"value":946},"d) Continuous Integration is a method where team members manually review each other's code at the end of each day, ensuring that the code meets quality standards and is ready for client presentation.",{"type":13,"tag":182,"props":948,"children":949},{},[950],{"type":19,"value":951},"e) Continuous Integration refers to the continuous updating of software to incorporate user feedback and new features, ensuring the software evolves to meet user needs.",{"type":13,"tag":182,"props":953,"children":954},{},[955],{"type":13,"tag":191,"props":956,"children":957},{},[958],{"type":19,"value":959}," correct answer: c) ",{"title":7,"searchDepth":197,"depth":197,"links":961},[962,963],{"id":901,"depth":197,"text":904},{"id":918,"depth":197,"text":921},"github:modules:testing:04.exercise3.md","modules/testing/04.exercise3.md",{"_path":967,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":968,"description":7,"body":969,"_type":202,"_id":1133,"_source":204,"_file":1134,"_extension":206},"/modules/testing/reading","Reading material",{"type":10,"children":970,"toc":1119},[971,976,981,986,993,1006,1012,1024,1030,1042,1048,1060,1064,1069,1074,1085,1090,1101,1107],{"type":13,"tag":14,"props":972,"children":974},{"id":973},"reading-material",[975],{"type":19,"value":968},{"type":13,"tag":21,"props":977,"children":978},{"id":5},[979],{"type":19,"value":980},"Testing",{"type":13,"tag":182,"props":982,"children":983},{},[984],{"type":19,"value":985},"Follow the links below to read more about software testing.",{"type":13,"tag":987,"props":988,"children":990},"h3",{"id":989},"the-turing-way",[991],{"type":19,"value":992},"The Turing Way",{"type":13,"tag":182,"props":994,"children":995},{},[996,998,1005],{"type":19,"value":997},"Read in the Turing Way about ",{"type":13,"tag":244,"props":999,"children":1002},{"href":1000,"rel":1001},"https://the-turing-way.netlify.app/reproducible-research/testing",[248],[1003],{"type":19,"value":1004},"Code Testing",{"type":19,"value":375},{"type":13,"tag":987,"props":1007,"children":1009},{"id":1008},"code-refinery",[1010],{"type":19,"value":1011},"Code Refinery",{"type":13,"tag":182,"props":1013,"children":1014},{},[1015,1017],{"type":19,"value":1016},"Read in CodeRefinery about ",{"type":13,"tag":244,"props":1018,"children":1021},{"href":1019,"rel":1020},"https://coderefinery.github.io/testing/motivation/",[248],[1022],{"type":19,"value":1023},"Automated testing",{"type":13,"tag":987,"props":1025,"children":1027},{"id":1026},"ibm",[1028],{"type":19,"value":1029},"IBM",{"type":13,"tag":182,"props":1031,"children":1032},{},[1033,1035,1041],{"type":19,"value":1034},"Link to an ",{"type":13,"tag":244,"props":1036,"children":1038},{"href":246,"rel":1037},[248],[1039],{"type":19,"value":1040},"IBM article",{"type":19,"value":375},{"type":13,"tag":987,"props":1043,"children":1045},{"id":1044},"arxiv",[1046],{"type":19,"value":1047},"arXiv",{"type":13,"tag":182,"props":1049,"children":1050},{},[1051,1053],{"type":19,"value":1052},"Read this interesting article about ",{"type":13,"tag":244,"props":1054,"children":1057},{"href":1055,"rel":1056},"https://arxiv.org/abs/2205.15982",[248],[1058],{"type":19,"value":1059},"Testing Research Software",{"type":13,"tag":21,"props":1061,"children":1062},{"id":529},[1063],{"type":19,"value":532},{"type":13,"tag":182,"props":1065,"children":1066},{},[1067],{"type":19,"value":1068},"Follow the links below to read more about CI/CD.",{"type":13,"tag":987,"props":1070,"children":1072},{"id":1071},"the-turing-way-1",[1073],{"type":19,"value":992},{"type":13,"tag":182,"props":1075,"children":1076},{},[1077,1078,1084],{"type":19,"value":997},{"type":13,"tag":244,"props":1079,"children":1082},{"href":1080,"rel":1081},"https://the-turing-way.netlify.app/reproducible-research/ci",[248],[1083],{"type":19,"value":914},{"type":19,"value":375},{"type":13,"tag":987,"props":1086,"children":1088},{"id":1087},"code-refinery-1",[1089],{"type":19,"value":1011},{"type":13,"tag":182,"props":1091,"children":1092},{},[1093,1094],{"type":19,"value":1016},{"type":13,"tag":244,"props":1095,"children":1098},{"href":1096,"rel":1097},"https://coderefinery.github.io/testing/continuous-integration/",[248],[1099],{"type":19,"value":1100},"Continuous integration",{"type":13,"tag":987,"props":1102,"children":1104},{"id":1103},"bytebytego-newsletter",[1105],{"type":19,"value":1106},"ByteByteGo Newsletter",{"type":13,"tag":182,"props":1108,"children":1109},{},[1110,1112],{"type":19,"value":1111},"Read in ByteByteGo newsletter about ",{"type":13,"tag":244,"props":1113,"children":1116},{"href":1114,"rel":1115},"https://blog.bytebytego.com/p/a-crash-course-in-cicd",[248],[1117],{"type":19,"value":1118},"A Crash Course in CI/CD",{"title":7,"searchDepth":197,"depth":197,"links":1120},[1121,1128],{"id":5,"depth":197,"text":980,"children":1122},[1123,1125,1126,1127],{"id":989,"depth":1124,"text":992},3,{"id":1008,"depth":1124,"text":1011},{"id":1026,"depth":1124,"text":1029},{"id":1044,"depth":1124,"text":1047},{"id":529,"depth":197,"text":532,"children":1129},[1130,1131,1132],{"id":1071,"depth":1124,"text":992},{"id":1087,"depth":1124,"text":1011},{"id":1103,"depth":1124,"text":1106},"github:modules:testing:05.reading.md","modules/testing/05.reading.md",1712859737511]