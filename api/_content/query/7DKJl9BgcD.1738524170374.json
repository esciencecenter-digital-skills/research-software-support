[{"_path":"/modules/publication/joss_checklist","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Review your software","description":"In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then go trough the JOSS checklist reviewing the software.","type":"exercise","order":6,"_type":"markdown","_id":"local_fs:modules:publication:JOSS_checklist.md","_source":"local_fs","_file":"modules/publication/JOSS_checklist.md","_stem":"modules/publication/JOSS_checklist","_extension":"md","plainText":"---\ntitle: Review your software\ntype: exercise\norder: 6\n---\n\n# Review your software for publication\n\n*In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then go trough the JOSS checklist reviewing the software.*\n\n## Step 1: Choose a software project\n\nChoose a software project for this exercise, preferably one you are familiar with.\n\nIf you don't have a software in mind, you can use one of the following:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\n\n## Step 2: Fill the JOSS review checklist\n\nGet the [template checklist](https://github.com/openjournals/joss-reviews/blob/master/.buffy/templates/reviewer_checklist.md) used in the review process of [JOSS](https://joss.theoj.org/) and fill it out.\n\n### General checks\n\n- [ ] **Repository:** Is the source code for this software available at the {{target-repository}}?\n- [ ] **License:** Does the repository contain a plain-text LICENSE or COPYING file with the contents of an [OSI approved](https://opensource.org/licenses/alphabetical) software license?\n- [ ] **Contribution and authorship:** Has the submitting author ({{author-handle}}) made major contributions to the software? Does the full list of paper authors seem appropriate and complete?\n- [ ] **Substantial scholarly effort:** Does this submission meet the scope eligibility described in the [JOSS guidelines](https://joss.readthedocs.io/en/latest/submitting.html#substantial-scholarly-effort)\n- [ ] **Data sharing:** If the paper contains original data, data are accessible to the reviewers. If the paper contains no original data, please check this item.\n- [ ] **Reproducibility:** If the paper contains original results, results are entirely reproducible by reviewers. If the paper contains no original results, please check this item.\n- [ ] **Human and animal research:** If the paper contains original data research on humans subjects or animals, does it comply with [JOSS's human participants research policy and/or animal research policy](https://joss.readthedocs.io/en/latest/policies.html?highlight=animal#joss-policies)? If the paper contains no such data, please check this item.\n\n### Functionality\n\n- [ ] **Installation:** Does installation proceed as outlined in the documentation?\n- [ ] **Functionality:** Have the functional claims of the software been confirmed?\n- [ ] **Performance:** If there are any performance claims of the software, have they been confirmed? (If there are no claims, please check off this item.)\n\n### Documentation\n\n- [ ] **A statement of need**: Do the authors clearly state what problems the software is designed to solve and who the target audience is?\n- [ ] **Installation instructions:** Is there a clearly-stated list of dependencies? Ideally these should be handled with an automated package management solution.\n- [ ] **Example usage:** Do the authors include examples of how to use the software (ideally to solve real-world analysis problems).\n- [ ] **Functionality documentation:** Is the core functionality of the software documented to a satisfactory level (e.g., API method documentation)?\n- [ ] **Automated tests:** Are there automated tests or manual steps described so that the functionality of the software can be verified?\n- [ ] **Community guidelines:** Are there clear guidelines for third parties wishing to 1) Contribute to the software 2) Report issues or problems with the software 3) Seek support.\n\nSkip the last category *Software paper*\n\n## Step 3: How was the reviewing process?\n\nReflect on the difficulty of the review process.\nWhich advantages has this review process?\nAre there projects in which you are currently working that would pass this review?\n"},{"_path":"/modules/publication/slides-publication","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Publishing Software","description":"===","type":"slides","order":2,"_type":"markdown","_id":"local_fs:modules:publication:slides-publication.md","_source":"local_fs","_file":"modules/publication/slides-publication.md","_stem":"modules/publication/slides-publication","_extension":"md","plainText":"---\ntitle: Publishing Software\ntype: slides\norder: 2\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Publishing Software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Before we dive in...\n\nWhat do you already know about software publication? \n\nNote: Let participants discuss how they would publish a piece of software.\n\nAnswers can potentially be collected in a collaborative document.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What do we mean by publishing?\n\n* Publishing the *software itself* (not just publishing an article *about* it)\n* There are many ways to do this\n\nNote:\n\nThis generally means the source code itself, ideally including instructions on how to use it, what dependencies it has on other software, etc.\n\nThe goal is to allow others to find and use your code, if they so wish, without extreme levels of difficulty.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why Publish?\n\n* Major scientific considerations \n    * Citability\n    * Reproducibility\n* FAIRness\n<img src=\"media/fair.png\" width=\"30%\">\n\nNote:\n\nCitability - Allows the software authors to get credit for their work\nReproducibility - If software is not published anywhere then few people will successfully reproduce analyses, simulations or other research results that were performed by other researchers\n\nAdditionally, publishing is essential for meeting the FAIR principles:\nFindability - if software lives on someone's harddrive then it cannot be easily found by anyone\nAccessibility - the software can e.g. be downloaded and installed using a standard protocol (authentication is still a possibility)\nInteroperability - publishing the dependencies (e.g. software libraries) and input/output formats and versions is necessary for interoperability\nReusability - it's only reusable if it's available, and if people know what they are allowed to do with it (based on its software license)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Traditional publishing pipeline\n\n* Write some code and leave it on your harddrive\n* Generate scientific results with it\n* Write a paper about those results\n* Possibly not even mentioning the software at all\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Consequences\n\n* The software itself is not citable\n* Methods are not easily reproduced or even analysed\n* Nobody else can build on top of your research\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Modern publishing pipeline\n\n* Software repository\n* Tag/semantic versioning\n* Get a persistent identifier\n* Registries\n* Software Paper\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\n\nPut all source files in a public version-controlled repository\ne.g. GitHub, GitLab\n\n* Software is immediately Findable\n* Naturally contains a log of all development history\n\nInclude a software license, and a citation.cff file\n\nNote:\n\nSee license, citation and software management chapters\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\nWhich one?\n<img src=\"media/repository_logos.png\" width=\"80%\">\n\nNote:\n\nAnything is better than nothing. Gitlab and Github are the mainstream, used by many and with lots of features. You might run into projects using other repositories. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Tag/semantic versioning\n\nIt is important to communicate the actual version of the software used for a particular piece of research\n\nIf your software is used as a dependency of another software/workflow then specific versions can be referenced\n\nIdeally, use \"semantic versioning\" in the form MAJOR.MINOR.PATCH (e.g. v2.1.5)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Get a Persistent Identifier\n\nSpecific versions of the software should be published to an archiving service that provides persistent identifiers\n\nFor example, Zenodo is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable\n\nNote:\n\nSee Citation story\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Registries\nAdd a link to your software on a relevant public registry\n\n* For example, the eScience Center maintains the Research Software Directory\n* Can also be domain specific software registries\n* Or even list it on awesomelist\n\nThis aids greatly in Findability by relevant researchers\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software Paper\n\nPublish a journal article about the software specifically\n\n* Journal of Research Software (JORS)\n* Journal of Open Source Software (JOSS)\n* SoftwareX\n* CRAN\n\nSome journals perform peer review of the software in question\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Automate as many steps as possible!\n\nFor example, you can automate archiving on Zenodo by linking it to your github account\n\nSee instructions in the \"Automating software publication\" tab of this story\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"}]