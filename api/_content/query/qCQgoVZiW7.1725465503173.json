[{"_path":"/modules/fairsoftware/exercise1","_dir":"fairsoftware","_draft":false,"_partial":false,"_locale":"","title":"What is FAIR?","description":"","type":"exercise","order":2,"_type":"markdown","_id":"local_fs:modules:fairsoftware:exercise1.md","_source":"local_fs","_file":"modules/fairsoftware/exercise1.md","_extension":"md","plainText":"---\ntitle: What is FAIR?\ntype: exercise\norder: 2\n---\n\n## Exercise: What is FAIR?\n\n### FAIR principles (15 minutes)\n\nThe FAIR principles are:\n\n- **F**indable\n- **A**ccessible\n- **I**nteroperable\n- **R**eusable\n\nThey were originally introduced in [this paper by Wilkinson et al.](https://doi.org/10.1038/sdata.2016.18).\nThis paper is a good starting point to learn more about FAIR, but if you are already familiar with the concept, a quick skim of the paper should do.\nThe most important take-away from this particular paper is the point that FAIR, while originally a data-specific concept, was designed with other digital objects in mind as well.\n\n### FAIR software (10 minutes)\n\nTo extend the FAIR principles to software, the [FAIR 4 Research Software working group](https://force11.org/groups/fair-4-research-software-fair4rs-working-group/) was formed.\nTheir paper [Introducing the FAIR principles for research software](https://doi.org/10.1038/s41597-022-01710-x) describes in more practical terms how FAIR can be applied to software.\n\n#### You should now be able to\n\n- Understand the different facets of FAIR\n- Be aware of the machine-actionable nature of FAIR\n- Get a feeling for additional challenges that software poses to FAIR\n\n### FAIR software (20 minutes, optional)\n\nWhile the intepretation of the FAIR4RS working group has been the dominant set of principles since its publication, it was not the first attempt to apply FAIR to software.\n[This paper by Anna Lena Lamprecht et al.](https://doi.org/10.3233/ds-190026) was published a few years earlier, and also described an extension of the FAIR principles for software.\nThe paper is a more elaborate in its descriptions of software, the different aspects of software, and how they are or are not addressed by FAIR.\nIt is a good read if you want to get a deeper understanding of software and its relation to the FAIR principles.\n\n### Discussion\n\n- What are the differences between FAIR principles for data and software?\n- What challenges do you see in making software FAIR?\n- Why is FAIR software important?"},{"_path":"/modules/fairsoftware/exercise3","_dir":"fairsoftware","_draft":false,"_partial":false,"_locale":"","title":"FAIR in practice","description":"","type":"exercise","order":4,"_type":"markdown","_id":"local_fs:modules:fairsoftware:exercise3.md","_source":"local_fs","_file":"modules/fairsoftware/exercise3.md","_extension":"md","plainText":"---\ntitle: FAIR in practice\ntype: exercise\norder: 4\n---\n\n## Exercise: FAIR in practice\n\nRole playing exercise:\nOne person presents the software, the other person gives feedback.\n\nTasks for presenter:\n\n- What is the software about?\n- Who will use it?\n- What is the expected lifecycle of the software?\n- What potential users or applications are untapped?\n\nTasks for reviewer:\n\n- Which FAIR principles are addressed?\n- How can the software be made more FAIR?\n- What would be the next step (low-hanging fruit)?\n\nTogether:\n\n- Define the next steps for the software\n\n\nGoals:\n\n- Frame an assessment positively: always start with assessing the things that have been done that contribute to good management and FAIR software. This is crucial, as well as motivating."}]