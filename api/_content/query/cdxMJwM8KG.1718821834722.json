[{"_path":"/modules/publication/slides-publication","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Publishing Software","description":"===","type":"slides","order":2,"_type":"markdown","_id":"local_fs:modules:publication:slides-publication.md","_source":"local_fs","_file":"modules/publication/slides-publication.md","_extension":"md","plainText":"---\ntitle: Publishing Software\ntype: slides\norder: 2\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Publishing Software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What do we mean by publishing?\n\n* Publishing the *software itself* (not just publishing an article *about* it)\n* There are many ways to do this\n\nNote:\n\nThis generally means the source code itself, ideally including instructions on how to use it, what dependencies it has on other software, etc.\n\nThe goal is to allow others to find and use your code, if they so wish, without extreme levels of difficulty.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why Publish?\n\n* Major scientific considerations \n    * Citability\n    * Reproducibility\n* FAIRness\n<img src=\"media/fair.png\" width=\"30%\">\n\nNote:\n\nCitability - Allows the software authors to get credit for their work\nReproducibility - If software is not published anywhere then few people will successfully reproduce analyses, simulations or other research results that were performed by other researchers\n\nAdditionally, publishing is essential for meeting the FAIR principles:\nFindability - if software lives on someone's harddrive then it cannot be easily found by anyone\nAccessibility - the software can e.g. be downloaded and installed using a standard protocol (authentication is still a possibility)\nInteroperability - publishing the dependencies (e.g. software libraries) and input/output formats and versions is necessary for interoperability\nReusability - it's only reusable if it's available, and if people know what they are allowed to do with it (based on its software license)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Traditional publishing pipeline\n\n* Write some code and leave it on your harddrive\n* Generate scientific results with it\n* Write a paper about those results\n* Possibly not even mentioning the software at all\n\n### Consequences\n\n* The software itself is not citable\n* Methods are not easily reproduced or even analysed\n* Nobody else can build on top of your research\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Modern publishing pipeline\n\n* Software repository\n* Tag/semantic versioning\n* Get a persistent identifier\n* Registries\n* Software Paper\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\n\nPut all source files in a public version-controlled repository\ne.g. github, gitlab\n\n* Software is immediately Findable\n* Naturally contains a log of all development history\n\nInclude a software license, and a citation.cff file\n\nNote:\n\nSee license, citation and software management chapters\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\nWhich one?\n<img src=\"media/repository_logos.png\" width=\"80%\">\n\nNote:\n\nAnything is better than nothing. Gitlab and Github are the mainstream, used by many and with lots of features. You might run into projects using other repositories. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Tag/semantic versioning\n\nIt is important to communicate the actual version of the software used for a particular piece of research\n\nIf your software is used as a dependency of another software/workflow then specific versions can be referenced\n\nIdeally, use \"semantic versioning\" in the form MAJOR.MINOR.PATCH (e.g. v2.1.5)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Get a Persistent Identifier\n\nSpecific versions of the software should be published to an archiving service that provides persistent identifiers\n\nFor example, Zenodo is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable\n\nNote:\n\nSee Citation story\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Registries\nAdd a link to your software on a relevant public registry\n\n* For example, the eScience Center maintains the Research Software Directory\n* Can also be domain specific software registries\n* Or even list it on awesomelist\n\nThis aids greatly in Findability by relevant researchers\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software Paper\n\nPublish a journal article about the software specifically\n\n* Journal of Research Software (JORS)\n* Journal of Open Source Software (JOSS)\n* SoftwareX\n* CRAN\n\nSome journals perform peer review of the software in question\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Automate as many steps as possible!\n\nFor example, you can automate archiving on Zenodo by linking it to your github account\n\nSee instructions in the \"Automating software publication\" tab of this story\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/researchsoftware/exercise-is-it-research-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Research software?","description":"","type":"exercise","order":5,"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-is-it-research-software.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-is-it-research-software.md","_extension":"md","plainText":"---\ntitle: Research software?\ntype: exercise\norder: 5\n---\n\n## Exercise: Is it research software?\n\nUsing the definition of research software from the FAIR4RS working group, try to classify the following as \"research software\" or \"software in research\"\n\n### Example software tools\n\n#### Shape Preserving Local Histogram Modification Algorithm\n[An Analysis and Implementation of the Shape Preserving Local Histogram Modification Algorithm](https://doi.org/10.5201/ipol.2018.236) is a published article on [IPOL](https://www.ipol.im/). The source code implementing the algorithm is available for download.\n\nIs this \"research software\" or \"software in research\"?\n\n#### SciPy\n[SciPy](https://zbmath.org/software/6293) is open-source software for mathematics, science, and engineering.\nIt is also the name of a very popular conference on scientific programming with Python. The SciPy library depends on NumPy, which provides convenient and fast N-dimensional array manipulation.\nThe SciPy library is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines such as routines for numerical integration and optimization.\nTogether, they run on all popular operating systems, are quick to install, and are free of charge.\nNumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the worldâ€™s leading scientists and engineers.\n\nIs this \"research software\" or \"software in research\"?\n\n### Other software tools\nHow about other software tools you are familiar with?\nCan you provide an example of software you are familiar with, and then classify it as \"research software\" or \"software in research\"?\n"}]