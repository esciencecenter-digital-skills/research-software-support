[{"_path":"/modules/researchsoftware/info","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Learning Objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are the similarities and differences between software and data?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is the difference between \"Research Software\" and \"software in research\"?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why are these distinctions important and useful? How do I effectively communicate that to researchers?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:info.md","_source":"local_fs","_file":"modules/researchsoftware/info.md","_stem":"modules/researchsoftware/info","_extension":"md","plainText":"---\ntitle: Learning Objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What are the similarities and differences between software and data?\n- What is the difference between \"Research Software\" and \"software in research\"?\n- Why are these distinctions important and useful? How do I effectively communicate that to researchers?\n"},{"_path":"/modules/researchsoftware/slides-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"What is Software?","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"what-is-software"},"children":[{"type":"text","value":"What is software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"some-history"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"img","props":{"className":["rotate-90"],"src":"media/Lochkarte_Tanzorgel_cutout.jpg","width":"40%","dataRotate":"90"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://www.wikidata.org/wiki/Q106975068"},"children":[{"type":"text","value":"Stefan Kuhn"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWho knows what this is?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See next slide for explanation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-history-1"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"img","props":{"className":[],"src":"media/Lochkarte_Tanzorgel.jpg","width":"40%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://www.wikidata.org/wiki/Q106975068"},"children":[{"type":"text","value":"Stefan Kuhn"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nA street organ's machinery is instructed by long \"books\" of cardboard with holes punched in it. Each hole triggers one specific note and/or instrument to play in the organ. In this way the organ can be \"programmed\" and the punch book can be considered the software of the organ."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-history-2"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/wbLuMd5zYww?si=a_eppMknE5TOFPCY&start=277","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275"},"children":[]},{"type":"element","tag":"a","props":{"href":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275","rel":["nofollow"]},"children":[{"type":"text","value":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nA long book of cardboard with holes punched in it is used to give the street organ instructions on which mechanical instruments should play what note at which time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/Punch-card-cobol.jpg","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by Rainer Gerhards on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Punch-card-cobol.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWho knows what this is? Looks similar to the previous thing, right? This is software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history-1"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/kaQmAybWn-w?si=OxhzN1myjx6d4vZt&start=540","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540"},"children":[{"type":"text","value":"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThis software was written using special typewriters that would punch holes in cardboard cards. It would encode instructions to the computer hardware, in this case the hardware is a UNIVAC 90/30 (1974). One punchcard from the old UNIVAC 90/30 system would hold a single line of code. A program usually consisted of a whole stack of these cards."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history-2"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/SYpPPIsxq64?si=ixgCa3fUJY5ccAkE&start=793","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793"},"children":[{"type":"text","value":"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThese punchcards would be loaded into the computer to instruct which parts of the hardware should act in which way and when. In this video, you see an even older computer, the Harwell Dekatron or W.I.T.C.H. (1952), which reads its software from perforated paper tape."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-today"},"children":[{"type":"text","value":"Software today"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/modern-software.avif","width":"55%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@thisisengineering"},"children":[{"type":"text","value":"ThisisEngineering"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/black-flat-screen-computer-monitor-hoivM01c-vg?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nQ: In what way is modern software different from historic punch-card \"software\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some possible answers:\nThese days, software usually gets written using a computer, in a text editor program, so the act of writing software requires software itself. The software is stored in memory and on a hard disk rather than on cardboard (remember, one card per line...). Modern software often builds on other software, or used specific parts of other software packages, rather than re-defining the wheel."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, it ultimately still basically does the same: Software is a set of instructions that tells hardware what to do."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"complexity-of-modern-software"},"children":[{"type":"text","value":"Complexity of modern software"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/VScode_snapshot.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Screenshot of source code for "},{"type":"element","tag":"a","props":{"href":"https://github.com/DeepRank/deeprank2"},"children":[{"type":"text","value":"DeepRank2"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn this image, we can get a glimpse of the complexity of modern software. We can see that software has a certain structure (indicated by differently colored text), is often composed of many lines of code (right side of image shows the entire length of the code), and is split over multiple intercommunicating files (left)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-form-of-data"},"children":[{"type":"text","value":"Software is a form of data"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/data_definition.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Definition by "},{"type":"element","tag":"a","props":{"href":"https://www.merriam-webster.com/dictionary/data/"},"children":[{"type":"text","value":"Merriam Webster English Dictionary"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-is-data"},"children":[{"type":"text","value":"Software is data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software can be ..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stored as bits"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"read, loaded, and processed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"input and/or output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"can be assigned a DOI, licence, etc"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is stored as bits and read from disk, loaded into memory, and processed similar to other types of data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software can be input, and software can be output. In fact, one of the major breakthroughs in computer science was when people realized that the instructions of the machine could be handled and stored the same as the data that it operated on."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"but"},"children":[{"type":"text","value":"BUT"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-special-type-of-data"},"children":[{"type":"text","value":"Software is a special type of data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"complex"}]},{"type":"text","value":": it is creatively generated, interconnected, and multi-layered"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"interdependent"}]},{"type":"text","value":": it builds upon and therefore depends on other software (and data)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"executable"}]},{"type":"text","value":": it needs to be run to have a value (e.g. to process data)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"dynamic"}]},{"type":"text","value":": it can (and will) break soon and therefore needs to be regularly updated"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWhile technically, software is a special kind of data (in that it is representation of information in a digital state), they are in essence quite different."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Complexity; it is not a single file, but a collection of files that are interconnected and multi-layered, and do not necessarily stand on their own. Software is also the result of a creative process that provides a tool to do something, and not the result of a measurement or observation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Interdependence; software is often built using other software, and rarely built completely from scratch. This makes it dependent on other existing applications, which themselves may also change over time. In the context of research software it also often depends on the data, data formats, data standards, metadata, etc, which also change when new equipment becomes available."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Executability; software is in its dryest form a set of instructions that can be an archive of a procedure. However, the main goal of software is that these instructions can be executed. While most forms of data can stand on their own (e.g. I can look at the list of ages of all the people in a room and make conclusions about average age, etc.), software cannot be directly interpreted (only in the context of what it does)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dynamic vs static; its interdependence and context-dependency drives software to require maintenance to retain its value, and this maintenance is not straightforward. Versioning of software is very common, while data is often static (though versions may happen)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-requires-dedicated-maintenance"},"children":[{"type":"text","value":"Software requires dedicated maintenance"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software needs to be actively maintained to remain useable.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is contrary to 'regular' data, which is expected to remain static forever."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maintenance is often lacking in academic contexts\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of funding"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of incentives/rewards"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of understanding and expertise (maintenance is a different from creation)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"individualistic work with fast turnover"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\n'Regular' data can sometimes be versioned, but this is more the exception than the rule."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Regarding the reasons for lack of maintenance:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"funding opportunities for this do exist, but are rare and usually only for large projects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"while you can sometimes publish a major update to a software package, this is also rare, and will even more rarely result in a high-impact/highly cited paper. it is also not highly appreciated e.g. on a CV."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"while academics can often create software that \"does the job\" well, a different skillset is required to maintain the software (or write it in a way to facilitate maintenance)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"academics often work on projects by themselves and then move on soon after their papers are published, leaving a knowledge gap for others to maintain the software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-vs-data-management"},"children":[{"type":"text","value":"Software vs data management"}]},{"type":"element","tag":"ul","props":{"style":"margin-bottom: 20px;"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"living thing"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Good data management will not ensure good software management"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"While some FAIR data management practices apply directly to software, others do not apply as easily\n    "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"see "},{"type":"element","tag":"a","props":{"href":"https://www.nature.com/articles/s41597-022-01710-x"},"children":[{"type":"text","value":"FAIR software paper"}]}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a thriving open-software community that has generated many tools and standards to facilitate good practices"}]}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/FAIR-software-paper.png","width":"40%","alt":"FAIR Software Paper","style":"display: block; border-style: none; margin: 0 auto;"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThe different nature of software also provides opportunities but also requires extra thought on its management.\nSoftware is a living thing, and therefore it is easier to adopt good practices early on.\nCrucially, there is a community driven openness in software that long predates the open science movement.\nThis is not to say that software is inherently open, but that there is a broad open culture, which also comes with existing tools and pathways to facilitate openness and transparency.\nConsider GitHub (and other code hosting platforms), which are designed for this purpose.\nConsider also version control software, a good software development practice that builds in provenance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software are the instructions that tell the hardware (computer) what to do"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a 'living thing'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We need extra and different techniques for good software management"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"some-history","depth":2,"text":"Some history"},{"id":"some-history-1","depth":2,"text":"Some history"},{"id":"some-history-2","depth":2,"text":"Some history"},{"id":"some-more-history","depth":2,"text":"Some more history"},{"id":"some-more-history-1","depth":2,"text":"Some more history"},{"id":"some-more-history-2","depth":2,"text":"Some more history"},{"id":"software-today","depth":2,"text":"Software today"},{"id":"complexity-of-modern-software","depth":2,"text":"Complexity of modern software"},{"id":"software-is-a-form-of-data","depth":2,"text":"Software is a form of data"},{"id":"software-is-data","depth":2,"text":"Software is data"},{"id":"but","depth":2,"text":"BUT"},{"id":"software-is-a-special-type-of-data","depth":2,"text":"Software is a special type of data"},{"id":"software-requires-dedicated-maintenance","depth":2,"text":"Software requires dedicated maintenance"},{"id":"software-vs-data-management","depth":2,"text":"Software vs data management"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:slides-software.md","_source":"local_fs","_file":"modules/researchsoftware/slides-software.md","_stem":"modules/researchsoftware/slides-software","_extension":"md","plainText":"---\ntitle: What is Software?\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# What is software?\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<img class=\"rotate-90\" src=\"media/Lochkarte_Tanzorgel_cutout.jpg\"  width=\"40%\" data-rotate=\"90\">\n\n<small>Photo by <a href=\"https://www.wikidata.org/wiki/Q106975068\">Stefan Kuhn</a> on <a href=\"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg\">Wikimedia</a>\n</small>\n\n\nNote:\nWho knows what this is?\n\nSee next slide for explanation.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<img class=\"\" src=\"media/Lochkarte_Tanzorgel.jpg\"  width=\"40%\">\n\n<small>Photo by <a href=\"https://www.wikidata.org/wiki/Q106975068\">Stefan Kuhn</a> on <a href=\"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg\">Wikimedia</a>\n</small>\n\n\nNote:\nA street organ's machinery is instructed by long \"books\" of cardboard with holes punched in it. Each hole triggers one specific note and/or instrument to play in the organ. In this way the organ can be \"programmed\" and the punch book can be considered the software of the organ.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wbLuMd5zYww?si=a_eppMknE5TOFPCY&amp;start=277\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<small><a href=\"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275\">https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nA long book of cardboard with holes punched in it is used to give the street organ instructions on which mechanical instruments should play what note at which time. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<img src=\"media/Punch-card-cobol.jpg\" width=\"55%\">\n\n<small>Photo by Rainer Gerhards on <a href=\"https://commons.wikimedia.org/wiki/File:Punch-card-cobol.jpg\">Wikimedia</a>\n</small>\n\n\n<!-- Speaker notes -->\nNote:\nWho knows what this is? Looks similar to the previous thing, right? This is software.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kaQmAybWn-w?si=OxhzN1myjx6d4vZt&amp;start=540\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<small><a href=\"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540\">https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nThis software was written using special typewriters that would punch holes in cardboard cards. It would encode instructions to the computer hardware, in this case the hardware is a UNIVAC 90/30 (1974). One punchcard from the old UNIVAC 90/30 system would hold a single line of code. A program usually consisted of a whole stack of these cards.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/SYpPPIsxq64?si=ixgCa3fUJY5ccAkE&amp;start=793\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<small><a href=\"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793\">https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nThese punchcards would be loaded into the computer to instruct which parts of the hardware should act in which way and when. In this video, you see an even older computer, the Harwell Dekatron or W.I.T.C.H. (1952), which reads its software from perforated paper tape. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Software today\n\n<img src=\"media/modern-software.avif\" width=\"55%\">\n<small>Photo by <a href=\"https://unsplash.com/@thisisengineering\">ThisisEngineering</a> on <a href=\"https://unsplash.com/photos/black-flat-screen-computer-monitor-hoivM01c-vg?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash\">Unsplash</a></small>\n\n\n<!-- Speaker notes -->\nNote:\nQ: In what way is modern software different from historic punch-card \"software\"\n\nSome possible answers:\nThese days, software usually gets written using a computer, in a text editor program, so the act of writing software requires software itself. The software is stored in memory and on a hard disk rather than on cardboard (remember, one card per line...). Modern software often builds on other software, or used specific parts of other software packages, rather than re-defining the wheel.\n\nHowever, it ultimately still basically does the same: Software is a set of instructions that tells hardware what to do.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Complexity of modern software\n\n<img src=\"media/VScode_snapshot.png\" width=\"70%\">\n<small>Screenshot of source code for <a href=\"https://github.com/DeepRank/deeprank2\">DeepRank2</a></small>\n\n<!-- Speaker notes -->\nNote:\nIn this image, we can get a glimpse of the complexity of modern software. We can see that software has a certain structure (indicated by differently colored text), is often composed of many lines of code (right side of image shows the entire length of the code), and is split over multiple intercommunicating files (left).\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Software is a form of data\n\n<img src=\"media/data_definition.png\" width=\"70%\">\n<small>Definition by <a href=\"https://www.merriam-webster.com/dictionary/data/\">Merriam Webster English Dictionary</a></small>\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software is data\n\nSoftware can be ...\n\n- stored as bits\n- read, loaded, and processed\n- input and/or output\n- can be assigned a DOI, licence, etc\n\n<!-- Speaker notes -->\nNote:\n- Software is stored as bits and read from disk, loaded into memory, and processed similar to other types of data. \n- Software can be input, and software can be output. In fact, one of the major breakthroughs in computer science was when people realized that the instructions of the machine could be handled and stored the same as the data that it operated on. \n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## BUT\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software is a special type of data\n\nSoftware is...\n\n- **complex**: it is creatively generated, interconnected, and multi-layered\n- **interdependent**: it builds upon and therefore depends on other software (and data)\n- **executable**: it needs to be run to have a value (e.g. to process data)\n- **dynamic**: it can (and will) break soon and therefore needs to be regularly updated \n\n<!-- Speaker notes -->\nNote:\nWhile technically, software is a special kind of data (in that it is representation of information in a digital state), they are in essence quite different.\n\n- Complexity; it is not a single file, but a collection of files that are interconnected and multi-layered, and do not necessarily stand on their own. Software is also the result of a creative process that provides a tool to do something, and not the result of a measurement or observation.\n- Interdependence; software is often built using other software, and rarely built completely from scratch. This makes it dependent on other existing applications, which themselves may also change over time. In the context of research software it also often depends on the data, data formats, data standards, metadata, etc, which also change when new equipment becomes available.\n- Executability; software is in its dryest form a set of instructions that can be an archive of a procedure. However, the main goal of software is that these instructions can be executed. While most forms of data can stand on their own (e.g. I can look at the list of ages of all the people in a room and make conclusions about average age, etc.), software cannot be directly interpreted (only in the context of what it does).\n- Dynamic vs static; its interdependence and context-dependency drives software to require maintenance to retain its value, and this maintenance is not straightforward. Versioning of software is very common, while data is often static (though versions may happen).\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software requires dedicated maintenance\n\n- Software needs to be actively maintained to remain useable.\n  - This is contrary to 'regular' data, which is expected to remain static forever.\n- Maintenance is often lacking in academic contexts\n  - lack of funding\n  - lack of incentives/rewards\n  - lack of understanding and expertise (maintenance is a different from creation)\n  - individualistic work with fast turnover\n\n\n<!-- Speaker notes -->\nNote:\n'Regular' data can sometimes be versioned, but this is more the exception than the rule.\n\nRegarding the reasons for lack of maintenance:\n- funding opportunities for this do exist, but are rare and usually only for large projects\n- while you can sometimes publish a major update to a software package, this is also rare, and will even more rarely result in a high-impact/highly cited paper. it is also not highly appreciated e.g. on a CV.\n- while academics can often create software that \"does the job\" well, a different skillset is required to maintain the software (or write it in a way to facilitate maintenance)\n- academics often work on projects by themselves and then move on soon after their papers are published, leaving a knowledge gap for others to maintain the software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software vs data management\n\n<ul style=\"margin-bottom: 20px;\">\n  <li>Software is a <strong>living thing</strong></li>\n  <li>Good data management will not ensure good software management</li>\n  <li>While some FAIR data management practices apply directly to software, others do not apply as easily\n    <ul>\n      <li>see <a href=\"https://www.nature.com/articles/s41597-022-01710-x\">FAIR software paper</a></li>\n    </ul>\n  </li>\n  <li>There is a thriving open-software community that has generated many tools and standards to facilitate good practices</li>\n</ul>\n\n<img src=\"media/FAIR-software-paper.png\" width=\"40%\" alt=\"FAIR Software Paper\" style=\"display: block; border-style: none; margin: 0 auto;\">\n\nNote:\nThe different nature of software also provides opportunities but also requires extra thought on its management.\nSoftware is a living thing, and therefore it is easier to adopt good practices early on.\nCrucially, there is a community driven openness in software that long predates the open science movement.\nThis is not to say that software is inherently open, but that there is a broad open culture, which also comes with existing tools and pathways to facilitate openness and transparency.\nConsider GitHub (and other code hosting platforms), which are designed for this purpose.\nConsider also version control software, a good software development practice that builds in provenance.\n\n===\n\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software are the instructions that tell the hardware (computer) what to do\n- Software is a 'living thing'\n- We need extra and different techniques for good software management\n\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/researchsoftware/exercise-writing-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Writing Software","description":"","type":"exercise","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"writing-software-with-python-10-minutes"},"children":[{"type":"text","value":"Writing software with Python (10 minutes)"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/python-online.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"https://www.online-python.com/"}]},{"type":"element","tag":"h3","props":{"id":"if-you-have-never-written-software-before"},"children":[{"type":"text","value":"If you have never written software before:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Visit "},{"type":"element","tag":"a","props":{"href":"https://www.online-python.com/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.online-python.com/"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"it will show you as an example the code for a function that adds items together."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Play around with the code a bit, e.g.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Try using words instead of numbers as inputs. What happens and why?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add a function that subtracts items rather than adding them. What happens now if you use words instead of numbers, and why?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What else can you do?"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"if-you-have-experience-in-writing-software"},"children":[{"type":"text","value":"If you have experience in writing software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Buddy up with someone from the above group."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use the 4-eye principle (pair programming), to watch what they are doing and help them figure out what is going on and why."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Try to be conscious in explaining what is important and what your buddy needs to know without overcomplicating matters or taking over the keyboard."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"writing-software-with-python-10-minutes","depth":2,"text":"Writing software with Python (10 minutes)","children":[{"id":"if-you-have-never-written-software-before","depth":3,"text":"If you have never written software before:"},{"id":"if-you-have-experience-in-writing-software","depth":3,"text":"If you have experience in writing software:"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-writing-software.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-writing-software.md","_stem":"modules/researchsoftware/exercise-writing-software","_extension":"md","plainText":"---\ntitle: Writing Software\ntype: exercise\norder: 2\n---\n\n## Writing software with Python (10 minutes)\n\n<img src=\"media/python-online.png\" width=\"70%\">\n<small>https://www.online-python.com/</small>\n\n### If you have never written software before:\n\n- Visit https://www.online-python.com/\n  - it will show you as an example the code for a function that adds items together.\n- Play around with the code a bit, e.g.\n  - Try using words instead of numbers as inputs. What happens and why?\n  - Add a function that subtracts items rather than adding them. What happens now if you use words instead of numbers, and why?\n  - What else can you do?\n\n### If you have experience in writing software:\n\n- Buddy up with someone from the above group.\n- Use the 4-eye principle (pair programming), to watch what they are doing and help them figure out what is going on and why.\n- Try to be conscious in explaining what is important and what your buddy needs to know without overcomplicating matters or taking over the keyboard.\n"},{"_path":"/modules/researchsoftware/slides-researchsoftware","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Research Software","description":"===","type":"slides","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"research-software"},"children":[{"type":"text","value":"Research software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"ceci-nest-pas-une-photo"},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Ceci n'est pas une photo"}]}]},{"type":"element","tag":"img","props":{"src":"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Black_hole_-_Messier_87_crop_max_res.jpg/1280px-Black_hole_-_Messier_87_crop_max_res.jpg","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.3847/2041-8213/ab0ec7","rel":["nofollow"]},"children":[{"type":"text","value":"The Event Horizon Telescope Collaboration et al. 2019"}]},{"type":"text","value":" (CC BY 3.0)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software plays an important role in science. A first thought may be its role in data collection and analysis. Further, it may play a role in designing experiments, based on models generated. It may "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"be"}]},{"type":"text","value":" the experiment itself, simulate a research outcome based on data or ideas entered; it may also be the \"brain\" behind controlling crucial instrumentation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What scientific software can you think of?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What role does it play?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An example here: the Event Horizon Telescope, which took a \"picture\" of a black hole.\nThe \"telescope\" is not a single tool, but complex: a \"planet-scale array of eight ground-based radio telescopes\" (wikipedia).\nThe separate telescopes collect data that is synchronized with atomic clocks, and the data is combined at highly specialised supercomputers.\nThe data can be converted into an image using custom software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is software used?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is used all across the research life cycle."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-is-research-software"},"children":[{"type":"text","value":"What is Research Software?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/definition.png","width":"50%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"definition of Research Software from the FAIR4RS working group"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A definition of research software, from the FAIR4RS working group.\nIt is important that not all software that is used in research is research software.\nFor example, a text editor that is used to write a paper is not research software.\nNor is powerpoint, a web browser, or the software used to guide the telescope.\nEven tools like R or Python are not necessarily research software.\nThe code written in R or Python for an analysis would be research software, however.\nJust like a custom-made Excel macro that is used to analyse data.\nOr a custom-made web application that is used to collect data."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle-1"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Research Software"}]}]},{"type":"text","value":" used?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Research Software is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainly"}]},{"type":"text","value":" used in \"Collecting\" and \"Processing & analyzing\" steps.\nHowever, non-research software can also be used in these steps, and research software can also be used in other steps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle-2"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Research Software"}]}]},{"type":"text","value":" used?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/research-cycle-RS.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Research Software is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainly"}]},{"type":"text","value":" used in \"Collecting\" and \"Processing & analyzing\" steps.\nHowever, non-research software can also be used in these steps, and research software can also be used in other steps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-the-distinction"},"children":[{"type":"text","value":"Why the distinction?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defining Research Software..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Acknowledges its importance during research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Designates it as research output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enables proper attribution"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Facilitates findability and reusability"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By defining research software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we can more easily justify and emphasize how essential it is while doing research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we can emphasize that creating (good) research software is an essential part of research and that the product is a true \"deliverable\" e.g. in grant applications"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we give the opportunity for the developers to gain (citable) recognition for their work"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"by tagging software as \"research software\", we make it more (computer) findable, and therefor more easily reused"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is an important part of research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not all software used in research is Research Software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Defining \"Research Software\" provides recognition in the research community"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"ceci-nest-pas-une-photo","depth":2,"text":"Ceci n'est pas une photo"},{"id":"the-research-lifecycle","depth":2,"text":"The research lifecycle","children":[{"id":"what-is-research-software","depth":3,"text":"What is Research Software?"}]},{"id":"the-research-lifecycle-1","depth":2,"text":"The research lifecycle"},{"id":"the-research-lifecycle-2","depth":2,"text":"The research lifecycle"},{"id":"why-the-distinction","depth":2,"text":"Why the distinction?"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:slides-researchsoftware.md","_source":"local_fs","_file":"modules/researchsoftware/slides-researchsoftware.md","_stem":"modules/researchsoftware/slides-researchsoftware","_extension":"md","plainText":"---\ntitle: Research Software\ntype: slides\norder: 3\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Research software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## *Ceci n'est pas une photo*\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Black_hole_-_Messier_87_crop_max_res.jpg/1280px-Black_hole_-_Messier_87_crop_max_res.jpg\" width=\"55%\">\n\n<small>[The Event Horizon Telescope Collaboration et al. 2019](https://doi.org/10.3847/2041-8213/ab0ec7) (CC BY 3.0)</small>\n\nNote:\n\nSoftware plays an important role in science. A first thought may be its role in data collection and analysis. Further, it may play a role in designing experiments, based on models generated. It may _be_ the experiment itself, simulate a research outcome based on data or ideas entered; it may also be the \"brain\" behind controlling crucial instrumentation.\n\nWhat scientific software can you think of?\n\nWhat role does it play?\n\nAn example here: the Event Horizon Telescope, which took a \"picture\" of a black hole.\nThe \"telescope\" is not a single tool, but complex: a \"planet-scale array of eight ground-based radio telescopes\" (wikipedia).\nThe separate telescopes collect data that is synchronized with atomic clocks, and the data is combined at highly specialised supercomputers.\nThe data can be converted into an image using custom software.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\nIn which stages is software used?\n\nNote:\n\nSoftware is used all across the research life cycle.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What is Research Software?\n\n<img src=\"media/definition.png\" width=\"50%\">\n\n<small>definition of Research Software from the FAIR4RS working group</small>\n\nNote:\n\nA definition of research software, from the FAIR4RS working group.\nIt is important that not all software that is used in research is research software.\nFor example, a text editor that is used to write a paper is not research software.\nNor is powerpoint, a web browser, or the software used to guide the telescope.\nEven tools like R or Python are not necessarily research software.\nThe code written in R or Python for an analysis would be research software, however.\nJust like a custom-made Excel macro that is used to analyse data.\nOr a custom-made web application that is used to collect data.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\nIn which stages is ***Research Software*** used?\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\n\nNote:\n\nResearch Software is *mainly* used in \"Collecting\" and \"Processing & analyzing\" steps. \nHowever, non-research software can also be used in these steps, and research software can also be used in other steps.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\nIn which stages is ***Research Software*** used?\n\n<img src=\"media/research-cycle-RS.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\n\nNote:\n\nResearch Software is *mainly* used in \"Collecting\" and \"Processing & analyzing\" steps. \nHowever, non-research software can also be used in these steps, and research software can also be used in other steps.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why the distinction?\n\nDefining Research Software...\n\n- Acknowledges its importance during research\n- Designates it as research output\n- Enables proper attribution\n- Facilitates findability and reusability\n\nNote:\n\nBy defining research software:\n\n- we can more easily justify and emphasize how essential it is while doing research\n- we can emphasize that creating (good) research software is an essential part of research and that the product is a true \"deliverable\" e.g. in grant applications\n- we give the opportunity for the developers to gain (citable) recognition for their work\n- by tagging software as \"research software\", we make it more (computer) findable, and therefor more easily reused\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software is an important part of research\n- Not all software used in research is Research Software\n- Defining \"Research Software\" provides recognition in the research community\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/researchsoftware/exercise-is-it-research-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Is it Research Software?","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-is-it-research-software"},"children":[{"type":"text","value":"Exercise: Is it research software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using the definition of research software from the FAIR4RS working group, try to classify the following as \"research software\" or \"software in research\""}]},{"type":"element","tag":"h3","props":{"id":"example-software-tools"},"children":[{"type":"text","value":"Example software tools"}]},{"type":"element","tag":"h4","props":{"id":"shape-preserving-local-histogram-modification-algorithm"},"children":[{"type":"text","value":"Shape Preserving Local Histogram Modification Algorithm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5201/ipol.2018.236","rel":["nofollow"]},"children":[{"type":"text","value":"An Analysis and Implementation of the Shape Preserving Local Histogram Modification Algorithm"}]},{"type":"text","value":" is a published article on "},{"type":"element","tag":"a","props":{"href":"https://www.ipol.im/","rel":["nofollow"]},"children":[{"type":"text","value":"IPOL"}]},{"type":"text","value":". The source code implementing the algorithm is available for download."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Is this \"research software\" or \"software in research\"?"}]},{"type":"element","tag":"h4","props":{"id":"scipy"},"children":[{"type":"text","value":"SciPy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zbmath.org/software/6293","rel":["nofollow"]},"children":[{"type":"text","value":"SciPy"}]},{"type":"text","value":" is open-source software for mathematics, science, and engineering.\nIt is also the name of a very popular conference on scientific programming with Python. The SciPy library depends on NumPy, which provides convenient and fast N-dimensional array manipulation.\nThe SciPy library is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines such as routines for numerical integration and optimization.\nTogether, they run on all popular operating systems, are quick to install, and are free of charge.\nNumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the world’s leading scientists and engineers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Is this \"research software\" or \"software in research\"?"}]},{"type":"element","tag":"h3","props":{"id":"other-software-tools"},"children":[{"type":"text","value":"Other software tools"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How about other software tools you are familiar with?\nCan you provide an example of software you are familiar with, and then classify it as \"research software\" or \"software in research\"?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-is-it-research-software","depth":2,"text":"Exercise: Is it research software?","children":[{"id":"example-software-tools","depth":3,"text":"Example software tools"},{"id":"other-software-tools","depth":3,"text":"Other software tools"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-is-it-research-software.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-is-it-research-software.md","_stem":"modules/researchsoftware/exercise-is-it-research-software","_extension":"md","plainText":"---\ntitle: Is it Research Software?\ntype: exercise\norder: 5\n---\n\n## Exercise: Is it research software?\n\nUsing the definition of research software from the FAIR4RS working group, try to classify the following as \"research software\" or \"software in research\"\n\n### Example software tools\n\n#### Shape Preserving Local Histogram Modification Algorithm\n[An Analysis and Implementation of the Shape Preserving Local Histogram Modification Algorithm](https://doi.org/10.5201/ipol.2018.236) is a published article on [IPOL](https://www.ipol.im/). The source code implementing the algorithm is available for download.\n\nIs this \"research software\" or \"software in research\"?\n\n#### SciPy\n[SciPy](https://zbmath.org/software/6293) is open-source software for mathematics, science, and engineering.\nIt is also the name of a very popular conference on scientific programming with Python. The SciPy library depends on NumPy, which provides convenient and fast N-dimensional array manipulation.\nThe SciPy library is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines such as routines for numerical integration and optimization.\nTogether, they run on all popular operating systems, are quick to install, and are free of charge.\nNumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the world’s leading scientists and engineers.\n\nIs this \"research software\" or \"software in research\"?\n\n### Other software tools\nHow about other software tools you are familiar with?\nCan you provide an example of software you are familiar with, and then classify it as \"research software\" or \"software in research\"?\n"},{"_path":"/modules/researchsoftware/exercise-research-life-cycle","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Research Life Cycle","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-where-does-software-fit-in-the-research-life-cycle"},"children":[{"type":"text","value":"Exercise: Where does software fit in the research life cycle?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Take a look at the research life cycle below."}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":400},"children":[]},{"type":"element","tag":"h3","props":{"id":"pick-a-piece-of-software"},"children":[{"type":"text","value":"Pick a piece of software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Think of a piece of software you have heard about, used, contributed to or developed in a research context."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following research software can also be used as examples:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"h3","props":{"id":"answer-the-following-questions"},"children":[{"type":"text","value":"Answer the following questions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Write a short paragraph (max. 100 words) per question:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Would you consider this Research Software or Software used in Research? Explain why."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Where does it fit in the research life cycle? Explain why."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-where-does-software-fit-in-the-research-life-cycle","depth":2,"text":"Exercise: Where does software fit in the research life cycle?","children":[{"id":"pick-a-piece-of-software","depth":3,"text":"Pick a piece of software"},{"id":"answer-the-following-questions","depth":3,"text":"Answer the following questions"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-research-life-cycle.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-research-life-cycle.md","_stem":"modules/researchsoftware/exercise-research-life-cycle","_extension":"md","plainText":"---\ntitle: Research Life Cycle\ntype: exercise\norder: 5\n---\n\n## Exercise: Where does software fit in the research life cycle?\n\nTake a look at the research life cycle below.\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"400\"/>\n\n### Pick a piece of software\n\nThink of a piece of software you have heard about, used, contributed to or developed in a research context.\n\nThe following research software can also be used as examples:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\n### Answer the following questions \nWrite a short paragraph (max. 100 words) per question:\n\n- Would you consider this Research Software or Software used in Research? Explain why.\n- Where does it fit in the research life cycle? Explain why.\n"},{"_path":"/modules/researchsoftware/further-reading","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Further Reading","description":"","type":"reading","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-and-data"},"children":[{"type":"text","value":"Software and data"}]},{"type":"element","tag":"h2","props":{"id":"software-is-data"},"children":[{"type":"text","value":"Software is data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In computer science, the fact that software is data is considered one of the fundamental concepts of computing. The fact that the thing that operates the machine (software) is the same kind of thing as the thing it operates on (data) is definitely one of the strengths of current computersystems and one of the main reasons why we can do such complex and powerful things with the combination of hardware and software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following blogpost discusses why this concept is so powerful: "},{"type":"element","tag":"a","props":{"href":"https://www.blackliszt.com/2014/04/fundamental-concepts-of-computing-software-is-data.html","rel":["nofollow"]},"children":[{"type":"text","value":"Fundamental Concepts of Computing: Software is Data!"}]}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-special-type-of-data"},"children":[{"type":"text","value":"Software is a special type of data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However for most practical purposes in most domains of scientific research (except maybe the domain of computer science) it is useful to make a distinction between the data that is software and other data. From now on, when we use the word data, we mean the kind fo data which is not software and which we use to store more static information."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is executable, data is not."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Data provides information or evidence, software provides a tool to do work on the data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a creative work, scientific data are facts or observations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The lifetime of software is generally not as long as that of data."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/danielskatz/software-vs-data","rel":["nofollow"]},"children":[{"type":"text","value":"Software vs Data"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.7287/peerj.preprints.2630v1","rel":["nofollow"]},"children":[{"type":"text","value":"Software vs. data in the context of citation"}]}]},{"type":"element","tag":"h2","props":{"id":"the-role-of-research-software"},"children":[{"type":"text","value":"The role of Research Software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following piece was written after a workshop called \"The Future of Research Software\", held in the Netherlands in 2022."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It explores the different roles for research software in the research life cycle, strengthening the case for sustainable software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://upstream.force11.org/defining-the-roles-of-research-software/","rel":["nofollow"]},"children":[{"type":"text","value":"Defining the Roles of Research Software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zenodo.org/records/5504016","rel":["nofollow"]},"children":[{"type":"text","value":"Defining Research Software: a controversial discussion"}]},{"type":"text","value":": Summary Report of FAIR4RS Subgroup 3 activity and discussion"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-is-data","depth":2,"text":"Software is data"},{"id":"software-is-a-special-type-of-data","depth":2,"text":"Software is a special type of data"},{"id":"the-role-of-research-software","depth":2,"text":"The role of Research Software"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:further-reading.md","_source":"local_fs","_file":"modules/researchsoftware/further-reading.md","_stem":"modules/researchsoftware/further-reading","_extension":"md","plainText":"---\ntitle: Further Reading\ntype: reading\norder: 6\n---\n\n# Software and data\n\n## Software is data\n\nIn computer science, the fact that software is data is considered one of the fundamental concepts of computing. The fact that the thing that operates the machine (software) is the same kind of thing as the thing it operates on (data) is definitely one of the strengths of current computersystems and one of the main reasons why we can do such complex and powerful things with the combination of hardware and software.\n\nThe following blogpost discusses why this concept is so powerful: [Fundamental Concepts of Computing: Software is Data!](https://www.blackliszt.com/2014/04/fundamental-concepts-of-computing-software-is-data.html)\n\n## Software is a special type of data\n\nHowever for most practical purposes in most domains of scientific research (except maybe the domain of computer science) it is useful to make a distinction between the data that is software and other data. From now on, when we use the word data, we mean the kind fo data which is not software and which we use to store more static information.\n\n- Software is executable, data is not.\n- Data provides information or evidence, software provides a tool to do work on the data.\n- Software is a creative work, scientific data are facts or observations.\n- The lifetime of software is generally not as long as that of data.\n\n[Software vs Data](https://github.com/danielskatz/software-vs-data)\n\n[Software vs. data in the context of citation](https://doi.org/10.7287/peerj.preprints.2630v1)\n\n\n## The role of Research Software\n\nThe following piece was written after a workshop called \"The Future of Research Software\", held in the Netherlands in 2022.\n\nIt explores the different roles for research software in the research life cycle, strengthening the case for sustainable software.\n\n[Defining the Roles of Research Software](https://upstream.force11.org/defining-the-roles-of-research-software/)\n\n[Defining Research Software: a controversial discussion](https://zenodo.org/records/5504016): Summary Report of FAIR4RS Subgroup 3 activity and discussion\n"}]