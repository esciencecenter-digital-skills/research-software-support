[{"_path":"/modules/softwaremanagementplans/smpvsfair","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"SMP vs FAIR","description":"","type":"exercise","order":4,"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:smpvsfair.md","_source":"local_fs","_file":"modules/softwaremanagementplans/smpvsfair.md","_extension":"md","plainText":"---\ntitle: SMP vs FAIR\ntype: exercise\norder: 4\n---\n\n## SMP vs FAIR\n\n### Why do we care?\n\nWhen thinking of the importance of good software stewardship, management, and development practice, many reasons and motivations come to mind.\nYou may think of:\n\n- Accuracy of results\n- Reproducibility of results\n- Reusability of software\n- User friendliness of software\n- Software quality\n- Recognition and rewards for software developers\n- Scholarly archive\n- Software sustainability\n\nWhat are the reasons and motivations that come to mind for you?\n\n### Mapping motivations\n\n(**NB:** If you are not yet familiar with the FAIR principles for research software, [take a look at the chapter on FAIR software](/modules/fairsoftware.md) before doing the following exercise.)\n\nThe motivations we listed above were important considerations for the development of Software Management Plans as well as the FAIR principles for research software.\nThey do not match completely, however.\nEach has its own focus and emphasis.\n\nIn the following exercise, we will map the motivations we listed above to the ultimate goals of SMPs and the FAIR principles.\n\nDraw a Venn diagram with two circles: SMP and FAIR:\n\n<img src=\"media/venn_fairsmp.png\" width=\"400\">\n\nMap the motivations listed above to the Venn diagram.\n\n- Which motivations are covered by SMPs, which by FAIR, and which by both?\n- Do you find any motivations that are not covered by either?\n- What does this tell you about the relationship between SMPs and FAIR?"},{"_path":"/modules/testing/ci-cd","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Continuous Integration","description":"","type":"reading","order":3,"_type":"markdown","_id":"local_fs:modules:testing:ci-cd.md","_source":"local_fs","_file":"modules/testing/ci-cd.md","_extension":"md","plainText":"---\ntitle: Continuous Integration\ntype: reading\norder: 3\n---\n\n## Continuous Integration (CI) (2 minutes)\nContinuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes into a shared remote repository, often several times a day. After each integration, a working version of the project is built, and the software's test suite is run automatically. This process allows for the early identification of defects, errors, flaws, or bugs introduced by changes, helping to maintain code quality and reduce the chances of major issues when combining everyone's work.\n\n### Importance of CI\nCI offers several key benefits:\n\n- **Early Bug Detection**: By identifying bugs early, CI minimizes their impact and makes them easier to fix.\n- **Synchronization**: Keeps project contributors up to date with each otherâ€™s work, allowing them to benefit from new features as soon as possible.\n- **Encouragement to Write Tests**: Promotes the practice of writing tests, ensuring better code quality.\n- **Test Automation**: Automates the process of running tests, saving time and effort.\n- **Frequent Testing**: Ensures that tests are run frequently, maintaining continuous validation of the software's functionality.\n\n## Continuous Deployment (CD) (1 minute)\nContinuous Deployment (CD) is an extension of the CI practice that automates the release of software updates to users. This is done for every change that passes all stages of the development pipeline, including automated tests. CD ensures that the software is always in a releasable state and that new features, improvements, and bug fixes are delivered to users quickly and consistently.\n\nTogether, CI and CD form a powerful combination that enhances the efficiency, reliability, and speed of the software development process."}]