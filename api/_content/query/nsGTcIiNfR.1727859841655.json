[{"_path":"/modules/distributing","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Distributing Software","description":"Photo by frank mckenna on Unsplash","category":"Good Practices","order":15,"abstract":"Software needs to be distributed to be used by others. What are environments, packages and containers and how do they help?","author":"eScience Center","thumbnail":"thumbnail-containers.jpg","visibility":"visible","_type":"markdown","_id":"local_fs:modules:distributing:index.md","_source":"local_fs","_file":"modules/distributing/index.md","_extension":"md","plainText":"---\ntitle: Distributing Software\ncategory: Good Practices\norder: 15\nabstract: Software needs to be distributed to be used by others. What are environments, packages and containers and how do they help?\nauthor: eScience Center\nthumbnail: \"thumbnail-containers.jpg\"\nvisibility: visible\n---\n\n\nPhoto by <a href=\"https://unsplash.com/@frankiefoto?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">frank mckenna</a> on <a href=\"https://unsplash.com/photos/assorted-color-filed-intermodal-containers-tjX_sniNzgQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  "},{"_path":"/modules/distributing/slides-distributing","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Distributing Software","description":"===","type":"slides","order":1,"author":"Jaro Camphuijsen, Lourens Veen","_type":"markdown","_id":"local_fs:modules:distributing:slides-distributing.md","_source":"local_fs","_file":"modules/distributing/slides-distributing.md","_extension":"md","plainText":"---\ntitle: Distributing Software\ntype: slides\norder: 1\nauthor: Jaro Camphuijsen, Lourens Veen\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Distributing Software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why distribute?\n\n- For your future self\n- For others that might be interested\n- For reproducibility \n- For reusability\n\nnote:\nThere are many reasons why you would want to distribute your software. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why can't I just publish and be done?\n\n- A piece of software never operates in isolation. \n- Depends on other software (third party packages, libraries)\n- Depends on system software (operating system, drivers, firmware)\n- Depends on hardware (your computer and the chips inside, display or printer)\n- The world (hardware, software, people) around your software is constantly evolving\n\nnote:\nSoftware by nature always depends on other software and hardware. \n\n===\n\n<!-- .slide: data-state=\"standard\" data-background-image=\"media/fire.png\"-->\n\nnote: Sometimes you enter dependency hell\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What issues may arise?\n\n- Many dependencies\n- Long chains of dependencies\n- Conflicting dependencies\n- Circular dependencies\n- Package manager dependencies\n- Diamond dependency\n\n... and all of these are changing.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What solutions exist?\n\nIsolation or specification\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Isolation\n\n![Layers of isolation](media/distributing-software-layers.png)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Specification\n\nLet the user (or some tool) solve the probem...\n\n- requirements.txt\n- environment.yml\n- pyproject.toml\n- package.json\netc...\n\nnote:\nSpecify the dependencies in a file and let the user build their own environment, container or vm.\n\n===\n\n## Considerations\n\n- Large amount of isolation enhances reproducibility but decreases flexibility.\n- Leaving it up to the user can be done for simple scripts (most research software)\n\n===\n\n## Rules of thumb   \n\n- Simple scripts can use a simple dependency specification\n- If other software might depend on this software, package it\n- To archive a specific software version and its environment, you could use a container\n\n==="}]