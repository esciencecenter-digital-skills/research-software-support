[{"_path":"/modules/softwaremanagementplans/reading","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Reading material","description":"","type":"reading","order":6,"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:reading.md","_source":"local_fs","_file":"modules/softwaremanagementplans/reading.md","_stem":"modules/softwaremanagementplans/reading","_extension":"md","plainText":"---\ntitle: Reading material\ntype: reading\norder: 6\n---\n\n# Reading material\n\n## Software Management Plans\n\n### Zenodo\nRead in Zenodo about [Practical guide to Software Management Plans](https://zenodo.org/records/7589725)\n\n### Software Sustainability Institute\nRead in SSI Resources Hub about [Writing and using a software management plan](https://www.software.ac.uk/guide/writing-and-using-software-management-plan)\n\n## Overview of practical guides\nThere are various practical guides online to the different aspects of software management.\n\nHere is an (incomplete) list:\n\n- [Version control](https://the-turing-way.netlify.app/reproducible-research/vcs.html)\n- [Testing](https://the-turing-way.netlify.app/reproducible-research/testing/testing-guidance.html)\n- [Packaging](https://the-turing-way.netlify.app/reproducible-research/renv/renv-package.html)\n- [Documentation](https://guide.esciencecenter.nl/#/best_practices/documentation)\n  - User\n  - Deployment\n  - Developer\n- [Citation](https://the-turing-way.netlify.app/communication/citable/citable-cff.html#cm-citable-cff)\n- [Software licensing](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-software.html) and [compatibility](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-compatibility.html)\n"},{"_path":"/modules/softwaremanagementplans/slides-smp","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Software Management Plans","description":"===","type":"slides","order":1,"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:slides-smp.md","_source":"local_fs","_file":"modules/softwaremanagementplans/slides-smp.md","_stem":"modules/softwaremanagementplans/slides-smp","_extension":"md","plainText":"---\ntitle: Software Management Plans\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Software Management Plans\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Research reproducibility\n\n<img src=\"media/maintenance.png\" width=\"40%\" title=\"Software Needs Maintenance\">\n<small>Image by <a href=\"https://github.com/c-martinez\">Carlos Martinez-Ortiz</a></small>\n\nWhat role does research software play in promoting reproducibility?\n\nNote:\nReproducibility of research allows validation of its findings, and is therefore vital in building a solid foundation for scientific progress.\nWe can only truly build upon existing research if we can reproduce its results.\n\nWhen software has been used in research, this has enormous potential to facilitate the research reproducibility.\nHowever, it also comes with its own particular challenges: software reproducibility is not always straightforward.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software reusability\n\n- Reproducibility relies on re-using research software.\n  - Users need to **find**, **access**, and **use** the software.\n- Reproduction may just be a first step towards diversifying a study.\n  - Users need to **understand** the software.\n\nSoftware reusability encompasses both **reproducing** existing results obtained with RS, as well as **building upon** existing RS to use it in new or different ways.\n\nSoftware Management Plans help developers ensuring that their research software is reusable.\n\n\nNote:\nAn additional feature of software, is that it may be a product on its own, and can be reused by others.\nThis is a great opportunity to build on our collective knowledge and tools, and to avoid reinventing the wheel.\n\nEnsuring that the software is findable, accessible, usable, and understandable is key to both reproducibility and reusability.\n\nSoftware needs to be understood both from a:\n- functional perspective: what steps does the software take to get to the results\n- developmental perspective: how are these steps put into code\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Overview\n\n- Software Management Plan: what and why?\n- Aspects of software management\n- Different needs for different software\n- SMP template examples\n\nNote:\nThis presentation will introduce you to the concept of software management plans, as a first step towards better software stewardship and sustainability.\nWe will look at different aspects of good software managements, as well as different needs for different types of software.\nFinally, we will take a look at some concrete examples of software management plans.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Software Management Plan (SMP)\n\n- Building on the success of Data Management Plans (DMPs)\n- A document detailing how research software will be managed\n  - What does it do?\n  - Who is it for?\n  - What resources does it need?\n  - Who is responsible?\n  - How long will it be available?\n  - ...\n- Can be part of a project proposal or generated in the early phases\n- Should be a \"living document\", to be updated as plans change\n\n\nNote:\nSoftware management plans (SMPs) are inspired by the earlier adopted data management plans.\nIn these documents, often created at or before the start of a project, plans and explicit decisions are made about various aspects around the management of these digital objects.\nThey are increasingly required by funders and institutions.\n\nIn an SMP it is explicitly stated what the software aims to do, who its target audience is, and what resources it is expected to need.\nIt also addresses the intended lifespan, and allocates responsibility: who makes releases? Who maintains the software at the end of the project, and if so for how long?\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## An SMP helps ...\n\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center;\">\n  <div>\n    <img src=\"media/benefits/purpose.png\" style=\"height: 100px;\">\n    <sub>... thinking about<br>purpose & necessity</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/resources.png\" style=\"height: 100px;\">\n    <sub>... planning<br>resource management</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/problems_later.png\" style=\"height: 100px;\">\n    <sub>... avoiding<br>problems later</sub>\n  </div>\n</div>\n\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center; margin-top: 60px; margin-bottom: 60px;\">\n  <div>\n    <img src=\"media/benefits/structure.png\" style=\"height: 100px;\">\n    <sub>... structuring<br>development</sub>\n  </div>\n  <div>\n    <img src=\"./media/benefits/explicit.png\" style=\"height: 100px;\">\n    <sub>... making technical<br>choices explicit</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/alive.png\" style=\"height: 100px;\">\n    <sub>... keeping research<br>software alive</sub>\n  </div>\n</div>\n\n<small>Images generated by OpenAI's DALLÂ·E 3 model via ChatGPT v2 and subsequently adapted by <a href=\"https://github.com/DaniBodor\">Dani Bodor</a>.</small>\n\nNote:\n\nWith an SMP, you make explicit plans and decisions in an early stage.\nThe SMP provides the team with structured, relevant questions early on, with the aim to maximize the accessibility, reusability, and impact of the software in question.\nThis supports good software management practices, and it makes sure they are known to the researchers involved.\n\nMore specifically, in an SMP you:\n\n- Make explicit technical choices. For example, what programming language will be used? What operating system will be supported?\n- Plan for necessary resources; be they financial, human, infrastructure or other.\n- Assess whether new software is really needed; explore whether existing software can be reused, and to what extent;\n\nThese are issues that arise during software development anyway, but all too often are not explicitly dealt with.\nBy tackling them early, a conscious decision can be made rather than needing to deal with consequences of implicit choices.\nResource planning moreover is vital for the sustainability of the software.\nFinally, the SMP will allow later verification of plans in a publicly funded project.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## An SMP is not ...\n\nan additional bureaucratic hoop for researchers to jump through.\n\nMake sure you represent it as a tool allowing researchers to get the most out of their effort.  \n\nNote:\n\nIt is a common trap to present such documents to researchers and \"force\" them\nto fill them in without too much context. This is then often perceived as a\nbureaucratic burden that is not done with a lot of care or attention. \n\nInstead, we recommend presenting SMPs as an agent allowing researchers to\nminimize their efforts, by making considerations early in the process and\nworking towards their goals, rather than having to make the call in the moment,\nwhen there may be other priorities/deadlines (publication, grant application,\n...)\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<center>\n<img src=\"media/smpguide.png\" width=\"50%\" />\n\n[doi:10.5281/zenodo.7038280](https://doi.org/10.5281/zenodo.7038280)\n\n</center>\n\nNote:\nTo get started on creating a Software Management Plan, this practical guide has been created by NWO and the Netherlands eScience Center.\nIts first version was released in August of 2022, but it has since been, and will continue to be, updated.\nAll past versions and the latest release are available on Zenodo via this DOI.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<center>\n<img src=\"media/groupedrequirements.png\" width=\"60%\" />\n</center>\n\nNote:\nIn the practical guide, the core requirements for an SMP are listed, and grouped into four foci:\n- Purpose\n- Engineering\n- Documentation\n- Project Management.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## SMP templates\n\n- Should be provided by the institution\n- Include guidance:\n  - Instructions on how to fill it out\n  - Resources for information and support\n  - Institution-specific regulations\n  - Institution-specific resources available\n  - Who to contact for clarification/further information\n- Include an assessment rubric (e.g. with (un)acceptable answers)\n\nNote:\nThe Software Management Plan template is a duty of the institution.\nA good SMP includes guidance on how to fill it out, including institution-specific regulations and resources.\n\nAn assessment rubric should accompany the template, indicating per question or focus what conditions need to be met, and which answers are (un)acceptable.\n\n===\n\n## Not all software is equal\n\n![](media/softwarespectrum2.png)\n\nNote:\nIt is important to realize when making an SMP, that research software comes in many shapes and sizes.\n\nAn ad-hoc R script written by a PhD student to analyse data from a specific machine, is research software.\n\nIt can also be a multinational collaboration to develop a tool that is used by thousands of researchers worldwide.\n\nDifferent software has different needs, but there are common principles in managing them and ensuring their sustainability.\n\nThe diversity of research software does mean that not all requirements apply to every type of software.\nTo address this, we can subset the core requirements to create different SMP templates tailored to software with different management needs.\n\nThe SMP Guide distinguishes software with low, medium, and high management needs.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Exercise: How important is it?\n\nNote:\nWhile teaching, we will usually do this exercise using [mentimeter](https://www.mentimeter.com/app/folder/2612404) (this link is only accessible using an eScience Center account). It is not necessary to go to the slides vertically below this one.\n\nFor self-studiers: see slides vertically below this one to see the exercise.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n#### Consider the following list of software:\n\n- [NEMO](https://www.nemo-ocean.eu/), a state of the art modelling framework, used for research and forecasting in ocean and climate sciences.\n- [AlphaFold](https://alphafold.com/), an AI system developed by Google DeepMind that predicts a proteinâs 3D structure from its amino acid sequence.\n- A Jupyter notebook to get the average length of everyone in this classroom.\n- A software package you yourself have been involved in, if any.\n- [Facebook](https://www.facebook.com/), a social media platform connecting people globally.\n\nGo to next slide\n\nNote:\n\nWe recommend scrolling up and down between this and previous slide to do the exercise.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n#### How important are the different requirements for each?\n\n- Randomly choose 5 SMP requirements for each software from the previous slide\n- Rate on a scale of 1-5 how important those aspects are to include in the SMP.\n    - It is not necessary to look them up, make an estimation from stated information.\n\n<img src=\"media/groupedrequirements.png\" width=\"30%\" />\n\nNote:\n\nWe recommend scrolling up and down between this and previous slide to do the exercise.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Making the call\n\nNot all SMPs need to encompass every single requirement, this will generally depend on:\n  - **Purpose**: what is the reason or expected end-use for the software?\n  - **Reliability**: what is the effect of software failure and/or non-maintenance?\n  - **Maintenance**: what is the long-term effort needed to maintain the software?\n\nDCCs or organizations need to decide how it is determined which requirements to include and who is responsible for the decision.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Example 1: Templates per \"management level\"\n\nDCCs create a few SMP templates based on the management level of software\n<small> (example from SMP guide, we recommend making a variation of this theme)</small>\n\n<div style=\"width: 50%; float: left\">\n  <ul>\n    <strong>Management level</strong>:\n    <li><strong>Low</strong>: single purpose/single user script with limited functionality</li>\n    <li><strong>Medium</strong>: primary research output with unique functionality may be reused</li>\n    <li><strong>High</strong>: mission critical software in continuous use, failure of which would threaten research line</li>\n  </ul>\n</div>\n\n<div style=\"width: 50%; float: right\">\n<img src=\"media/threelevels.png\" width=\"70%\">\n</div>\n\nNote:\nIn practice, we recommend creating more groups and/or redefining which requirements belong to each category (in the current form most software will fall in between Low and Medium). \n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Example 2: Guidelines per requirement\n\nDCCs provide a guidelines for each requirement in which cases it should or should not be included in the SMP\n\nFor example:\n- **Purpose**: Always include.\n- **User Documentation**: If you want or expect users other than your direct colleagues to interact with the software.\n- **Citation**: If you would like the software to be citable independently of e.g. research paper.\n- **Risk analysis**: For mission critical software or software that needs to run 24/7.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n\n## Take home messages\n\n- Software is found in all stages of the research cycle\n- Research software comes in many shapes and sizes\n- Software stewardship starts with a good plan\n- Good software management leads to better science\n- Institutes should provide one or more SMP templates or guidelines\n\nNote:\nSoftware is found in all stages of the research cycle, and is used for many different purposes.\nIt comes in many shapes and sizes, and has different needs.\nSoftware stewardship starts with a good plan, and is an important scientific step: good software management leads to better science.\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"}]