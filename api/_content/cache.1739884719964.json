{"generatedAt":1739884734699,"generateTime":768,"contents":[{"_path":"/config","_dir":"","_draft":false,"_partial":false,"_locale":"","publicProps":{"title":"Research Software Support","baseURL":"research-software-support","repoName":"research-software-support","repoOwner":"esciencecenter-digital-skills","organization":"Netherlands eScience Center","organizationURL":"https://www.esciencecenter.nl","organizationLogo":"/main/media/nlesc-logo.svg","categoryOrder":["Getting Started","Developing Software","Sharing Software"]},"_id":"local_fs:config.json","_type":"json","title":"Config","_source":"local_fs","_file":"config.json","_stem":"config","_extension":"json"},{"_path":"/contributing","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Contributing to this Research Software Support platform","description":"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of Research Software and how to provide support to researchers.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"contributing-to-this-research-software-support-platform"},"children":[{"type":"text","value":"Contributing to this Research Software Support platform"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of Research Software and how to provide support to researchers.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project."}]},{"type":"element","tag":"h3","props":{"id":"what-can-i-do"},"children":[{"type":"text","value":"What can I do?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contribute to the content discussion in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/issues?q=is%3Aissue+is%3Aopen+label%3A%22module+update%22%2C%22new+module%22%2C%22all+modules%22","rel":["nofollow"]},"children":[{"type":"text","value":"module issues"}]},{"type":"text","value":", e.g. by listing good resources for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Author a new module by creating a "},{"type":"element","tag":"a","props":{"href":"#how-can-i-do-it"},"children":[{"type":"text","value":"new issue and pr"}]},{"type":"text","value":", while taking into account the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/module-dir-structure.md","rel":["nofollow"]},"children":[{"type":"text","value":"documentation for creating a new module"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Review a lesson module; both by looking at "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/pulls","rel":["nofollow"]},"children":[{"type":"text","value":"open PRs"}]},{"type":"text","value":", as well as flagging issues for improvement in the "},{"type":"element","tag":"a","props":{"href":"https://esciencecenter-digital-skills.github.io/research-software-support/","rel":["nofollow"]},"children":[{"type":"text","value":"existing content"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/issues","rel":["nofollow"]},"children":[{"type":"text","value":"Provide feedback"}]},{"type":"text","value":" on the different subjects covered: what did we miss? Should something be restructured?"}]}]},{"type":"element","tag":"h3","props":{"id":"how-can-i-do-it"},"children":[{"type":"text","value":"How can I do it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you want to contribute to the content: look whether the issue you want to tackle "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/issues","rel":["nofollow"]},"children":[{"type":"text","value":"already exists"}]},{"type":"text","value":" or make a "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/issues/new","rel":["nofollow"]},"children":[{"type":"text","value":"new issue"}]},{"type":"text","value":", and "},{"type":"element","tag":"a","props":{"href":"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request","rel":["nofollow"]},"children":[{"type":"text","value":"create a PR"}]},{"type":"text","value":" with your changes from a fork or a branch."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is useful to take a look at "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA-docs","rel":["nofollow"]},"children":[{"type":"text","value":"the NEBULA documentation"}]},{"type":"text","value":" and specifically review "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/module-dir-structure.md","rel":["nofollow"]},"children":[{"type":"text","value":"the section on directory structure and content tags"}]},{"type":"text","value":" before you start."}]},{"type":"element","tag":"h2","props":{"id":"target-audience"},"children":[{"type":"text","value":"Target audience"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"On a practical level, this means that these modules do not need to be very technical.\nFor example, a module on version control does not need to explain the details of Git and the different commands.\nWhat it does need to do is explain why version control is important, and why it matters particularly in a research context.\nA participant should walk away with a more elaborate vocabulary around a subject, knowledge on where and how to find more information, and motivation that they could transfer to others."}]},{"type":"element","tag":"h2","props":{"id":"philosophy"},"children":[{"type":"text","value":"Philosophy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you are contributing to this material, please keep a few principles in mind:"}]},{"type":"element","tag":"h3","props":{"id":"the-material-should-be-broadly-usable"},"children":[{"type":"text","value":"The material should be broadly usable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It should be ready for teaching both online and offline; in a regular and a flipped classroom; and even for self study."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The modules in this repository will be used as lesson materials for a live audience, and provide a resource for self-study.\nEvery module should therefore contain some essential classroom elements (e.g. slides, group exercises), as well as exercises that can be done individually, and reference material that can be read at home."}]},{"type":"element","tag":"h3","props":{"id":"the-modules-should-be-easy-to-reuse"},"children":[{"type":"text","value":"The modules should be easy to (re)use"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is important that anybody can work with the material in this repository.\nSlides should therefore contain complete notes for an instructor, which can also be used in self-study.\nExercises should be clearly explained, and where possible, times should be given for different parts of the lesson so an instructor can plan a workshop around these materials."}]},{"type":"element","tag":"h3","props":{"id":"maintenance-load-should-be-kept-to-a-minimum"},"children":[{"type":"text","value":"Maintenance load should be kept to a minimum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We all know how fast things change, and how quickly information becomes outdated.\nIt is important to keep this in mind when creating lesson materials, and focus on core concepts, rather than specific tools and details.\nWhere it is useful to mention these, consider linking to external resources that will be maintained by others."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In general, it is better to link to external resources than to rewrite information that already exists elsewhere.\nThis, too, will limit the amount of maintenance that is required."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-can-i-do","depth":3,"text":"What can I do?"},{"id":"how-can-i-do-it","depth":3,"text":"How can I do it?"},{"id":"target-audience","depth":2,"text":"Target audience"},{"id":"philosophy","depth":2,"text":"Philosophy","children":[{"id":"the-material-should-be-broadly-usable","depth":3,"text":"The material should be broadly usable"},{"id":"the-modules-should-be-easy-to-reuse","depth":3,"text":"The modules should be easy to (re)use"},{"id":"maintenance-load-should-be-kept-to-a-minimum","depth":3,"text":"Maintenance load should be kept to a minimum"}]}]}},"_type":"markdown","_id":"local_fs:CONTRIBUTING.md","_source":"local_fs","_file":"CONTRIBUTING.md","_stem":"CONTRIBUTING","_extension":"md","plainText":"# Contributing to this Research Software Support platform\n\nIn the Research Software Support modules we want to provide a comprehensive overview of the different aspects of Research Software and how to provide support to researchers.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project.\n\n### What can I do?\n\n- Contribute to the content discussion in the [module issues](https://github.com/esciencecenter-digital-skills/research-software-support/issues?q=is%3Aissue+is%3Aopen+label%3A%22module+update%22%2C%22new+module%22%2C%22all+modules%22), e.g. by listing good resources for information.\n- Author a new module by creating a [new issue and pr](#how-can-i-do-it), while taking into account the [documentation for creating a new module](https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/module-dir-structure.md)\n- Review a lesson module; both by looking at [open PRs](https://github.com/esciencecenter-digital-skills/research-software-support/pulls), as well as flagging issues for improvement in the [existing content](https://esciencecenter-digital-skills.github.io/research-software-support/).\n- [Provide feedback](https://github.com/esciencecenter-digital-skills/research-software-support/issues) on the different subjects covered: what did we miss? Should something be restructured?\n\n### How can I do it?\n\nIf you want to contribute to the content: look whether the issue you want to tackle [already exists](https://github.com/esciencecenter-digital-skills/research-software-support/issues) or make a [new issue](https://github.com/esciencecenter-digital-skills/research-software-support/issues/new), and [create a PR](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request) with your changes from a fork or a branch. \n\nIt is useful to take a look at [the NEBULA documentation](https://github.com/esciencecenter-digital-skills/NEBULA-docs) and specifically review [the section on directory structure and content tags](https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/module-dir-structure.md) before you start. \n\n## Target audience\n\nThe target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software.\n\nOn a practical level, this means that these modules do not need to be very technical.\nFor example, a module on version control does not need to explain the details of Git and the different commands.\nWhat it does need to do is explain why version control is important, and why it matters particularly in a research context.\nA participant should walk away with a more elaborate vocabulary around a subject, knowledge on where and how to find more information, and motivation that they could transfer to others.\n\n## Philosophy\n\nAs you are contributing to this material, please keep a few principles in mind:\n\n### The material should be broadly usable\n\nIt should be ready for teaching both online and offline; in a regular and a flipped classroom; and even for self study.\n\nThe modules in this repository will be used as lesson materials for a live audience, and provide a resource for self-study.\nEvery module should therefore contain some essential classroom elements (e.g. slides, group exercises), as well as exercises that can be done individually, and reference material that can be read at home.\n\n### The modules should be easy to (re)use\n\nIt is important that anybody can work with the material in this repository.\nSlides should therefore contain complete notes for an instructor, which can also be used in self-study.\nExercises should be clearly explained, and where possible, times should be given for different parts of the lesson so an instructor can plan a workshop around these materials.\n\n### Maintenance load should be kept to a minimum\n\nWe all know how fast things change, and how quickly information becomes outdated.\nIt is important to keep this in mind when creating lesson materials, and focus on core concepts, rather than specific tools and details.\nWhere it is useful to mention these, consider linking to external resources that will be maintained by others.\n\nIn general, it is better to link to external resources than to rewrite information that already exists elsewhere.\nThis, too, will limit the amount of maintenance that is required."},{"_path":"/","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Hello world","description":"Here is some markdown content.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"hello-world"},"children":[{"type":"text","value":"Hello world"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is some markdown content."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/lessons/demo"},"children":[{"type":"text","value":"Demo lesson link"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:index.md","_source":"local_fs","_file":"index.md","_stem":"index","_extension":"md","plainText":"# Hello world\n\nHere is some markdown content.\n\n[Demo lesson link](/lessons/demo)\n"},{"_path":"/license","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"LICENSE","description":"The content of the modules/ folder of this project is licensed under a Creative Commons Attribution 4.0 International License.","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"rel":["license"],"href":"http://creativecommons.org/licenses/by/4.0/"},"children":[{"type":"element","tag":"img","props":{"alt":"Creative Commons License","style":"border-width:0","src":"https://i.creativecommons.org/l/by/4.0/88x31.png"},"children":[]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"The content of the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"modules/"}]},{"type":"text","value":" folder of this project is licensed under a "},{"type":"element","tag":"a","props":{"rel":["license"],"href":"http://creativecommons.org/licenses/by/4.0/"},"children":[{"type":"text","value":"Creative Commons Attribution 4.0 International License"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This license does not apply to any image files in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"modules"}]},{"type":"text","value":" folder or its subfolders.\nImage files are files with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".png"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".jpg"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".svg"}]},{"type":"text","value":", or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".gif"}]},{"type":"text","value":" extensions."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:LICENSE.md","_source":"local_fs","_file":"LICENSE.md","_stem":"LICENSE","_extension":"md","plainText":"<a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by/4.0/88x31.png\" /></a><br />The content of the `modules/` folder of this project is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by/4.0/\">Creative Commons Attribution 4.0 International License</a>.\n\nThis license does not apply to any image files in the `modules` folder or its subfolders.\nImage files are files with `.png`, `.jpg`, `.svg`, or `.gif` extensions.\n"},{"_path":"/main/about","_dir":"main","_draft":false,"_partial":false,"_locale":"","title":"About","description":"","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"about-the-research-software-support"},"children":[{"type":"text","value":"About the Research Software Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support."}]},{"type":"element","tag":"h2","props":{"id":"target-audience"},"children":[{"type":"text","value":"Target audience"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"about-the-research-software-support","depth":2,"text":"About the Research Software Support"},{"id":"target-audience","depth":2,"text":"Target audience"}]}},"_type":"markdown","_id":"local_fs:main:about.md","_source":"local_fs","_file":"main/about.md","_stem":"main/about","_extension":"md","plainText":"---\ntitle: About\norder: 1\n---\n\n## About the Research Software Support\nIn the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\n\n## Target audience\n\nThe target audience for this material is University management and support staff.\nUniversity management taking part in courses involving these modules may be involved in creating university policy around research software.\nThe University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software."},{"_path":"/main/contribute","_dir":"main","_draft":false,"_partial":false,"_locale":"","title":"Contribute","description":"","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"contributing-to-the-research-software-support"},"children":[{"type":"text","value":"Contributing to the Research Software Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project."}]},{"type":"element","tag":"h3","props":{"id":"what-can-i-do"},"children":[{"type":"text","value":"What can I do?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go to our github repository by clicking on the GitHub logo in the top right of this website."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contribute to the content discussion in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/labels/module%20discussion","rel":["nofollow"]},"children":[{"type":"text","value":"module issues"}]},{"type":"text","value":", e.g. by listing good resources for information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Review a lesson module; both by looking at "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/pulls","rel":["nofollow"]},"children":[{"type":"text","value":"open PRs"}]},{"type":"text","value":", as well as flagging issues for improvement in the "},{"type":"element","tag":"a","props":{"href":"https://esciencecenter-digital-skills.github.io/research-software-support/","rel":["nofollow"]},"children":[{"type":"text","value":"existing content"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/issues","rel":["nofollow"]},"children":[{"type":"text","value":"Provide feedback"}]},{"type":"text","value":" on the different subjects covered: what did we miss? Should something be restructured?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Suggest a new entry"}]},{"type":"text","value":" for the "},{"type":"element","tag":"a","props":{"href":"/main/yellowpages"},"children":[{"type":"text","value":"Research Software Support Yellow Pages"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"contributing-to-the-research-software-support","depth":2,"text":"Contributing to the Research Software Support","children":[{"id":"what-can-i-do","depth":3,"text":"What can I do?"}]}]}},"_type":"markdown","_id":"local_fs:main:contribute.md","_source":"local_fs","_file":"main/contribute.md","_stem":"main/contribute","_extension":"md","plainText":"---\ntitle: Contribute\norder: 4\n---\n\n## Contributing to the Research Software Support\n\nIn the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software support.\nThis, as you can imagine, is no easy feat, and we need your help!\nSo first of all, thank you very much for your interest in contributing to this project.\n\n### What can I do?\n\nGo to our github repository by clicking on the GitHub logo in the top right of this website. \n\n* Contribute to the content discussion in the [module issues](https://github.com/esciencecenter-digital-skills/research-software-support/labels/module%20discussion), e.g. by listing good resources for information.\n* Review a lesson module; both by looking at [open PRs](https://github.com/esciencecenter-digital-skills/research-software-support/pulls), as well as flagging issues for improvement in the [existing content](https://esciencecenter-digital-skills.github.io/research-software-support/).\n* [Provide feedback](https://github.com/esciencecenter-digital-skills/research-software-support/issues) on the different subjects covered: what did we miss? Should something be restructured?\n* [Suggest a new entry] for the [Research Software Support Yellow Pages](/main/yellowpages)"},{"_path":"/main/workshops","_dir":"main","_draft":false,"_partial":false,"_locale":"","title":"Workshops","description":"","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"about"},"children":[{"type":"text","value":"About"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Research Software Support can be taught as a live workshop. If you are interested in following or even hosting such a workshop, have a look at the "},{"type":"element","tag":"a","props":{"href":"https://www.esciencecenter.nl/digital-skills/","rel":["nofollow"]},"children":[{"type":"text","value":"training page"}]},{"type":"text","value":" or contact the "},{"type":"element","tag":"a","props":{"href":"mailto:training@esciencecenter.nl"},"children":[{"type":"text","value":"training team"}]},{"type":"text","value":" at the Netherlands eScience Center."}]},{"type":"element","tag":"h2","props":{"id":"past-workshops"},"children":[{"type":"text","value":"Past workshops"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":"right"},"children":[{"type":"text","value":"Date"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Organisation"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Location"}]},{"type":"element","tag":"th","props":{"align":"left"},"children":[{"type":"text","value":"Comments"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2023-11-28"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Netherlands eScience Center"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Amsterdam, The Netherlands"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Pilot workshop, VU"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2024-05-16"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Netherlands eScience Center"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Amsterdam, The Netherlands"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Pilot workshop, UvA/HvA"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2024-09-10"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Netherlands eScience Center"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Utrecht & Amsterdam, The Netherlands"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Split-day workshop"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":"right"},"children":[{"type":"text","value":"2025-02-03"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Netherlands eScience Center"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Amsterdam, The Netherlands"}]},{"type":"element","tag":"td","props":{"align":"left"},"children":[{"type":"text","value":"Split-day workshop, DCC-PO"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"homework"},"children":[{"type":"text","value":"Homework"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These are potential homework exercises that can be used in a live workshop setting."}]},{"type":"element","tag":"h3","props":{"id":"research-software"},"children":[{"type":"text","value":"Research Software"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find a piece of research software that you like (because of the topic or nice picture, or whetever other reason) from the "},{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software?page=1&rows=48","rel":["nofollow"]},"children":[{"type":"text","value":"Research Software Directory"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Do the "},{"type":"element","tag":"a","props":{"href":"/modules/researchsoftware/exercise-research-life-cycle"},"children":[{"type":"text","value":"exercise about the research life cycle"}]},{"type":"text","value":" from the Research Software module, use the piece of software you chose."}]}]},{"type":"element","tag":"h3","props":{"id":"software-in-the-research-landscape"},"children":[{"type":"text","value":"Software in the Research landscape"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"From all the different initiatives, concepts and organizations discussed in the "},{"type":"element","tag":"a","props":{"href":"/modules/softwarelandscape/slides"},"children":[{"type":"text","value":"Software Landscape module"}]},{"type":"text","value":" or the "},{"type":"element","tag":"a","props":{"href":"/main/yellowpages"},"children":[{"type":"text","value":"Yellow Pages"}]},{"type":"text","value":", pick "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"three"}]},{"type":"text","value":" that your chosen piece of software could/should connect to and/or use."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explain why you chose these three and what makes them valuable for the chosen piece of software."}]}]},{"type":"element","tag":"h3","props":{"id":"software-management-plan"},"children":[{"type":"text","value":"Software Management Plan"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Create a software management plan template which fits your piece of software by using step 2 and 3 from the "},{"type":"element","tag":"a","props":{"href":"/modules/softwaremanagementplans/templatebuilding"},"children":[{"type":"text","value":"Template Building exercise"}]},{"type":"text","value":" in the software management plan module."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Fill out your own software management plan template. Keep it short and to the point."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"about","depth":2,"text":"About"},{"id":"past-workshops","depth":2,"text":"Past workshops"},{"id":"homework","depth":2,"text":"Homework","children":[{"id":"research-software","depth":3,"text":"Research Software"},{"id":"software-in-the-research-landscape","depth":3,"text":"Software in the Research landscape"},{"id":"software-management-plan","depth":3,"text":"Software Management Plan"}]}]}},"_type":"markdown","_id":"local_fs:main:workshops.md","_source":"local_fs","_file":"main/workshops.md","_stem":"main/workshops","_extension":"md","plainText":"---\ntitle: Workshops\norder: 4\n---\n\n## About\nThe Research Software Support can be taught as a live workshop. If you are interested in following or even hosting such a workshop, have a look at the [training page](https://www.esciencecenter.nl/digital-skills/) or contact the [training team](mailto:training@esciencecenter.nl) at the Netherlands eScience Center.\n\n\n## Past workshops\n\n| Date               | Organisation                 | Location                              | Comments                    |\n|-------------------:|:-----------------------------|:--------------------------------------|:----------------------------|\n| 2023-11-28         | Netherlands eScience Center  | Amsterdam, The Netherlands            | Pilot workshop, VU          |\n| 2024-05-16         | Netherlands eScience Center  | Amsterdam, The Netherlands            | Pilot workshop, UvA/HvA     |\n| 2024-09-10         | Netherlands eScience Center  | Utrecht & Amsterdam, The Netherlands  | Split-day workshop          |\n| 2025-02-03         | Netherlands eScience Center  | Amsterdam, The Netherlands            | Split-day workshop, DCC-PO  |\n\n\n## Homework\n\nThese are potential homework exercises that can be used in a live workshop setting.\n\n### Research Software\n\n1. Find a piece of research software that you like (because of the topic or nice picture, or whetever other reason) from the [Research Software Directory](https://research-software-directory.org/software?page=1&rows=48).\n\n1. Do the [exercise about the research life cycle](/modules/researchsoftware/exercise-research-life-cycle) from the Research Software module, use the piece of software you chose.\n\n### Software in the Research landscape\n\n1. From all the different initiatives, concepts and organizations discussed in the [Software Landscape module](/modules/softwarelandscape/slides) or the [Yellow Pages](/main/yellowpages), pick **three** that your chosen piece of software could/should connect to and/or use. \n\n2. Explain why you chose these three and what makes them valuable for the chosen piece of software. \n\n\n### Software Management Plan\n\n1. Create a software management plan template which fits your piece of software by using step 2 and 3 from the [Template Building exercise](/modules/softwaremanagementplans/templatebuilding) in the software management plan module.\n\n2. Fill out your own software management plan template. Keep it short and to the point. \n"},{"_path":"/main/yellowpages","_dir":"main","_draft":false,"_partial":false,"_locale":"","title":"Yellow Pages","description":"These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the contributing guidelines.","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"research-software-support-yellow-pages"},"children":[{"type":"text","value":"Research Software Support Yellow Pages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the "},{"type":"element","tag":"a","props":{"href":"/main/contribute"},"children":[{"type":"text","value":"contributing guidelines"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"research-software-engineers-communities-and-networks"},"children":[{"type":"text","value":"Research Software Engineers communities and networks"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://nl-rse.org/","rel":["nofollow"]},"children":[{"type":"text","value":"NL RSE"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://society-rse.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Society of Research Software Engineering"}]}]}]},{"type":"element","tag":"h2","props":{"id":"open-science"},"children":[{"type":"text","value":"Open Science"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.openscience.nl/en","rel":["nofollow"]},"children":[{"type":"text","value":"Open Science NL"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://freeopensourcesoftware.org/","rel":["nofollow"]},"children":[{"type":"text","value":"FOSS (Free and Open Source Software)"}]}]}]},{"type":"element","tag":"h2","props":{"id":"fair"},"children":[{"type":"text","value":"FAIR"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.nature.com/articles/s41597-022-01710-x","rel":["nofollow"]},"children":[{"type":"text","value":"FAIR for Research Software"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.researchsoft.org/","rel":["nofollow"]},"children":[{"type":"text","value":"ReSA (Research Software Alliance)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.rd-alliance.org/","rel":["nofollow"]},"children":[{"type":"text","value":"RDA (Research Data Alliance)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://force11.org/","rel":["nofollow"]},"children":[{"type":"text","value":"FORCE11 (Future of Research Communications and e-Scholarship)"}]}]}]},{"type":"element","tag":"h2","props":{"id":"research-software-traininglearning"},"children":[{"type":"text","value":"Research Software training/learning"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://researchsoftwaretraining.nl","rel":["nofollow"]},"children":[{"type":"text","value":"Research Software Training"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://carpentries.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Carpentries"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://coderefinery.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Code Refinery"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://book.the-turing-way.org/","rel":["nofollow"]},"children":[{"type":"text","value":"The Turing Way"}]}]}]},{"type":"element","tag":"h2","props":{"id":"technical-support"},"children":[{"type":"text","value":"Technical support"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://esciencecenter.nl/","rel":["nofollow"]},"children":[{"type":"text","value":"Netherlands eScience Center"}]},{"type":"text","value":" (Research Software / Training)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://surf.nl/","rel":["nofollow"]},"children":[{"type":"text","value":"SURF"}]},{"type":"text","value":" (Academic ICT services / High Performance Computing / Data Storage)"}]}]},{"type":"element","tag":"h2","props":{"id":"other"},"children":[{"type":"text","value":"Other"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zenodo.org/records/7248877","rel":["nofollow"]},"children":[{"type":"text","value":"Practical Guide to Software Management Plans"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.softwareheritage.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Software Heritage"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.software.ac.uk/","rel":["nofollow"]},"children":[{"type":"text","value":"Software Sustainability Institute"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"research-software-engineers-communities-and-networks","depth":2,"text":"Research Software Engineers communities and networks"},{"id":"open-science","depth":2,"text":"Open Science"},{"id":"fair","depth":2,"text":"FAIR"},{"id":"research-software-traininglearning","depth":2,"text":"Research Software training/learning"},{"id":"technical-support","depth":2,"text":"Technical support"},{"id":"other","depth":2,"text":"Other"}]}},"_type":"markdown","_id":"local_fs:main:yellowpages.md","_source":"local_fs","_file":"main/yellowpages.md","_stem":"main/yellowpages","_extension":"md","plainText":"---\ntitle: Yellow Pages\norder: 3\n---\n\n# Research Software Support Yellow Pages\n*These yellow pages are work in progress and will keep expanding. They are meant to help you find the right person/organisation for each problem/topic you have to deal with regarding Research Software Support. Feel free to suggest an addition by following the [contributing guidelines](/main/contribute).*\n\n## Research Software Engineers communities and networks\n- [NL RSE](https://nl-rse.org/)\n- [Society of Research Software Engineering](https://society-rse.org/)\n\n## Open Science\n- [Open Science NL](https://www.openscience.nl/en)\n- [FOSS (Free and Open Source Software)](https://freeopensourcesoftware.org/)\n\n## FAIR\n- [FAIR for Research Software](https://www.nature.com/articles/s41597-022-01710-x) \n- [ReSA (Research Software Alliance)](https://www.researchsoft.org/)\n- [RDA (Research Data Alliance)](https://www.rd-alliance.org/)\n- [FORCE11 (Future of Research Communications and e-Scholarship)](https://force11.org/)\n\n## Research Software training/learning\n- [Research Software Training](https://researchsoftwaretraining.nl)\n- [Carpentries](https://carpentries.org/) \n- [Code Refinery](https://coderefinery.org/)\n- [The Turing Way](https://book.the-turing-way.org/)\n\n## Technical support\n- [Netherlands eScience Center](https://esciencecenter.nl/) (Research Software / Training)\n- [SURF](https://surf.nl/) (Academic ICT services / High Performance Computing / Data Storage)\n\n## Other\n- [Practical Guide to Software Management Plans](https://zenodo.org/records/7248877)\n- [Software Heritage](https://www.softwareheritage.org/)\n- [Software Sustainability Institute](https://www.software.ac.uk/)\n"},{"_path":"/modules/citation/citationcff","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"CITATION.cff file","description":"","type":"reading","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"the-citationcff-file"},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To facilitate the citation of scientific software, a group of software developers, researchers, and publishers have come together to develop the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" format. A "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" file is a lightweight, machine-readable file that provides information about the software, its creators, and how it should be cited. This file can be included in the software, and should be easy to find and access."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are even nice integrations with GitHub and Zenodo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is an example of a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" file:"}]},{"type":"element","tag":"pre","props":{"code":"cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"the-citationcff-file","depth":2,"text":"The CITATION.cff file"}]}},"_type":"markdown","_id":"local_fs:modules:citation:citationcff.md","_source":"local_fs","_file":"modules/citation/citationcff.md","_stem":"modules/citation/citationcff","_extension":"md","plainText":"---\ntitle: CITATION.cff file\ntype: reading\norder: 4\n---\n\n## The `CITATION.cff` file\n\nTo facilitate the citation of scientific software, a group of software developers, researchers, and publishers have come together to develop the `CITATION.cff` format. A `CITATION.cff` file is a lightweight, machine-readable file that provides information about the software, its creators, and how it should be cited. This file can be included in the software, and should be easy to find and access.\n\nThere are even nice integrations with GitHub and Zenodo. \n\nHere is an example of a `CITATION.cff` file:\n\n```\ncff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n```\n"},{"_path":"/modules/citation/create_citation_file","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"CFFinit tool","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"using-cffinit-to-create-citationcff"},"children":[{"type":"text","value":"Using cffinit to create "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This tutorial demonstrates the use of CFFinit, to create a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" file. You can find the tool at "},{"type":"element","tag":"a","props":{"href":"https://citation-file-format.github.io/cff-initializer-javascript/#/","rel":["nofollow"]},"children":[{"type":"text","value":"citation-file-format.github.io/cff-initializer-javascript"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"using-cffinit-to-create-citationcff","depth":2,"text":"Using cffinit to create CITATION.cff"}]}},"_type":"markdown","_id":"local_fs:modules:citation:create_citation_file.md","_source":"local_fs","_file":"modules/citation/create_citation_file.md","_stem":"modules/citation/create_citation_file","_extension":"md","plainText":"---\ntitle: CFFinit tool\ntype: exercise\norder: 5\n---\n\n## Using cffinit to create `CITATION.cff`\n\nThis tutorial demonstrates the use of CFFinit, to create a `CITATION.cff` file. You can find the tool at [citation-file-format.github.io/cff-initializer-javascript](https://citation-file-format.github.io/cff-initializer-javascript/#/).\n"},{"_path":"/modules/citation/ex_what-to-cite","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"What to cite?","description":"","type":"exercise","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-to-cite-or-not-to-cite-that-is-the-question"},"children":[{"type":"text","value":"Exercise: To cite, or not to cite, that is the question..."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Suppose you are writing a paper on your latest research and are putting together the reference list. During your research you have used all the software mentioned below."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ubuntu - Operating System ()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Microsoft word - text editor (used to write the paper, take notes)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git - Version control software ()"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Numpy - Python math library (used in nearly all python-based research software)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ESMValTool - Diagnostic tool/library for Earth System Models (Used in many climate research projects)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ClimAnal - Your own domain specific python library (defines various analytical functions that you used in your climate research)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The original code on which you based your library ClimAnal"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Your own local python script, used to execute the analysis"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which software would you cite and which not? Why?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-to-cite-or-not-to-cite-that-is-the-question","depth":2,"text":"Exercise: To cite, or not to cite, that is the question..."}]}},"_type":"markdown","_id":"local_fs:modules:citation:ex_what-to-cite.md","_source":"local_fs","_file":"modules/citation/ex_what-to-cite.md","_stem":"modules/citation/ex_what-to-cite","_extension":"md","plainText":"---\ntitle: What to cite?\ntype: exercise\norder: 6\n---\n\n## Exercise: To cite, or not to cite, that is the question...\nSuppose you are writing a paper on your latest research and are putting together the reference list. During your research you have used all the software mentioned below. \n\n- Ubuntu - Operating System ()\n- Microsoft word - text editor (used to write the paper, take notes)\n- Git - Version control software ()\n- Numpy - Python math library (used in nearly all python-based research software)\n- ESMValTool - Diagnostic tool/library for Earth System Models (Used in many climate research projects)\n- ClimAnal - Your own domain specific python library (defines various analytical functions that you used in your climate research)\n- The original code on which you based your library ClimAnal\n- Your own local python script, used to execute the analysis\n\nWhich software would you cite and which not? Why?\n"},{"_path":"/modules/citation/further_reading","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"","type":"reading","order":7,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"links-for-further-reading"},"children":[{"type":"text","value":"Links for further reading"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The FORCE11 "},{"type":"element","tag":"a","props":{"href":"https://force11.org/info/software-citation-principles-published-2016/","rel":["nofollow"]},"children":[{"type":"text","value":"Software Citation Principles"}]},{"type":"text","value":" describe the rationale behind software citation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"An interactive guide on software citation can be found at "},{"type":"element","tag":"a","props":{"href":"https://cfa-library.github.io/citesoftware.org/","rel":["nofollow"]},"children":[{"type":"text","value":"citesoftware.org"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"An extensive (non-interactive) guide can be found at "},{"type":"element","tag":"a","props":{"href":"https://cite.research-software.org/","rel":["nofollow"]},"children":[{"type":"text","value":"cite.research-software.org"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To provide citation information "},{"type":"element","tag":"a","props":{"href":"https://citation-file-format.github.io/","rel":["nofollow"]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":" files can be created using the online "},{"type":"element","tag":"a","props":{"href":"https://citation-file-format.github.io/cff-initializer-javascript/#/","rel":["nofollow"]},"children":[{"type":"text","value":"CFFInit"}]},{"type":"text","value":" tool."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://mr-c.github.io/shouldacite/","rel":["nofollow"]},"children":[{"type":"text","value":"Shouldacite"}]},{"type":"text","value":" helps you decide when to cite software in your publications."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"links-for-further-reading","depth":2,"text":"Links for further reading"}]}},"_type":"markdown","_id":"local_fs:modules:citation:further_reading.md","_source":"local_fs","_file":"modules/citation/further_reading.md","_stem":"modules/citation/further_reading","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 7\n---\n\n## Links for further reading\n\n- The FORCE11 [Software Citation Principles](https://force11.org/info/software-citation-principles-published-2016/) describe the rationale behind software citation. \n- An interactive guide on software citation can be found at [citesoftware.org](https://cfa-library.github.io/citesoftware.org/).\n- An extensive (non-interactive) guide can be found at [cite.research-software.org](https://cite.research-software.org/).\n- To provide citation information [CITATION.cff](https://citation-file-format.github.io/) files can be created using the online [CFFInit](https://citation-file-format.github.io/cff-initializer-javascript/#/) tool.\n- [Shouldacite](https://mr-c.github.io/shouldacite/) helps you decide when to cite software in your publications.\n\n"},{"_path":"/modules/citation","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Citation","description":"Photo by Mrika Selimi on Unsplash","category":"Sharing Software","order":33,"author":"eScience Center","abstract":"Learn how and when to cite research software and make your software citable and why it is important.","thumbnail":"thumbnail-citation.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@mrika?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Mrika Selimi"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/a-pen-sitting-on-top-of-a-piece-of-paper-1ZO0QLfGe0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:citation:index.md","_source":"local_fs","_file":"modules/citation/index.md","_stem":"modules/citation/index","_extension":"md","plainText":"---\ntitle: Software Citation\ncategory: Sharing Software\norder: 33\nauthor: eScience Center\nabstract: Learn how and when to cite research software and make your software citable and why it is important. \nthumbnail: \"thumbnail-citation.jpg\"\nvisibility: visible\n---\n\n\nPhoto by <a href=\"https://unsplash.com/@mrika?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Mrika Selimi</a> on <a href=\"https://unsplash.com/photos/a-pen-sitting-on-top-of-a-piece-of-paper-1ZO0QLfGe0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  \n  "},{"_path":"/modules/citation/info","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why is it important to cite research software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are the principles of software citation?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I communicate the importance of citing software to researchers?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I guide researchers through the steps of making their software citable?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:citation:info.md","_source":"local_fs","_file":"modules/citation/info.md","_stem":"modules/citation/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- Why is it important to cite research software?\n- What are the principles of software citation?\n- How do I communicate the importance of citing software to researchers?\n- How do I guide researchers through the steps of making their software citable?\n"},{"_path":"/modules/citation/introduction","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"Citing software","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"citing-software"},"children":[{"type":"text","value":"Citing software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software has become a crucial part of scientific research, yet it is not cited or credited as often and as easily as traditional research outputs. However, it is important to properly cite software, for many reasons, among which:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Understanding Research Fields"}]},{"type":"text","value":": Software is a product of research, and by not citing it, we leave holes in the record of research of progress in those fields."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Recognition"}]},{"type":"text","value":": Academic researchers at all levels, including students, postdocs, faculty, and staff, should be credited for the software products they develop and contribute to, particularly when those products enable or further research done by others. Non-academic researchers should also be credited for their software work, though the specific forms of credit are different than for academic researchers. Furthermore, citations can be tracked, which allows for more accurate assessment of the software's impact: who uses it, and what projects does it contribute to?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Discovering Software"}]},{"type":"text","value":": Citations enable the specific software used in a research product to be found. Additional researchers can then use the same software for different purposes, leading to credit for those responsible for the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reproducibility"}]},{"type":"text","value":": Citation of specific software used is a crucial step in allowing other researchers to reproduce your results, although it is not sufficient. Additional information such as configurations and platform issues are also needed. Accurate information about the software — and its version! — used in your research is necessary for others to obtain and use the same software, making it easier to validate and build upon your research."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module, we will further illustrate the importance of software citation, and we will demonstrate how scientific software can be cited, and how to facilitate this as the author of scientific software. Here, you will be introduced to the file type "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]},{"type":"text","value":", which was developed especially for this purpose.\n:::"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"citing-software","depth":2,"text":"Citing software"}]}},"_type":"markdown","_id":"local_fs:modules:citation:introduction.md","_source":"local_fs","_file":"modules/citation/introduction.md","_stem":"modules/citation/introduction","_extension":"md","plainText":"---\ntitle: Citing software\ntype: reading\norder: 2\n---\n\n## Citing software\n\nSoftware has become a crucial part of scientific research, yet it is not cited or credited as often and as easily as traditional research outputs. However, it is important to properly cite software, for many reasons, among which:\n\n**Understanding Research Fields**: Software is a product of research, and by not citing it, we leave holes in the record of research of progress in those fields.\n\n**Recognition**: Academic researchers at all levels, including students, postdocs, faculty, and staff, should be credited for the software products they develop and contribute to, particularly when those products enable or further research done by others. Non-academic researchers should also be credited for their software work, though the specific forms of credit are different than for academic researchers. Furthermore, citations can be tracked, which allows for more accurate assessment of the software's impact: who uses it, and what projects does it contribute to?\n\n**Discovering Software**: Citations enable the specific software used in a research product to be found. Additional researchers can then use the same software for different purposes, leading to credit for those responsible for the software.\n\n**Reproducibility**: Citation of specific software used is a crucial step in allowing other researchers to reproduce your results, although it is not sufficient. Additional information such as configurations and platform issues are also needed. Accurate information about the software — and its version! — used in your research is necessary for others to obtain and use the same software, making it easier to validate and build upon your research.\n\nIn this module, we will further illustrate the importance of software citation, and we will demonstrate how scientific software can be cited, and how to facilitate this as the author of scientific software. Here, you will be introduced to the file type `CITATION.cff`, which was developed especially for this purpose.\n:::"},{"_path":"/modules/citation/principles","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"The principles","description":"","type":"reading","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h3","props":{"id":"the-software-citation-principles"},"children":[{"type":"text","value":"The software citation principles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The FORCE11 working group published the "},{"type":"element","tag":"a","props":{"href":"https://force11.org/info/software-citation-principles-published-2016/","rel":["nofollow"]},"children":[{"type":"text","value":"Software Citation Principles"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Importance"}]},{"type":"text","value":": Software should be considered a legitimate and citable product of research. Software citations should be accorded the same importance in the scholarly record as citations of other research products, such as publications and data; they should be included in the metadata of the citing work, for example in the reference list of a journal article, and should not be omitted or separated. Software should be cited on the same basis as any other research product such as a paper or a book, that is, authors should cite the appropriate set of software products just as they cite the appropriate set of papers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Credit and Attribution"}]},{"type":"text","value":": Software citations should facilitate giving scholarly credit and normative, legal attribution to all contributors to the software, recognizing that a single style or mechanism of attribution may not be applicable to all software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Unique Identification"}]},{"type":"text","value":": A software citation should include a method for identification that is machine actionable, globally unique, interoperable, and recognized by at least a community of the corresponding domain experts, and preferably by general public researchers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Persistence"}]},{"type":"text","value":": Unique identifiers and metadata describing the software and its disposition should persist – even beyond the lifespan of the software they describe."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Accessibility"}]},{"type":"text","value":": Software citations should facilitate access to the software itself and to its associated metadata, documentation, data, and other materials necessary for both humans and machines to make informed use of the referenced software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Specificity"}]},{"type":"text","value":": Software citations should facilitate identification of, and access to, the specific version of software that was used. Software identification should be as specific as necessary, such as using version numbers, revision numbers, or variants such as platforms."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"the-software-citation-principles","depth":3,"text":"The software citation principles"}]}},"_type":"markdown","_id":"local_fs:modules:citation:principles.md","_source":"local_fs","_file":"modules/citation/principles.md","_stem":"modules/citation/principles","_extension":"md","plainText":"---\ntitle: The principles\ntype: reading\norder: 3\n---\n\n### The software citation principles\nThe FORCE11 working group published the [Software Citation Principles](https://force11.org/info/software-citation-principles-published-2016/)\n\n**Importance**: Software should be considered a legitimate and citable product of research. Software citations should be accorded the same importance in the scholarly record as citations of other research products, such as publications and data; they should be included in the metadata of the citing work, for example in the reference list of a journal article, and should not be omitted or separated. Software should be cited on the same basis as any other research product such as a paper or a book, that is, authors should cite the appropriate set of software products just as they cite the appropriate set of papers.\n\n**Credit and Attribution**: Software citations should facilitate giving scholarly credit and normative, legal attribution to all contributors to the software, recognizing that a single style or mechanism of attribution may not be applicable to all software.\n\n**Unique Identification**: A software citation should include a method for identification that is machine actionable, globally unique, interoperable, and recognized by at least a community of the corresponding domain experts, and preferably by general public researchers.\n\n**Persistence**: Unique identifiers and metadata describing the software and its disposition should persist – even beyond the lifespan of the software they describe.\n\n**Accessibility**: Software citations should facilitate access to the software itself and to its associated metadata, documentation, data, and other materials necessary for both humans and machines to make informed use of the referenced software.\n\n**Specificity**: Software citations should facilitate identification of, and access to, the specific version of software that was used. Software identification should be as specific as necessary, such as using version numbers, revision numbers, or variants such as platforms.\n"},{"_path":"/modules/citation/slides-citation","_dir":"citation","_draft":false,"_partial":false,"_locale":"","title":"Software Citation","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-citation"},"children":[{"type":"text","value":"Software Citation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-would-you-cite-software"},"children":[{"type":"text","value":"Why would you cite software?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understanding Research Fields"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Credit for the researcher"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recognition of the software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Discovering Software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Understanding Research Fields"}]},{"type":"text","value":": Software is a product of research, and by not citing it, we leave holes in the record of research of progress in those fields."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Credit"}]},{"type":"text","value":": Academic researchers at all levels, including students, postdocs, faculty, and staff, should be credited for the software products they develop and contribute to, particularly when those products enable or further research done by others. Non-academic researchers should also be credited for their software work, though the specific forms of credit are different than for academic researchers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Discovering Software"}]},{"type":"text","value":": Citations enable the specific software used in a research product to be found. Additional researchers can then use the same software for different purposes, leading to credit for those responsible for the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reproducibility"}]},{"type":"text","value":": Citation of specific software used is necessary for reproducibility, although not sufficient. Additional information such as configurations and platform issues are also needed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-software-citation-principles"},"children":[{"type":"text","value":"The software citation principles"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Importance"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Credit and attribution"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unique Identification"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Persistence"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Accessibility"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Specificity"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Importance"}]},{"type":"text","value":": Software should be considered a legitimate and citable product of research. Software citations should be accorded the same importance in the scholarly record as citations of other research products, such as publications and data; they should be included in the metadata of the citing work, for example in the reference list of a journal article, and should not be omitted or separated. Software should be cited on the same basis as any other research product such as a paper or a book, that is, authors should cite the appropriate set of software products just as they cite the appropriate set of papers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Credit and Attribution"}]},{"type":"text","value":": Software citations should facilitate giving scholarly credit and normative, legal attribution to all contributors to the software, recognizing that a single style or mechanism of attribution may not be applicable to all software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Unique Identification"}]},{"type":"text","value":": A software citation should include a method for identification that is machine actionable, globally unique, interoperable, and recognized by at least a community of the corresponding domain experts, and preferably by general public researchers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Persistence"}]},{"type":"text","value":": Unique identifiers and metadata describing the software and its disposition should persist – even beyond the lifespan of the software they describe."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Accessibility"}]},{"type":"text","value":": Software citations should facilitate access to the software itself and to its associated metadata, documentation, data, and other materials necessary for both humans and machines to make informed use of the referenced software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Specificity"}]},{"type":"text","value":": Software citations should facilitate identification of, and access to, the specific version of software that was used. Software identification should be as specific as necessary, such as using version numbers, revision numbers, or variants such as platforms."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-software-to-cite"},"children":[{"type":"text","value":"What software to cite?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"\"...the software itself should be cited on the same basis as any other research product; authors should cite the appropriate set of software products.\""}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which software would you cite?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"how-to-make-your-software-citable"},"children":[{"type":"text","value":"How to make your software citable?"}]},{"type":"element","tag":"h2","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"citationcff"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CITATION.cff"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"pre","props":{"code":"cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-would-you-cite-software","depth":2,"text":"Why would you cite software?"},{"id":"the-software-citation-principles","depth":2,"text":"The software citation principles"},{"id":"what-software-to-cite","depth":2,"text":"What software to cite?"},{"id":"how-to-make-your-software-citable","depth":2,"text":"How to make your software citable?"},{"id":"","depth":2,"text":""},{"id":"citationcff","depth":2,"text":"CITATION.cff"}]}},"_type":"markdown","_id":"local_fs:modules:citation:slides-citation.md","_source":"local_fs","_file":"modules/citation/slides-citation.md","_stem":"modules/citation/slides-citation","_extension":"md","plainText":"---\ntitle: Software Citation\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Software Citation\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why would you cite software?\n- Understanding Research Fields\n- Credit for the researcher\n- Recognition of the software\n- Discovering Software\n- Reproducibility\n\n\nNote:\n\n**Understanding Research Fields**: Software is a product of research, and by not citing it, we leave holes in the record of research of progress in those fields.\n\n**Credit**: Academic researchers at all levels, including students, postdocs, faculty, and staff, should be credited for the software products they develop and contribute to, particularly when those products enable or further research done by others. Non-academic researchers should also be credited for their software work, though the specific forms of credit are different than for academic researchers.\n\n**Discovering Software**: Citations enable the specific software used in a research product to be found. Additional researchers can then use the same software for different purposes, leading to credit for those responsible for the software.\n\n**Reproducibility**: Citation of specific software used is necessary for reproducibility, although not sufficient. Additional information such as configurations and platform issues are also needed.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## The software citation principles\n\n- Importance\n- Credit and attribution\n- Unique Identification\n- Persistence\n- Accessibility\n- Specificity\n\n\n\nNote:\n\n**Importance**: Software should be considered a legitimate and citable product of research. Software citations should be accorded the same importance in the scholarly record as citations of other research products, such as publications and data; they should be included in the metadata of the citing work, for example in the reference list of a journal article, and should not be omitted or separated. Software should be cited on the same basis as any other research product such as a paper or a book, that is, authors should cite the appropriate set of software products just as they cite the appropriate set of papers.\n\n**Credit and Attribution**: Software citations should facilitate giving scholarly credit and normative, legal attribution to all contributors to the software, recognizing that a single style or mechanism of attribution may not be applicable to all software.\n\n**Unique Identification**: A software citation should include a method for identification that is machine actionable, globally unique, interoperable, and recognized by at least a community of the corresponding domain experts, and preferably by general public researchers.\n\n**Persistence**: Unique identifiers and metadata describing the software and its disposition should persist – even beyond the lifespan of the software they describe.\n\n**Accessibility**: Software citations should facilitate access to the software itself and to its associated metadata, documentation, data, and other materials necessary for both humans and machines to make informed use of the referenced software.\n\n**Specificity**: Software citations should facilitate identification of, and access to, the specific version of software that was used. Software identification should be as specific as necessary, such as using version numbers, revision numbers, or variants such as platforms.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## What software to cite?\n\n*\"...the software itself should be cited on the same basis as any other research product; authors should cite the appropriate set of software products.\"*\n\nWhich software would you cite?\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## How to make your software citable?\n##  \n## `CITATION.cff`\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n```\ncff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - family-names: Druskat\n    given-names: Stephan\n    orcid: https://orcid.org/1234-5678-9101-1121\ntitle: \"My Research Software\"\nversion: 2.0.4\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.1234\ndate-released: 2021-08-11\n```\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/distributing/distributing","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Distributing Software","description":"How do you make it easy for someone else to obtain a copy and get it set up on their computer so that they can use it?","type":"reading","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"distributing-software-10-minutes"},"children":[{"type":"text","value":"Distributing software (10 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How do you make it easy for someone else to obtain a copy and get it set up on their computer so that they can use it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modern software contsists of an often large collection of components (libraries, packages) that are combined together to form an application. This whole collection needs to be reproduced on the computer of the user for things to work. There are two ways of doing that: 1) combining them all together on the computer of the developer, and then wrapping everything up into a package, installer, container image, or VM image that is sent to the user, or 2) putting the components that you made yourself on the Internet (as a package), and relying on the user to download the other components (packages) and assembling it all together into a working application."}]},{"type":"element","tag":"h2","props":{"id":"monolithic-applications"},"children":[{"type":"text","value":"Monolithic applications"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Option 1) works for applications, which are more or less independent. If they're used together, then it's by saving a file from one and opening it in another application. Each application contains all the bits it needs, and is installed on the user's computer in a separate folder, away from everything else. That means that different applications don't get in each other's way, but it's also rather inefficient if many applications use the same component, because you end up with many copies of that component."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you do choose option 1), then you still have a choice between making a package, an installer, a container image, or a virtual machine image. A package is an archive (think a ZIP-file, which it often literally is) that contains, in this case, all the components needed by the application. Since it's just a file, a package needs to be installed by a special program called a package manager. The App Store or Play Store on your phone is such a program."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An installer is itself a computer program, that also contains all the components needed by the application. It gets downloaded by the user, who then runs it, after which it copies all the components from within itself onto the user's computer. It can then run there just like an application installed from a package using a package manager."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A container image is a special kind of package. It also contains all the parts needed to run a program, but it is run in a special isolated environment called a container. A normal application can access everything else on the computer, including files and parts of other applications. It's set up to use its own components of course, but it could access other things if it wanted or needed to. An application that runs in a container can't do this, it's isolated from everything else except for the operating system. This is an advantage for example if the software runs on a server that is accessible from the Internet, because it provides some security. It also makes it easy to run many copies of the software on many servers, so that you can serve many users."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A Virtual Machine finally is even more isolated. It contains its own operating system together with the application, so that the running application cannot even access the operating system on the user's computer. This has similar advantages as a container, being more secure, but it's also slower than using containers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So these are the different ways option 1), distributing a monolithic application with everything included, can be implemented. As said, this reduces potential compatibility problems, but isn't very efficient because you end up with many copies of everything."}]},{"type":"element","tag":"h2","props":{"id":"separate-packages"},"children":[{"type":"text","value":"Separate packages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Option 2) is more efficient than option 1), because the user can just install each component once, and then every other component that needs it can use it. There are drawbacks here as well though. First, the user needs to figure out which components are needed for a particular application, and then install them one by one. This puts them in an unpleasant place called \"dependency hell\"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dependency hell was mostly solved by the invention of package managers, which automate the process of downloading and installing the required components. Example are pip, conda, apt, and Homebrew. If each component is put into a package with some metadata that describes which other packages it needs, then the package manager can do all that automatically, at least assuming that everything is Open Source and freely available online, because it cannot go to the shop to buy a license for everything. Still, often everything is Open Source and then this saves a huge amount of work. Dependency hell is not the only problem however."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is continuously developed, and that means that it changes over time. Those changes sometimes change how a component is used by other components, which then need to be updated too. So the user may end up with an older program that only works with an older version of component X, while they also want to used a different newer program that works only with a newer version of X. A good package manager will give an error message in that case, but that doesn't solve the problem. Which version do you install?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are again two common solutions to this, distributions and environments. A distribution, like Ubuntu, is made by a group of people who create a collection of packages that are all compatible with each other, meaning that every package in it that uses package X works with the same version of package X, namely the one that's included in the distribution. This takes a significant amount of work, but it's very nice because you only have one version of everything, and maximal space efficiency. Of course there are still updates, but they happen once every six months or several years, and then everything is updated at once. That does mean that you don't get the latest version right away, but also that things just work and don't suddenly break. (Cathedral!)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another way to fix the multiple options of X problem is to use environments. An environment is a separate part of the computer into which packages can be installed, in such a way that only packages within the environment are combined. So now you can install one application in one environment with one version of X, and the other application in another environment with another version of X. That costs more disk space, but it's easier to get the latest stuff, and it doesn't require all the work of constantly ensuring everything is compatible. So this makes option 2) look a bit more like option 1) again, although you can still have fewer environments than you have applications. (Bazaar!)"}]},{"type":"element","tag":"h2","props":{"id":"which-option-to-choose-when"},"children":[{"type":"text","value":"Which option to choose when"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Scientific software is often a script, which is basically the topmost component in the whole collection of components. Scripts mostly just tell other components what to do. Since the script isn't used by other components, it can be packaged as an application in either of the above-mentioned ways. Users can the install and run it to "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"reproduce"}]},{"type":"text","value":" the results, but not easily use it in their own script or modify it to do something different but related."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sometimes, scientists (or Research Software Engineers!) develop components that are intended for use by others in their scripts, or even in other components. Those need to be packaged as packages for a package manager, because they need to be combined with other packages on the user's computer. (The user is a programmer, in this case!) This allows the software to be "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"reused"}]},{"type":"text","value":" by others in their scripts."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, for others to be able to modify the software and perhaps contribute some new feature or fixes back to it, the source code of the software needs to be available through a public repository. Package managers and installers don't normally install software in a way that makes it easy to modify, as that's not what they're designed for. To be able to modify the software, you need the source code, in a version control system. So besides in a package or container repository, don't forget to make a public git repository too!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"monolithic-applications","depth":2,"text":"Monolithic applications"},{"id":"separate-packages","depth":2,"text":"Separate packages"},{"id":"which-option-to-choose-when","depth":2,"text":"Which option to choose when"}]}},"_type":"markdown","_id":"local_fs:modules:distributing:distributing.md","_source":"local_fs","_file":"modules/distributing/distributing.md","_stem":"modules/distributing/distributing","_extension":"md","plainText":"---\ntitle: Distributing Software\ntype: reading\norder: 4\n---\n\n# Distributing software (10 minutes)\n\nHow do you make it easy for someone else to obtain a copy and get it set up on their computer so that they can use it?\n\nModern software contsists of an often large collection of components (libraries, packages) that are combined together to form an application. This whole collection needs to be reproduced on the computer of the user for things to work. There are two ways of doing that: 1) combining them all together on the computer of the developer, and then wrapping everything up into a package, installer, container image, or VM image that is sent to the user, or 2) putting the components that you made yourself on the Internet (as a package), and relying on the user to download the other components (packages) and assembling it all together into a working application.\n\n## Monolithic applications\n\nOption 1) works for applications, which are more or less independent. If they're used together, then it's by saving a file from one and opening it in another application. Each application contains all the bits it needs, and is installed on the user's computer in a separate folder, away from everything else. That means that different applications don't get in each other's way, but it's also rather inefficient if many applications use the same component, because you end up with many copies of that component.\n\nIf you do choose option 1), then you still have a choice between making a package, an installer, a container image, or a virtual machine image. A package is an archive (think a ZIP-file, which it often literally is) that contains, in this case, all the components needed by the application. Since it's just a file, a package needs to be installed by a special program called a package manager. The App Store or Play Store on your phone is such a program.\n\nAn installer is itself a computer program, that also contains all the components needed by the application. It gets downloaded by the user, who then runs it, after which it copies all the components from within itself onto the user's computer. It can then run there just like an application installed from a package using a package manager.\n\nA container image is a special kind of package. It also contains all the parts needed to run a program, but it is run in a special isolated environment called a container. A normal application can access everything else on the computer, including files and parts of other applications. It's set up to use its own components of course, but it could access other things if it wanted or needed to. An application that runs in a container can't do this, it's isolated from everything else except for the operating system. This is an advantage for example if the software runs on a server that is accessible from the Internet, because it provides some security. It also makes it easy to run many copies of the software on many servers, so that you can serve many users.\n\nA Virtual Machine finally is even more isolated. It contains its own operating system together with the application, so that the running application cannot even access the operating system on the user's computer. This has similar advantages as a container, being more secure, but it's also slower than using containers.\n\nSo these are the different ways option 1), distributing a monolithic application with everything included, can be implemented. As said, this reduces potential compatibility problems, but isn't very efficient because you end up with many copies of everything.\n\n## Separate packages\n\nOption 2) is more efficient than option 1), because the user can just install each component once, and then every other component that needs it can use it. There are drawbacks here as well though. First, the user needs to figure out which components are needed for a particular application, and then install them one by one. This puts them in an unpleasant place called \"dependency hell\".\n\nDependency hell was mostly solved by the invention of package managers, which automate the process of downloading and installing the required components. Example are pip, conda, apt, and Homebrew. If each component is put into a package with some metadata that describes which other packages it needs, then the package manager can do all that automatically, at least assuming that everything is Open Source and freely available online, because it cannot go to the shop to buy a license for everything. Still, often everything is Open Source and then this saves a huge amount of work. Dependency hell is not the only problem however.\n\nSoftware is continuously developed, and that means that it changes over time. Those changes sometimes change how a component is used by other components, which then need to be updated too. So the user may end up with an older program that only works with an older version of component X, while they also want to used a different newer program that works only with a newer version of X. A good package manager will give an error message in that case, but that doesn't solve the problem. Which version do you install?\n\nThere are again two common solutions to this, distributions and environments. A distribution, like Ubuntu, is made by a group of people who create a collection of packages that are all compatible with each other, meaning that every package in it that uses package X works with the same version of package X, namely the one that's included in the distribution. This takes a significant amount of work, but it's very nice because you only have one version of everything, and maximal space efficiency. Of course there are still updates, but they happen once every six months or several years, and then everything is updated at once. That does mean that you don't get the latest version right away, but also that things just work and don't suddenly break. (Cathedral!)\n\nAnother way to fix the multiple options of X problem is to use environments. An environment is a separate part of the computer into which packages can be installed, in such a way that only packages within the environment are combined. So now you can install one application in one environment with one version of X, and the other application in another environment with another version of X. That costs more disk space, but it's easier to get the latest stuff, and it doesn't require all the work of constantly ensuring everything is compatible. So this makes option 2) look a bit more like option 1) again, although you can still have fewer environments than you have applications. (Bazaar!)\n\n## Which option to choose when\n\nScientific software is often a script, which is basically the topmost component in the whole collection of components. Scripts mostly just tell other components what to do. Since the script isn't used by other components, it can be packaged as an application in either of the above-mentioned ways. Users can the install and run it to *reproduce* the results, but not easily use it in their own script or modify it to do something different but related.\n\nSometimes, scientists (or Research Software Engineers!) develop components that are intended for use by others in their scripts, or even in other components. Those need to be packaged as packages for a package manager, because they need to be combined with other packages on the user's computer. (The user is a programmer, in this case!) This allows the software to be *reused* by others in their scripts.\n\nFinally, for others to be able to modify the software and perhaps contribute some new feature or fixes back to it, the source code of the software needs to be available through a public repository. Package managers and installers don't normally install software in a way that makes it easy to modify, as that's not what they're designed for. To be able to modify the software, you need the source code, in a version control system. So besides in a package or container repository, don't forget to make a public git repository too!"},{"_path":"/modules/distributing/exercise-tracking","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Dependency tracking","description":"","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"dependency-tracking-10-minutes"},"children":[{"type":"text","value":"Dependency tracking (10 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A common place to specify dependencies is in a file called "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"requirements.txt"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"pyproject.toml"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"environment.yml"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go into a source code repository of a piece of software you know and try to track down dependencies. Try to also find the soruce code of one of the dependencies and see if you can find the dependencies of this dependency. How many layers of this \"dependency tree\" can you follow?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can also use one of the following projects:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"dependency-tracking-10-minutes","depth":2,"text":"Dependency tracking (10 minutes)"}]}},"_type":"markdown","_id":"local_fs:modules:distributing:exercise-tracking.md","_source":"local_fs","_file":"modules/distributing/exercise-tracking.md","_stem":"modules/distributing/exercise-tracking","_extension":"md","plainText":"---\ntitle: Dependency tracking\ntype: exercise\norder: 3\n---\n\n## Dependency tracking (10 minutes)\n\nA common place to specify dependencies is in a file called `requirements.txt`, `pyproject.toml` or `environment.yml`. \n\nGo into a source code repository of a piece of software you know and try to track down dependencies. Try to also find the soruce code of one of the dependencies and see if you can find the dependencies of this dependency. How many layers of this \"dependency tree\" can you follow?\n\nYou can also use one of the following projects: \n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)"},{"_path":"/modules/distributing/further-reading","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blogpost: "},{"type":"element","tag":"a","props":{"href":"https://medium.com/kitchen-sink-data-science/software-fundamentals-for-machine-learning-series-understanding-the-why-of-vms-containers-89621cf66d23","rel":["nofollow"]},"children":[{"type":"text","value":"Understanding the “Why” of VM’s, Containers, & Virtual Environments"}]},{"type":"text","value":" Blogpost on the difference between"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:distributing:further-reading.md","_source":"local_fs","_file":"modules/distributing/further-reading.md","_stem":"modules/distributing/further-reading","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 5\n---\n\n- Blogpost: [Understanding the “Why” of VM’s, Containers, & Virtual Environments](https://medium.com/kitchen-sink-data-science/software-fundamentals-for-machine-learning-series-understanding-the-why-of-vms-containers-89621cf66d23) Blogpost on the difference between "},{"_path":"/modules/distributing","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Distribution","description":"Photo by frank mckenna on Unsplash","category":"Sharing Software","order":15,"abstract":"Software needs to be distributed to be used by others. What are environments, packages and containers and how do they help?","author":"eScience Center","thumbnail":"thumbnail-containers.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@frankiefoto?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"frank mckenna"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/assorted-color-filed-intermodal-containers-tjX_sniNzgQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:distributing:index.md","_source":"local_fs","_file":"modules/distributing/index.md","_stem":"modules/distributing/index","_extension":"md","plainText":"---\ntitle: Software Distribution\ncategory: Sharing Software\norder: 15\nabstract: Software needs to be distributed to be used by others. What are environments, packages and containers and how do they help?\nauthor: eScience Center\nthumbnail: \"thumbnail-containers.jpg\"\nvisibility: visible\n---\n\n\nPhoto by <a href=\"https://unsplash.com/@frankiefoto?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">frank mckenna</a> on <a href=\"https://unsplash.com/photos/assorted-color-filed-intermodal-containers-tjX_sniNzgQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  "},{"_path":"/modules/distributing/info","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"Obtain the skills and knowledge necessary to address the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Obtain the skills and knowledge necessary to address the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is software distribution and what aspects of it are important for research software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why is it important to think about dependency management?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are environments, dependencies, packages and containers?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:distributing:info.md","_source":"local_fs","_file":"modules/distributing/info.md","_stem":"modules/distributing/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nObtain the skills and knowledge necessary to address the following questions:\n- What is software distribution and what aspects of it are important for research software?\n- Why is it important to think about dependency management?\n- What are environments, dependencies, packages and containers?"},{"_path":"/modules/distributing/slides-distributing","_dir":"distributing","_draft":false,"_partial":false,"_locale":"","title":"Distributing Software","description":"===","type":"slides","order":1,"author":"Jaro Camphuijsen, Lourens Veen","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"distributing-software"},"children":[{"type":"text","value":"Distributing Software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-distribute"},"children":[{"type":"text","value":"Why distribute?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For your future self"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For others that might be interested"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For reproducibility"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For reusability"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nThere are many reasons why you would want to distribute your software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-cant-i-just-publish-and-be-done"},"children":[{"type":"text","value":"Why can't I just publish and be done?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A piece of software never operates in isolation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Depends on other software (third party packages, libraries)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Depends on system software (operating system, drivers, firmware)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Depends on hardware (your computer and the chips inside, display or printer)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The world (hardware, software, people) around your software is constantly evolving"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nSoftware by nature always depends on other software and hardware."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note: Sometimes you enter dependency hell"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-issues-may-arise"},"children":[{"type":"text","value":"What issues may arise?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Many dependencies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Long chains of dependencies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conflicting dependencies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Circular dependencies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Package manager dependencies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Diamond dependency"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"... and all of these are changing."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-solutions-exist"},"children":[{"type":"text","value":"What solutions exist?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Isolation or specification"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"isolation"},"children":[{"type":"text","value":"Isolation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Layers of isolation","src":"/modules/distributing/media/distributing-software-layers.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"specification"},"children":[{"type":"text","value":"Specification"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let the user (or some tool) solve the probem..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"requirements.txt"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"environment.yml"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pyproject.toml"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"package.json\netc..."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nSpecify the dependencies in a file and let the user build their own environment, container or vm."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"considerations"},"children":[{"type":"text","value":"Considerations"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Large amount of isolation enhances reproducibility but decreases flexibility."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Leaving it up to the user can be done for simple scripts (most research software)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"rules-of-thumb"},"children":[{"type":"text","value":"Rules of thumb"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simple scripts can use a simple dependency specification"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If other software might depend on this software, package it"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To archive a specific software version and its environment, you could use a container"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-distribute","depth":2,"text":"Why distribute?"},{"id":"why-cant-i-just-publish-and-be-done","depth":2,"text":"Why can't I just publish and be done?"},{"id":"what-issues-may-arise","depth":2,"text":"What issues may arise?"},{"id":"what-solutions-exist","depth":2,"text":"What solutions exist?"},{"id":"isolation","depth":2,"text":"Isolation"},{"id":"specification","depth":2,"text":"Specification"},{"id":"considerations","depth":2,"text":"Considerations"},{"id":"rules-of-thumb","depth":2,"text":"Rules of thumb"}]}},"_type":"markdown","_id":"local_fs:modules:distributing:slides-distributing.md","_source":"local_fs","_file":"modules/distributing/slides-distributing.md","_stem":"modules/distributing/slides-distributing","_extension":"md","plainText":"---\ntitle: Distributing Software\ntype: slides\norder: 1\nauthor: Jaro Camphuijsen, Lourens Veen\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Distributing Software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why distribute?\n\n- For your future self\n- For others that might be interested\n- For reproducibility \n- For reusability\n\nnote:\nThere are many reasons why you would want to distribute your software. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why can't I just publish and be done?\n\n- A piece of software never operates in isolation. \n- Depends on other software (third party packages, libraries)\n- Depends on system software (operating system, drivers, firmware)\n- Depends on hardware (your computer and the chips inside, display or printer)\n- The world (hardware, software, people) around your software is constantly evolving\n\nnote:\nSoftware by nature always depends on other software and hardware. \n\n===\n\n<!-- .slide: data-state=\"standard\" data-background-image=\"media/fire.png\"-->\n\nnote: Sometimes you enter dependency hell\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What issues may arise?\n\n- Many dependencies\n- Long chains of dependencies\n- Conflicting dependencies\n- Circular dependencies\n- Package manager dependencies\n- Diamond dependency\n\n... and all of these are changing.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What solutions exist?\n\nIsolation or specification\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Isolation\n\n![Layers of isolation](media/distributing-software-layers.png)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Specification\n\nLet the user (or some tool) solve the probem...\n\n- requirements.txt\n- environment.yml\n- pyproject.toml\n- package.json\netc...\n\nnote:\nSpecify the dependencies in a file and let the user build their own environment, container or vm.\n\n===\n\n## Considerations\n\n- Large amount of isolation enhances reproducibility but decreases flexibility.\n- Leaving it up to the user can be done for simple scripts (most research software)\n\n===\n\n## Rules of thumb   \n\n- Simple scripts can use a simple dependency specification\n- If other software might depend on this software, package it\n- To archive a specific software version and its environment, you could use a container\n\n"},{"_path":"/modules/documentation/ex_suitability","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Suitable documentation","description":"As a group, consider the project that you worked on for your homework assignment.","type":"exercise","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"what-is-suitable-documentation-for-your-project"},"children":[{"type":"text","value":"What is suitable documentation for \"your\" project?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a group, consider the project that you worked on for your homework assignment."}]},{"type":"element","tag":"h2","props":{"id":"types-of-documentation"},"children":[{"type":"text","value":"Type(s) of documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Which type of of documentation currently exists? Is there anything missing/do you think anything is a bit over the top?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is not necessary to dive too deep into the codebase/repository for this. Answer based on what you can see"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"README"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tutorial(s)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In-code documentation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"API reference"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Overview of components"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User documentation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Developer documentation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deployment documentation"}]}]},{"type":"element","tag":"h2","props":{"id":"documentation-contents"},"children":[{"type":"text","value":"Documentation contents"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Which of the following piees of information are/should be included, and where?"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Purpose"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authors"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"License"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recommended citation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy-paste-able example to get started"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dependencies and their versions or version ranges"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Installation instructions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tutorials covering key functionality"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reference documentation (e.g. API) covering all functionality"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How you want to be asked questions (mailing list or forum or chat or issue tracker)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Possibly a FAQ section"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contribution guide"}]}]},{"type":"element","tag":"h2","props":{"id":"motivation"},"children":[{"type":"text","value":"Motivation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"How would you motivate your colleagues/researchers to contribute to the documentation?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"types-of-documentation","depth":2,"text":"Type(s) of documentation"},{"id":"documentation-contents","depth":2,"text":"Documentation contents"},{"id":"motivation","depth":2,"text":"Motivation"}]}},"_type":"markdown","_id":"local_fs:modules:documentation:ex_suitability.md","_source":"local_fs","_file":"modules/documentation/ex_suitability.md","_stem":"modules/documentation/ex_suitability","_extension":"md","plainText":"---\ntitle: Suitable documentation\ntype: exercise\norder: 4\n---\n\n# What is suitable documentation for \"your\" project?\n\nAs a group, consider the project that you worked on for your homework assignment.\n\n\n## Type(s) of documentation\n\n*Which type of of documentation currently exists? Is there anything missing/do you think anything is a bit over the top?*\n\nIt is not necessary to dive too deep into the codebase/repository for this. Answer based on what you can see \n\n- README\n- Tutorial(s)\n- In-code documentation\n- API reference\n- Overview of components\n- User documentation\n- Developer documentation\n- Deployment documentation\n\n\n## Documentation contents\n\n*Which of the following piees of information are/should be included, and where?*\n\n- Purpose\n- Authors\n- License\n- Recommended citation\n- Copy-paste-able example to get started\n- Dependencies and their versions or version ranges\n- Installation instructions\n- Tutorials covering key functionality\n- Reference documentation (e.g. API) covering all functionality\n- How you want to be asked questions (mailing list or forum or chat or issue tracker)\n- Possibly a FAQ section\n- Contribution guide\n\n## Motivation\n\n*How would you motivate your colleagues/researchers to contribute to the documentation?*\n"},{"_path":"/modules/documentation/exercise-levels","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Levels of documentation","description":"Joanne is working on her research software 'WeatherMap' that analyses and summarizes measurements from weather stations.","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"when-to-use-which-documentation"},"children":[{"type":"text","value":"When to use which documentation?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Joanne is working on her research software 'WeatherMap' that analyses and summarizes measurements from weather stations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is a list of possible forms of documentation:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A basic README file containing: quick installation instructions, two lines explaining why the software was created,\ntwo basic examples of how you can use the software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A tutorial: 'Finding unusual patterns in daily average temperatures using WeatherMap'."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In-code documentation: Comments in her code that explain why she made certain implementation choices."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"API reference: Detailed description of each function/class of WeatherMap."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Overview of components: A detailed overview of each component in the software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User documentation: Extensive documentation on how users can use each of the functionalities of WeatherMap."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Naming: Logical names for functions, modules, and classes so that it is immediately clear what the corresponding piece of code does."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For the following scenarios, which forms of documentation would you suggest Joanne to incorporate in her project:"}]},{"type":"element","tag":"h2","props":{"id":"scenario-a"},"children":[{"type":"text","value":"Scenario A:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Joanne just started her PhD and is the only one using WeatherMap to create results for her first paper.\nShe does not really care about anyone else using her software."}]},{"type":"element","tag":"h2","props":{"id":"scenario-b"},"children":[{"type":"text","value":"Scenario B:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Joanne works together with a few other PhD students in her research group on the software.\nShe wants to make it easier for other researchers in her group to also adopt the software,\nand finds it important that when she moves on to a different job that the software can be still be used and improved in her absence."}]},{"type":"element","tag":"h2","props":{"id":"scenario-c"},"children":[{"type":"text","value":"Scenario C:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Joanne and her colleagues spend half of their time updating and improving WeatherMap.\nThey have a large community of users around the globe that depend on WeatherMap for their research."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"scenario-a","depth":2,"text":"Scenario A:"},{"id":"scenario-b","depth":2,"text":"Scenario B:"},{"id":"scenario-c","depth":2,"text":"Scenario C:"}]}},"_type":"markdown","_id":"local_fs:modules:documentation:exercise-levels.md","_source":"local_fs","_file":"modules/documentation/exercise-levels.md","_stem":"modules/documentation/exercise-levels","_extension":"md","plainText":"---\ntitle: Levels of documentation\ntype: exercise\norder: 3\n---\n\n# When to use which documentation?\nJoanne is working on her research software 'WeatherMap' that analyses and summarizes measurements from weather stations.\n\nHere is a list of possible forms of documentation:\n1. A basic README file containing: quick installation instructions, two lines explaining why the software was created, \ntwo basic examples of how you can use the software.\n2. A tutorial: 'Finding unusual patterns in daily average temperatures using WeatherMap'.\n3. In-code documentation: Comments in her code that explain why she made certain implementation choices.\n5. API reference: Detailed description of each function/class of WeatherMap.\n6. Overview of components: A detailed overview of each component in the software.\n7. User documentation: Extensive documentation on how users can use each of the functionalities of WeatherMap.\n8. Naming: Logical names for functions, modules, and classes so that it is immediately clear what the corresponding piece of code does.\n\n\nFor the following scenarios, which forms of documentation would you suggest Joanne to incorporate in her project:\n\n## Scenario A:\nJoanne just started her PhD and is the only one using WeatherMap to create results for her first paper. \nShe does not really care about anyone else using her software.\n\n## Scenario B:\nJoanne works together with a few other PhD students in her research group on the software. \nShe wants to make it easier for other researchers in her group to also adopt the software, \nand finds it important that when she moves on to a different job that the software can be still be used and improved in her absence.\n\n## Scenario C:\nJoanne and her colleagues spend half of their time updating and improving WeatherMap. \nThey have a large community of users around the globe that depend on WeatherMap for their research.\n"},{"_path":"/modules/documentation","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Documentation","description":"","category":"Developing Software","order":13,"abstract":"Why should researchers document their code? Which kinds of documentation are useful for what purpose?","author":"eScience Center","thumbnail":"thumbnail-documentation.jpg","visibility":"visible","body":{"type":"root","children":[],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:documentation:index.md","_source":"local_fs","_file":"modules/documentation/index.md","_stem":"modules/documentation/index","_extension":"md","plainText":"---\ntitle: Software Documentation\ncategory: Developing Software\norder: 13\nabstract: Why should researchers document their code? Which kinds of documentation are useful for what purpose?\nauthor: eScience Center\nthumbnail: \"thumbnail-documentation.jpg\"\nvisibility: visible\n---\n"},{"_path":"/modules/documentation/info","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is code documentation?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why is documentation considered best practice in software development and how do I communicate that to researchers?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are some of the ways code is documented in practice?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:documentation:info.md","_source":"local_fs","_file":"modules/documentation/info.md","_stem":"modules/documentation/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What is code documentation?\n- Why is documentation considered best practice in software development and how do I communicate that to researchers?\n- What are some of the ways code is documented in practice?\n"},{"_path":"/modules/documentation/reading","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"reusability-requires-good-documentation"},"children":[{"type":"text","value":"Reusability requires good documentation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://book.the-turing-way.org/reproducible-research/code-reuse/code-reuse-overview","rel":["nofollow"]},"children":[{"type":"text","value":"https://book.the-turing-way.org/reproducible-research/code-reuse/code-reuse-overview"}]}]}]},{"type":"element","tag":"h2","props":{"id":"readme"},"children":[{"type":"text","value":"README"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The README file is usually the first thing users/collaborators see when visiting your GitHub repository.\nUse it to communicate important information about your project! For many smaller or mid-size projects, this is enough documentation."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://makeareadme.com%3E","rel":["nofollow"]},"children":[{"type":"text","value":"https://makeareadme.com>"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://gist.github.com/jxson/1784669","rel":["nofollow"]},"children":[{"type":"text","value":"https://gist.github.com/jxson/1784669"}]}]}]},{"type":"element","tag":"h2","props":{"id":"popular-tools-foor-building-more-complex-documentation"},"children":[{"type":"text","value":"Popular tools foor building more complex documentation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://coderefinery.github.io/documentation/tools","rel":["nofollow"]},"children":[{"type":"text","value":"https://coderefinery.github.io/documentation/tools"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"reusability-requires-good-documentation","depth":2,"text":"Reusability requires good documentation"},{"id":"readme","depth":2,"text":"README"},{"id":"popular-tools-foor-building-more-complex-documentation","depth":2,"text":"Popular tools foor building more complex documentation"}]}},"_type":"markdown","_id":"local_fs:modules:documentation:reading.md","_source":"local_fs","_file":"modules/documentation/reading.md","_stem":"modules/documentation/reading","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 5\n---\n\n## Reusability requires good documentation\n\n- https://book.the-turing-way.org/reproducible-research/code-reuse/code-reuse-overview\n\n## README\nThe README file is usually the first thing users/collaborators see when visiting your GitHub repository.\nUse it to communicate important information about your project! For many smaller or mid-size projects, this is enough documentation.\n\n- https://makeareadme.com>\n- https://gist.github.com/jxson/1784669\n\n## Popular tools foor building more complex documentation\n\n- https://coderefinery.github.io/documentation/tools\n"},{"_path":"/modules/documentation/slides_documentation","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Documentation","description":"===","type":"slides","order":1,"author":"Luisa Orozco, Barbara Vreede, Jaro Camphuijsen, Carlos Martinez, Max Paulus, Robin Richardson","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"documentation"},"children":[{"type":"text","value":"Documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-is-documentation"},"children":[{"type":"text","value":"What is documentation?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Provides context for your work"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Allows your collaborators "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"and future you"}]},{"type":"text","value":" to understand what has been done and why"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-document-software"},"children":[{"type":"text","value":"Why document software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Make your software reusable:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A user should be able to run your software in the same way as you do now"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A user should be able to install your software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A contributor should be able to add to, improve, or fix code"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"documentation-purpose-types"},"children":[{"type":"text","value":"Documentation purpose types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Documentation can have different purposes:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"User documentation"}]},{"type":"text","value":": What does the software do? How can it be used?"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Developer documentation"}]},{"type":"text","value":": How can your software be modified or extended?"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Deployment documentation"}]},{"type":"text","value":": What hardware and software requirements are there?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"documentation-formats"},"children":[{"type":"text","value":"Documentation formats"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In-code: intended for contributors (comments, docstrings, ...)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"README: simple text file, first thing that users/collaborators see"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Websites, Wikis"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"a-good-readme-file"},"children":[{"type":"text","value":"A good README file"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"README file is first thing a user/collaborator sees"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What should be included in README files?"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{"contentEditable":"true"},"children":[{"type":"text","value":"..."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A descriptive project title"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Motivation (why the project exists) and basics"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Installation / How to setup"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Copy-pasteable quick start code example"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Usage reference (if not elsewhere)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recommended citation if someone uses it"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Other related tools (\"see also\")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contact information for the developer(s)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"License information"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contributing guidelines"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-write-in-code-documentation"},"children":[{"type":"text","value":"Why write in-code documentation?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In-code documentation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Makes code more understandable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explains decisions that were made"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"when-not-to-use-in-code-documentation"},"children":[{"type":"text","value":"When "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"not"}]},{"type":"text","value":" to use in-code documentation?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"When the code is self-explanatory"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To replace good variable/function names"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To replace version control"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"To keep old (zombie) code around"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"readable-code-vs-commented-code"},"children":[{"type":"text","value":"Readable code vs commented code"}]},{"type":"element","tag":"pre","props":{"className":["language-python="],"code":"# convert from degrees celsius to fahrenheit\ndef convert(d):\n    return d * 5 / 9 + 32\n","language":"python=","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# convert from degrees celsius to fahrenheit\ndef convert(d):\n    return d * 5 / 9 + 32\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"vs"}]},{"type":"element","tag":"pre","props":{"className":["language-python="],"code":"def celsius_to_fahrenheit(degrees):\n    return degrees * 5 / 9 + 32\n","language":"python=","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def celsius_to_fahrenheit(degrees):\n    return degrees * 5 / 9 + 32\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-makes-a-good-comment"},"children":[{"type":"text","value":"What makes a good comment?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Comment A"}]}]},{"type":"element","tag":"pre","props":{"dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"style":"overflow: hidden;","dataTrim":"","className":["python"]},"children":[{"type":"text","value":"\n# Now we check if temperature is larger than -50:\nif temperature > -50:\n    print('do something')\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Comment B"}]}]},{"type":"element","tag":"pre","props":{"dataId":"code-animation"},"children":[{"type":"element","tag":"code","props":{"style":"overflow: hidden;","dataTrim":"","className":["python"]},"children":[{"type":"text","value":"\n# We regard temperatures below -50 degrees as measurement errors\nif temperature > -50:\n    print('do something')\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How are these different? Which one do you prefer?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"docstrings-a-special-kind-of-comment"},"children":[{"type":"text","value":"Docstrings: a special kind of comment"}]},{"type":"element","tag":"pre","props":{"className":["language-python="],"code":"def celsius_to_fahrenheit(degrees):\n  \"\"\"Convert degrees Celsius to degrees Fahrenheit.\"\"\"\n  return degrees * 5 / 9 + 32\n","language":"python=","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def celsius_to_fahrenheit(degrees):\n  \"\"\"Convert degrees Celsius to degrees Fahrenheit.\"\"\"\n  return degrees * 5 / 9 + 32\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Why is this OK?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nDocstrings can be used to generate user documentation.\nThey are accessible outside the code.\nThey follow a standardized syntax."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"in-code-commenting-key-points"},"children":[{"type":"text","value":"In-code commenting: key points"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explicit, descriptive naming already provides important documentation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comments should describe the why for your code, not the what."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Writing docstrings is an easy way to write documentation while you code, as they are accessible outside the code itself."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"userapi-documentation"},"children":[{"type":"text","value":"User/API documentation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What if a README file is not enough?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I easily create user documentation?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"tools"},"children":[{"type":"text","value":"Tools"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Sphinx"}]},{"type":"text","value":" / "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"mkdocs"}]},{"type":"text","value":" (documentation generator)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"creates nicely-formatted HTML pages out of .md or .rst files"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"programming language independent"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Github pages"}]},{"type":"text","value":" (deploy your documentation)\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"set up inside your GitHub repository"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"automatically deploys documentation generated above"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-message"},"children":[{"type":"text","value":"Take-home message"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Documentation is a vital part of a project, and should be kept and created alongside the corresponding code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Depending on the purpose and state of the project documentation needs to meet different criteria."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Documentation can take different shapes:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Readable code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"In-code comments"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Docstrings"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"README files"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tutorials/notebooks"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-is-documentation","depth":2,"text":"What is documentation?"},{"id":"why-document-software","depth":2,"text":"Why document software?"},{"id":"documentation-purpose-types","depth":2,"text":"Documentation purpose types"},{"id":"documentation-formats","depth":2,"text":"Documentation formats"},{"id":"a-good-readme-file","depth":2,"text":"A good README file"},{"id":"why-write-in-code-documentation","depth":2,"text":"Why write in-code documentation?"},{"id":"when-not-to-use-in-code-documentation","depth":2,"text":"When not to use in-code documentation?"},{"id":"readable-code-vs-commented-code","depth":2,"text":"Readable code vs commented code"},{"id":"what-makes-a-good-comment","depth":2,"text":"What makes a good comment?"},{"id":"docstrings-a-special-kind-of-comment","depth":2,"text":"Docstrings: a special kind of comment"},{"id":"in-code-commenting-key-points","depth":2,"text":"In-code commenting: key points"},{"id":"userapi-documentation","depth":2,"text":"User/API documentation"},{"id":"tools","depth":2,"text":"Tools"},{"id":"take-home-message","depth":2,"text":"Take-home message"}]}},"_type":"markdown","_id":"local_fs:modules:documentation:slides_documentation.md","_source":"local_fs","_file":"modules/documentation/slides_documentation.md","_stem":"modules/documentation/slides_documentation","_extension":"md","plainText":"---\ntitle: Documentation\ntype: slides\norder: 1\nauthor: Luisa Orozco, Barbara Vreede, Jaro Camphuijsen, Carlos Martinez, Max Paulus, Robin Richardson\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Documentation\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What is documentation?\n\n- Provides context for your work\n- Allows your collaborators **and future you** to understand what has been done and why\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why document software?\n\nMake your software reusable:\n\n- A user should be able to run your software in the same way as you do now \n- A user should be able to install your software\n- A contributor should be able to add to, improve, or fix code\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Documentation purpose types\n\nDocumentation can have different purposes:\n\n- **User documentation**: What does the software do? How can it be used?\n<!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\n- **Developer documentation**: How can your software be modified or extended?\n<!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\n- **Deployment documentation**: What hardware and software requirements are there?\n<!-- .element: class=\"fragment\" data-fragment-index=\"3\" -->\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Documentation formats\n\n<!-- add visual with documentation format with increasing complexity -->\n\n- In-code: intended for contributors (comments, docstrings, ...)\n- README: simple text file, first thing that users/collaborators see\n- Websites, Wikis \n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## A good README file\n\n+ README file is first thing a user/collaborator sees\n+ What should be included in README files?\n<ul>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n  <li contenteditable=\"true\">...</li>\n</ul>\n\n\nNote:\n+ A descriptive project title\n+ Motivation (why the project exists) and basics\n+ Installation / How to setup\n+ Copy-pasteable quick start code example\n+ Usage reference (if not elsewhere)\n+ Recommended citation if someone uses it\n+ Other related tools (\"see also\")\n+ Contact information for the developer(s)\n+ License information\n+ Contributing guidelines\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## Why write in-code documentation?\n\nIn-code documentation:\n\n+ Makes code more understandable\n+ Explains decisions that were made\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## When **not** to use in-code documentation?\n\n+ When the code is self-explanatory\n+ To replace good variable/function names\n+ To replace version control\n+ To keep old (zombie) code around\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## Readable code vs commented code\n\n```python=\n# convert from degrees celsius to fahrenheit\ndef convert(d):\n    return d * 5 / 9 + 32\n```\nvs\n```python=\ndef celsius_to_fahrenheit(degrees):\n    return degrees * 5 / 9 + 32\n```\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## What makes a good comment?\n\n**Comment A**\n\n<pre data-id=\"code-animation\"><code style=\"overflow: hidden;\" data-trim class=\"python\">\n# Now we check if temperature is larger than -50:\nif temperature > -50:\n    print('do something')\n</code></pre>\n\n**Comment B**\n\n<pre data-id=\"code-animation\"><code style=\"overflow: hidden;\" data-trim class=\"python\">\n# We regard temperatures below -50 degrees as measurement errors\nif temperature > -50:\n    print('do something')\n</code></pre>\n\nHow are these different? Which one do you prefer?\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## Docstrings: a special kind of comment\n\n```python=\ndef celsius_to_fahrenheit(degrees):\n  \"\"\"Convert degrees Celsius to degrees Fahrenheit.\"\"\"\n  return degrees * 5 / 9 + 32\n```\n\nWhy is this OK?\n\nNote:\nDocstrings can be used to generate user documentation.\nThey are accessible outside the code.\nThey follow a standardized syntax.\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## In-code commenting: key points\n\n+ Explicit, descriptive naming already provides important documentation.\n+ Comments should describe the why for your code, not the what.\n+ Writing docstrings is an easy way to write documentation while you code, as they are accessible outside the code itself.\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## User/API documentation\n\n+ What if a README file is not enough?\n+ How do I easily create user documentation?\n\n===\n\n<!-- .slide: data-state=\"standard\"  -->\n\n## Tools\n\n+ **Sphinx** / **mkdocs** (documentation generator)\n  - creates nicely-formatted HTML pages out of .md or .rst files\n  - programming language independent\n+ **Github pages** (deploy your documentation)\n  - set up inside your GitHub repository\n  - automatically deploys documentation generated above\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take-home message\n\nDocumentation is a vital part of a project, and should be kept and created alongside the corresponding code.\n\nDepending on the purpose and state of the project documentation needs to meet different criteria.\n\nDocumentation can take different shapes:\n+ Readable code\n+ In-code comments\n+ Docstrings\n+ README files\n+ Tutorials/notebooks\n"},{"_path":"/modules/documentation/types-of-documentation","_dir":"documentation","_draft":false,"_partial":false,"_locale":"","title":"Types of documentation","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"types-of-documentation-and-when-to-use-them"},"children":[{"type":"text","value":"Types of documentation and when to use them"}]},{"type":"element","tag":"h2","props":{"id":"why-document-projects"},"children":[{"type":"text","value":"Why document projects?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Quickly get users started"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Show how to use the software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explain concepts behind the software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Describe internal machinery of a project"}]}]},{"type":"element","tag":"h2","props":{"id":"types-of-documentation"},"children":[{"type":"text","value":"Types of documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Documentation serves different goals, therefore there are different types:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Tutorials"}]},{"type":"text","value":": learning-oriented, allows the newcomer to get started"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"How-to guides"}]},{"type":"text","value":": goal-oriented, shows how to solve a specific problem"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Explanation"}]},{"type":"text","value":": understanding-oriented, explains a concept"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reference"}]},{"type":"text","value":": information-oriented, describes the machinery"}]}]},{"type":"element","tag":"h2","props":{"id":"readme-file-how-to-guide"},"children":[{"type":"text","value":"README file: (how-to guide)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"First thing a user/collaborator sees"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contains basic setup instructions and information about the project"}]}]},{"type":"element","tag":"h2","props":{"id":"in-code-documentation-reference"},"children":[{"type":"text","value":"In-code documentation (reference)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Technical documentation in the code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For example "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"# comments"}]}]}]},{"type":"element","tag":"h2","props":{"id":"api-reference-reference"},"children":[{"type":"text","value":"API reference (reference)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"API reference: detailed description of how each function/class in the code can be used"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-document-projects","depth":2,"text":"Why document projects?"},{"id":"types-of-documentation","depth":2,"text":"Types of documentation"},{"id":"readme-file-how-to-guide","depth":2,"text":"README file: (how-to guide)"},{"id":"in-code-documentation-reference","depth":2,"text":"In-code documentation (reference)"},{"id":"api-reference-reference","depth":2,"text":"API reference (reference)"}]}},"_type":"markdown","_id":"local_fs:modules:documentation:types-of-documentation.md","_source":"local_fs","_file":"modules/documentation/types-of-documentation.md","_stem":"modules/documentation/types-of-documentation","_extension":"md","plainText":"---\ntitle: Types of documentation\ntype: reading\norder: 2\n---\n\n# Types of documentation and when to use them\n\n## Why document projects?\n\n- Quickly get users started\n- Show how to use the software\n- Explain concepts behind the software\n- Describe internal machinery of a project\n\n## Types of documentation\n\nDocumentation serves different goals, therefore there are different types: \n- **Tutorials**: learning-oriented, allows the newcomer to get started\n- **How-to guides**: goal-oriented, shows how to solve a specific problem\n- **Explanation**: understanding-oriented, explains a concept\n- **Reference**: information-oriented, describes the machinery\n\n## README file: (how-to guide)\n- First thing a user/collaborator sees\n- Contains basic setup instructions and information about the project\n\n## In-code documentation (reference)\n- Technical documentation in the code\n- For example ```# comments```\n\n## API reference (reference)\n- API reference: detailed description of how each function/class in the code can be used\n"},{"_path":"/modules/licenses/copyright","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Copyright","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"copyright-and-software-2-minutes"},"children":[{"type":"text","value":"Copyright and software (2 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creative works, like books, paintings and music, but also scientific articles and software, are covered by copyright. Copyright is a legal construct that gives the owner of the copyright on a work the exclusive right to reproduce, modify, publicly perform and distribute the work. As a result, anyone who is not the copyright holder needs to have permission from the copyright holder to also be able to do so."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Newly created works are automatically covered by copyright. This copyright is owned by the creator of the work, unless they were employed and created the work as part of their employment, in which case their employer owns the work. If multiple persons or organisations contribute to a work, then they each own a share of the copyright, and all need to give permission for others to be able to do any of the things protected by copyright. This permission is called a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"license"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Creative works can depend on each other. Books for example can be translated, or turned into a stage play or a TV series. This creates a new work, which is known as a derivative work. A derivative work has its own copyright, because creating a translation or adaptation is itself a creative process. Like in a collaborative work, both the owner of the original copyright and the owner of the copyright on the derived adaptation need to give permission to reproduce and distribute the derived work."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is a bit different from books or films or even databases because software is not only a collection of words and symbols, but also a machine that is used for something. As a result, working processes around software are quite different from those around books or films. Although it's bad practice, researchers quite often take a script from a colleague and modify it a bit so that it does what they want. A film director would be surprised indeed if you suggested they take a script from an existing film, change the dialog in the third act a bit, and then shoot it, but in software that's common. No novelist downloads ready-made paragraphs and chapters from the Internet and glues them together into a novel, but this is essentially how all modern software is developed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As a result, software and copyright is a bit of a specialist topic, but one that cannot be avoided because of the automatic nature of copyright and the fact that science is a collaborative enterprise. Universities therefore need a policy to govern what their employees should do and can't do with respect to the software they develop and use, and that policy needs to include something specifically about licensing software."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"copyright-and-software-2-minutes","depth":2,"text":"Copyright and software (2 minutes)"}]}},"_type":"markdown","_id":"local_fs:modules:licenses:copyright.md","_source":"local_fs","_file":"modules/licenses/copyright.md","_stem":"modules/licenses/copyright","_extension":"md","plainText":"---\ntitle: Copyright\ntype: reading\norder: 2\n---\n\n## Copyright and software (2 minutes)\n\nCreative works, like books, paintings and music, but also scientific articles and software, are covered by copyright. Copyright is a legal construct that gives the owner of the copyright on a work the exclusive right to reproduce, modify, publicly perform and distribute the work. As a result, anyone who is not the copyright holder needs to have permission from the copyright holder to also be able to do so.\n\nNewly created works are automatically covered by copyright. This copyright is owned by the creator of the work, unless they were employed and created the work as part of their employment, in which case their employer owns the work. If multiple persons or organisations contribute to a work, then they each own a share of the copyright, and all need to give permission for others to be able to do any of the things protected by copyright. This permission is called a *license*.\n\nCreative works can depend on each other. Books for example can be translated, or turned into a stage play or a TV series. This creates a new work, which is known as a derivative work. A derivative work has its own copyright, because creating a translation or adaptation is itself a creative process. Like in a collaborative work, both the owner of the original copyright and the owner of the copyright on the derived adaptation need to give permission to reproduce and distribute the derived work.\n\nSoftware is a bit different from books or films or even databases because software is not only a collection of words and symbols, but also a machine that is used for something. As a result, working processes around software are quite different from those around books or films. Although it's bad practice, researchers quite often take a script from a colleague and modify it a bit so that it does what they want. A film director would be surprised indeed if you suggested they take a script from an existing film, change the dialog in the third act a bit, and then shoot it, but in software that's common. No novelist downloads ready-made paragraphs and chapters from the Internet and glues them together into a novel, but this is essentially how all modern software is developed.\n\nAs a result, software and copyright is a bit of a specialist topic, but one that cannot be avoided because of the automatic nature of copyright and the fact that science is a collaborative enterprise. Universities therefore need a policy to govern what their employees should do and can't do with respect to the software they develop and use, and that policy needs to include something specifically about licensing software.\n\n"},{"_path":"/modules/licenses/ex_choose_a_license","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Choose a license","description":"","type":"exercise","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-2-choose-a-license-for-or-using-your-policy-10-minutes"},"children":[{"type":"text","value":"Exercise 2: Choose a license for or using your policy (10 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One of the concerns typically addressed in a software policy is licensing of software developed at the institution. Policies can choose a single license, or offer a range of options."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Try to find out whether your university has a license policy. What does it say about which license(s) to use? If you don't have a policy yet, which license(s) would you choose for your policy? Why?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go to "},{"type":"element","tag":"a","props":{"href":"https://choosealicense.com","rel":["nofollow"]},"children":[{"type":"text","value":"Choosealicense.com"}]},{"type":"text","value":" and play around with the options to help you choose."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-2-choose-a-license-for-or-using-your-policy-10-minutes","depth":2,"text":"Exercise 2: Choose a license for or using your policy (10 minutes)"}]}},"_type":"markdown","_id":"local_fs:modules:licenses:ex_choose_a_license.md","_source":"local_fs","_file":"modules/licenses/ex_choose_a_license.md","_stem":"modules/licenses/ex_choose_a_license","_extension":"md","plainText":"---\ntitle: Choose a license\ntype: exercise\norder: 6\n---\n\n## Exercise 2: Choose a license for or using your policy (10 minutes)\n\nOne of the concerns typically addressed in a software policy is licensing of software developed at the institution. Policies can choose a single license, or offer a range of options.\n\nTry to find out whether your university has a license policy. What does it say about which license(s) to use? If you don't have a policy yet, which license(s) would you choose for your policy? Why?\n\nGo to [Choosealicense.com](https://choosealicense.com) and play around with the options to help you choose.\n\n"},{"_path":"/modules/licenses/ex_finding_the_license","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Find the license","description":"","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-1-find-the-license-for-a-software-package-10-minutes"},"children":[{"type":"text","value":"Exercise 1: Find the license for a software package (10 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Imagine that a researcher comes to you and asks whether they can use a particular software package that they found online. One aspect to consider would be its license, if there is one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pick a software package from the following list, and try to find out whether it has a license and if so which. The idea is to cover the list together, so let's not all start at the top!"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kernel Tuner"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"nodal-dg"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"OpenFOAM"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"MATLAB"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"COPASI"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Glotaran"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkAhead"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A few hints:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The researcher only gave you the name. You'll have to find the code on the Internet first."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Licenses are not always advertised on a code's website. Try looking somewhere more technical if you can't find it in the documentation."}]}]},{"type":"element","tag":"h2","props":{"id":"exercise-2-what-advice-would-you-give"},"children":[{"type":"text","value":"Exercise 2: What advice would you give?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-1-find-the-license-for-a-software-package-10-minutes","depth":2,"text":"Exercise 1: Find the license for a software package (10 minutes)"},{"id":"exercise-2-what-advice-would-you-give","depth":2,"text":"Exercise 2: What advice would you give?"}]}},"_type":"markdown","_id":"local_fs:modules:licenses:ex_finding_the_license.md","_source":"local_fs","_file":"modules/licenses/ex_finding_the_license.md","_stem":"modules/licenses/ex_finding_the_license","_extension":"md","plainText":"---\ntitle: Find the license\ntype: exercise\norder: 3\n---\n\n## Exercise 1: Find the license for a software package (10 minutes)\n\nImagine that a researcher comes to you and asks whether they can use a particular software package that they found online. One aspect to consider would be its license, if there is one.\n\nPick a software package from the following list, and try to find out whether it has a license and if so which. The idea is to cover the list together, so let's not all start at the top!\n\n- Kernel Tuner\n- nodal-dg\n- OpenFOAM\n- MATLAB\n- COPASI\n- Glotaran\n- LinkAhead\n\nA few hints:\n\n- The researcher only gave you the name. You'll have to find the code on the Internet first.\n- Licenses are not always advertised on a code's website. Try looking somewhere more technical if you can't find it in the documentation.\n\n## Exercise 2: What advice would you give?\n"},{"_path":"/modules/licenses/how_to_share","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"How to share software","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"how-to-share-software-6-minutes"},"children":[{"type":"text","value":"How to share software (6 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sharing software is done these days by making it available through the Internet, via e.g. GitHub or Zenodo. As we have seen however, that's not all you need to do. Because of copyright law, the software also needs a license. Sharing scientific software is sometimes simple from a legal perspective, but it can also be quite complicated. This section explains the main issues to take into account, which are ownership of the copyright, constraints imposed by dependencies, and choosing a license."}]},{"type":"element","tag":"h3","props":{"id":"ownership"},"children":[{"type":"text","value":"Ownership"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A copyright license must be given by the owner(s) of the copyright being licensed. This means that the first step to licensing a program is to find those owners. In most countries, including The Netherlands, any work you do as part of your tasks as an employee of an organisation belongs to your employer, not to you. After all, they're paying you to do the work. This means that the copyright on any software written by a university employee is owned by the university."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the software to be shared is written entirely by one person, with no copy-pasting of code from others, and no help from people outside of the organisation, then the copyright is therefore owned by your organisation, and it can decide how to license the code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Science is often done collaboratively though, and that makes things a bit more complicated. Funding for research is often given to consortia comprising multiple organisations that will collaboratively execute the research project. Such a consortium is governed by a Consortium Agreement (CA), which almost always has an Intellectual Property paragraph. Unfortunately, the standard text in the templates used for those documents rarely mentions software, as it mainly addresses patents and trade secrets. It does however usually say that each party gets to own the things they make, and that the partners can use it for the purpose of executing the research, but not beyond that. (Note that there is always some negotiation regarding the text, so you should check any specific CAs that apply, and not rely on this general description.)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Funding may also come with terms covering ownership. eScience Center grants for example come with a stipulation that both parties co-own the software even if it is written completely by one of the partners."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, if your researcher works on the software together with a researcher from a different organisation, then both organisations need to agree to license their respective copyrights, ideally under the same license to avoid complicating things."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For long-lived scientific software that isn't Open Source already, it can sometimes be very difficult to determine ownership. It may not always be clear who wrote which part of the code (especially if no version control software was used), who they worked for when they did so, and which contracts were in place that governed their activities. Ideally, the copyright owners would have been carefully tracked over the life of the software, with copyright statements in the README documenting the owners. That is unfortunately very rare however. If it is not possible to determine the owners of the copyright, then the software cannot be licensed."}]},{"type":"element","tag":"h3","props":{"id":"dependencies"},"children":[{"type":"text","value":"Dependencies"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Owners may not be completely free to decide how to license their software. Aside from any constraints imposed by funders, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"dependencies"}]},{"type":"text","value":" play a role. Dependencies are externally developed, separate software packages that are needed for the software to work. Having such dependencies is very common, and dependencies typically have their own dependencies, so that any complete computer program consists of a whole collection of software packages, usually written by different people. These days at least for Open Source software, the complete program is rarely distributed as a whole. Instead, the owners of the individual components each put their components online, and a special tool is used to collect all the required bits and combine them together on the computer of the user, who can then use the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As described in the section on licensing, strong copyleft licenses place constraints on how the combined software can be licensed. As a result, you cannot use them in a non-Open Source program. This does not mean that you have to make your software Open Source if has a copyleft dependency, but "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" you distribute it, then that must be done under the same license, and/or a more permissive one that does not conflict with it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you can see, dependencies with strong copyleft licenses can make life a bit more complicated. On the other hand, as long as no proprietary software is involved not much can go wrong. In case there are proprietary dependencies (including ones without a license, or \"academic use only\" or somesuch), there is a larger issue. If the software cannot work without the dependency, and the proprietary license does not allow redistribution, there we can still open source the software, but others won't be able to run it unless they can somehow get a copy of the proprietary dependency. And if you choose a strong copyleft license for your code, then you'll have to add a special exception for your users to be able to use it with the proprietary dependency."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So it is really proprietary software that complicates things legally, and that's aside from the lack of Open Science transparency. On the other hand, some proprietary software package is sometimes the only solution, and so proprietary dependencies cannot always be avoided. If that's the case, you'll have to look at the specific terms for that package and try to find a solution."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Weak copyleft licenses are less of an issue, because they do not reach beyond the licensed package itself. They can become an issue if your researcher has copy-pasted code from them into their own program (which is bad practice, but unfortunately fairly common still), or created a modified version. In that case the same weak copyleft license applies to (parts of) their code or the modified software, thus restricting the available license choices."}]},{"type":"element","tag":"h3","props":{"id":"choosing-a-license"},"children":[{"type":"text","value":"Choosing a license"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In almost all cases, scientific software should be licensed under a common, standard Open Source license. Open Source enables scientific collaboration and makes the work available to the society that paid for its creation, and not using a standard license creates enough legal risk that most potential users will not be willing to touch the software unless they really have to."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whether to use a permissive, weak, or strong copyleft license is up to the copyright owner. If your organisation has a policy on software, then it may well say something about which licenses can be used, so be sure to check that. The authors of the software may also have an opinion, or develop one if you explain the different kinds of licenses to them. A tool like "},{"type":"element","tag":"a","props":{"href":"https://www.choosealicense.com","rel":["nofollow"]},"children":[{"type":"text","value":"ChooseALicense"}]},{"type":"text","value":" may help here."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that Creative Commons licenses should not be used for software. They were created specifically to be able to apply the concept of Open Source to everything that is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"not"}]},{"type":"text","value":" software, and aren't suitable to the specific properties of software. So use CC for data and other works, and an Open Source license for software."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"how-to-share-software-6-minutes","depth":2,"text":"How to share software (6 minutes)","children":[{"id":"ownership","depth":3,"text":"Ownership"},{"id":"dependencies","depth":3,"text":"Dependencies"},{"id":"choosing-a-license","depth":3,"text":"Choosing a license"}]}]}},"_type":"markdown","_id":"local_fs:modules:licenses:how_to_share.md","_source":"local_fs","_file":"modules/licenses/how_to_share.md","_stem":"modules/licenses/how_to_share","_extension":"md","plainText":"---\ntitle: How to share software\ntype: reading\norder: 5\n---\n\n## How to share software (6 minutes)\n\nSharing software is done these days by making it available through the Internet, via e.g. GitHub or Zenodo. As we have seen however, that's not all you need to do. Because of copyright law, the software also needs a license. Sharing scientific software is sometimes simple from a legal perspective, but it can also be quite complicated. This section explains the main issues to take into account, which are ownership of the copyright, constraints imposed by dependencies, and choosing a license.\n\n### Ownership\n\nA copyright license must be given by the owner(s) of the copyright being licensed. This means that the first step to licensing a program is to find those owners. In most countries, including The Netherlands, any work you do as part of your tasks as an employee of an organisation belongs to your employer, not to you. After all, they're paying you to do the work. This means that the copyright on any software written by a university employee is owned by the university.\n\nIf the software to be shared is written entirely by one person, with no copy-pasting of code from others, and no help from people outside of the organisation, then the copyright is therefore owned by your organisation, and it can decide how to license the code.\n\nScience is often done collaboratively though, and that makes things a bit more complicated. Funding for research is often given to consortia comprising multiple organisations that will collaboratively execute the research project. Such a consortium is governed by a Consortium Agreement (CA), which almost always has an Intellectual Property paragraph. Unfortunately, the standard text in the templates used for those documents rarely mentions software, as it mainly addresses patents and trade secrets. It does however usually say that each party gets to own the things they make, and that the partners can use it for the purpose of executing the research, but not beyond that. (Note that there is always some negotiation regarding the text, so you should check any specific CAs that apply, and not rely on this general description.)\n\nFunding may also come with terms covering ownership. eScience Center grants for example come with a stipulation that both parties co-own the software even if it is written completely by one of the partners.\n\nSo, if your researcher works on the software together with a researcher from a different organisation, then both organisations need to agree to license their respective copyrights, ideally under the same license to avoid complicating things.\n\nFor long-lived scientific software that isn't Open Source already, it can sometimes be very difficult to determine ownership. It may not always be clear who wrote which part of the code (especially if no version control software was used), who they worked for when they did so, and which contracts were in place that governed their activities. Ideally, the copyright owners would have been carefully tracked over the life of the software, with copyright statements in the README documenting the owners. That is unfortunately very rare however. If it is not possible to determine the owners of the copyright, then the software cannot be licensed.\n\n### Dependencies\n\nOwners may not be completely free to decide how to license their software. Aside from any constraints imposed by funders, *dependencies* play a role. Dependencies are externally developed, separate software packages that are needed for the software to work. Having such dependencies is very common, and dependencies typically have their own dependencies, so that any complete computer program consists of a whole collection of software packages, usually written by different people. These days at least for Open Source software, the complete program is rarely distributed as a whole. Instead, the owners of the individual components each put their components online, and a special tool is used to collect all the required bits and combine them together on the computer of the user, who can then use the software.\n\nAs described in the section on licensing, strong copyleft licenses place constraints on how the combined software can be licensed. As a result, you cannot use them in a non-Open Source program. This does not mean that you have to make your software Open Source if has a copyleft dependency, but *if* you distribute it, then that must be done under the same license, and/or a more permissive one that does not conflict with it.\n\nAs you can see, dependencies with strong copyleft licenses can make life a bit more complicated. On the other hand, as long as no proprietary software is involved not much can go wrong. In case there are proprietary dependencies (including ones without a license, or \"academic use only\" or somesuch), there is a larger issue. If the software cannot work without the dependency, and the proprietary license does not allow redistribution, there we can still open source the software, but others won't be able to run it unless they can somehow get a copy of the proprietary dependency. And if you choose a strong copyleft license for your code, then you'll have to add a special exception for your users to be able to use it with the proprietary dependency.\n\nSo it is really proprietary software that complicates things legally, and that's aside from the lack of Open Science transparency. On the other hand, some proprietary software package is sometimes the only solution, and so proprietary dependencies cannot always be avoided. If that's the case, you'll have to look at the specific terms for that package and try to find a solution.\n\nWeak copyleft licenses are less of an issue, because they do not reach beyond the licensed package itself. They can become an issue if your researcher has copy-pasted code from them into their own program (which is bad practice, but unfortunately fairly common still), or created a modified version. In that case the same weak copyleft license applies to (parts of) their code or the modified software, thus restricting the available license choices.\n\n### Choosing a license\n\nIn almost all cases, scientific software should be licensed under a common, standard Open Source license. Open Source enables scientific collaboration and makes the work available to the society that paid for its creation, and not using a standard license creates enough legal risk that most potential users will not be willing to touch the software unless they really have to.\n\nWhether to use a permissive, weak, or strong copyleft license is up to the copyright owner. If your organisation has a policy on software, then it may well say something about which licenses can be used, so be sure to check that. The authors of the software may also have an opinion, or develop one if you explain the different kinds of licenses to them. A tool like [ChooseALicense](https://www.choosealicense.com) may help here.\n\nNote that Creative Commons licenses should not be used for software. They were created specifically to be able to apply the concept of Open Source to everything that is *not* software, and aren't suitable to the specific properties of software. So use CC for data and other works, and an Open Source license for software.\n\n"},{"_path":"/modules/licenses","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Licenses","description":"thumbnail-licenses","category":"Sharing Software","order":1,"author":"eScience Center","abstract":"What are software licenses, copyright and open-source, how are they related and why is it important to think about?","thumbnail":"thumbnail-licenses.png","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/laptop-compute-displaying-command-prompt-vII7qKAk-9A?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash","rel":["nofollow"]},"children":[{"type":"text","value":"thumbnail-licenses"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@disruptxn?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Desola Lanre-Ologun"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/laptop-compute-displaying-command-prompt-vII7qKAk-9A?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:licenses:index.md","_source":"local_fs","_file":"modules/licenses/index.md","_stem":"modules/licenses/index","_extension":"md","plainText":"---\ntitle: Software Licenses\ncategory: Sharing Software\norder: 1\nauthor: eScience Center\nabstract: What are software licenses, copyright and open-source, how are they related and why is it important to think about?\nthumbnail: \"thumbnail-licenses.png\"\nvisibility: visible\n---\n\n[thumbnail-licenses](https://unsplash.com/photos/laptop-compute-displaying-command-prompt-vII7qKAk-9A?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash)\n\nPhoto by <a href=\"https://unsplash.com/@disruptxn?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Desola Lanre-Ologun</a> on <a href=\"https://unsplash.com/photos/laptop-compute-displaying-command-prompt-vII7qKAk-9A?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n\n"},{"_path":"/modules/licenses/info","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is a software license? What is copyright?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to legally use software made by others in your organisation?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to license software created by your organisation?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to license contributions to external Open Source projects?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:licenses:info.md","_source":"local_fs","_file":"modules/licenses/info.md","_stem":"modules/licenses/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What is a software license? What is copyright?\n- How to legally use software made by others in your organisation?\n- How to license software created by your organisation?\n- How to license contributions to external Open Source projects?\n\n"},{"_path":"/modules/licenses/licenses","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Software licenses","description":"","type":"reading","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"software-licenses-8-minutes"},"children":[{"type":"text","value":"Software licenses (8 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software licenses are legal statements that give permission to use, modify and/or distribute software. By copyright law, only the copyright owner(s) can give this permission, so the license must be granted by those owners."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are different kinds of software licenses, with different underlying business models. Some software producers sell copies or seats, where the user has to pay for each computer that the software is used on or person the software is used by, and where the user does not have permission to modify or distribute the software. In this case, licenses are given to individual users or companies as part of a sales contract."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is also possible to make a general statement that anyone can use, modify and/or distribute a software package under certain conditions. In this case, there is no contract, and no specific counterparty. Instead, the owners of the copyright give the same permissions to everyone, usually in a document included with the software as it is put on the Internet. Software distributed like this can usually be downloaded without paying, although there may still be significant limitations on what you can do with it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some software is distributed with a license that gives very broad permissions to anyone who obtains a copy. Such software is known as Free Software and/or Open Source Software. Before we look at what that is exactly, it helps to understand a bit better what software actually is, and how it's made."}]},{"type":"element","tag":"h3","props":{"id":"what-is-software"},"children":[{"type":"text","value":"What is software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To non-programmers, software can appear to be a somewhat magical thing. It is in our computers and phones and it makes them work, or sometimes not work. It's made by specialist people who we call programmers, and who must be very smart to be able to make all this work, or perhaps very dumb given how often software doesn't work. In short, it seems to be mysterious."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Of course, programmers are perfectly ordinary people. They make the software that makes our phones and computers work, and sometimes programmers make mistakes, and then the software doesn't work as intended. Computer programs are made by typing text into the computer, just like you do when writing an email or a letter. Computer programs consist of one or more files with instructions for the computer. These files can be modified to change what the software does, they can be combined together into a larger, more complex program, and they can be shared with others and reused. For the computer to be able to run the software, the files need to be translated from the human-readable text form (the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"source code"}]},{"type":"text","value":") into a sequence of numbers encoding the same commands (a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"binary"}]},{"type":"text","value":"). This is done mechanically by a special program called a compiler or an interpreter."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are different ways of making software collaboratively. One is to work closely together (even sharing a computer!) on the same source code, which can help reduce mistakes as two see more than one, or it can be useful as a teaching exercise. Looser ways of collaborating include copying someone else's code and then independently modifying it to do something a bit different, and reusing a software component made by someone else in your own program, usually in its original form but possibly with changes as well."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The looser forms of collaboration rely on software being distributed from its maker to its user, who then modifies it or integrates it. This requires permission from the copyright owners because there's distribution and the creation of a derivative work, which means that there needs to be a license. A reliable and easy way to do this is to make all the software Free and Open Source."}]},{"type":"element","tag":"h3","props":{"id":"free-and-open-source-software"},"children":[{"type":"text","value":"Free and Open Source Software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Free Software Foundation lists four freedoms that users need to be given by the copyright owner(s) for a program to be considered Free Software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The freedom to run the program as you wish, for any purpose."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The freedom to study how the program works, and change it, so it does your computing as you wish. Access to the source code is a precondition for this."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The freedom to redistribute copies so you can help others."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The freedom to distribute copies of your modified versions to others. By doing this you can give the whole community a chance to benefit from your changes. Access to the source code a precondition for this."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that the word \"free\" here refers to freedom to do things, not to what the software costs. You're allowed to sell copies of Free Software!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open Source Software has an official definition too, which is quite a bit longer but boils down to the same thing. Because of that, the terms are often combined into Free and Open Source Software, or FOSS, but the term Open Source is also popular. We will use them here interchangeably."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can make a software package that you own the copyright to Open Source by distributing it (usually on the Internet) under an Open Source license, i.e. one that gives everyone the above freedoms. In practice, that means that the software is distributed in source code form, with a license document stating that the copyright owners give everyone the freedom to do the above things, subject to certain conditions. There exist a small number of standard Open Source licenses that you can use. All of these are open source, but there are some difference as well that are good to know about."}]},{"type":"element","tag":"h3","props":{"id":"license-categories"},"children":[{"type":"text","value":"License categories"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{"align":"center"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"colSpan":"3"},"children":[{"type":"text","value":"Free and Open Source"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"rowSpan":3,"vAlign":"top"},"children":[{"type":"text","value":"Proprietary"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"colSpan":"2"},"children":[{"type":"text","value":"Copyleft"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"rowSpan":2},"children":[{"type":"text","value":"Permissive"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Strong"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Weak"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center"},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"GPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" AGPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"LGPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" MPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"4"}]}]},{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"BSD"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":" MIT"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":" Apache"}]},{"type":"text","value":"\n          "},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Research Only: No copying, No modification"}]},{"type":"text","value":"\n    "}]}]}]},{"type":"element","tag":"div","props":{"className":["footnote"]},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"GPL: GNU General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"AGPL: Affero General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":"LGPL: GNU Lesser General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":" MPL: Mozilla Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":" BSD: Berkeley Software Distribution "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":" MIT: Massachusetts Institute of Technology\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The table above shows five of the most common FOSS licenses. They're organised in a hierarchystarting with the distinction between Free and Open Source on the one and, and proprietary software on the other. Proprietary software is software that isn't FOSS, which is to say that it has restrictions on use or modification or distribution. It's called proprietary because there is a proprietor or (copyright) owner, who has exclusive control over the software. For Open Source this is not the case: there is a copyright and it's owned by someone, but the license gives everyone else the same permissions they have and so they don't have exclusive control."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Within the category of Open Source licenses, we can distinguish Copyleft licenses and Permissive licenses. Permissive licenses give everyone permission to use, modify and distribute with no further restrictions other than perhaps requiring an acknowledgement that the software was used. In particular, permissive licenses allow the software to be used as a part of non-Open Source software, and for it to be redistributed without the source code, so that it cannot be inspected or modified anymore."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Copyleft licenses try to ensure that the software remains FOSS. You are free to distribute Open Source software that has a copyleft license, but you have to include the complete source code and distribute the modified or extended software under that same license. As a result, everyone who gets a copy of a version of the software and anything it's used in will be free to use, modify and distribute that product. Note that distribution isn't required, all common open source licenses allow making private modifications and not sharing them with anyone."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Weak copyleft licenses are intended for use with libraries, software components that are intended to be used by other programmers to build larger programs. A weak copyleft license applies copyleft to the library itself, but not to the larger program using the library. As a result, programmers using the library can distribute their part of the program without source code or the right to make modifications, as long as they do distribute the source for the library, including any modifications. Strong copyleft licenses require the entire program to be under the same strong copyleft license."}]},{"type":"element","tag":"h3","props":{"id":"license-politics"},"children":[{"type":"text","value":"License politics"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Besides the legal differences, there's a bit of a political difference between Free Software and Open Source, and between copyleft and permissive licenses, that is good to understand. Free Software adherents see everyone as a potential programmer, and believe that your computer isn't truly yours until you fully control what it does, which requires the ability to inspect and modify the software. They envision a world in which computer users collaboratively develop the software they use, sharing their improvements with each other. They therefore prefer copyleft licenses, because those ensure that as many software packages (and therefore, users) as possible are free."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Open Source takes a more pragmatic approach in assuming that most software is made by a small cadre of software developers, often employed by companies, and that there are a potentially large number of end users that have neither the skills nor the inclination to change what their computer does. For these end users, having the source code is not useful, but the developers can often save some effort by working together on software that everyone needs. A permissive Open Source license makes that possible with a minimal amount of legal complexity. It also makes it easy to build commercial, proprietary products on top of the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"From the perspective of science, there's something to be said for each of these approaches. On the one hand, Free Software and copyleft matches the ideals of Open Science quite well. On the other hand, science and scientific software development is funded by society using public funds in the hopes that something useful will come out of it, and scientific papers are useless to most citizens. They want a product, which will be produced commercially, and that is a good match for the Open Source and permissive licensing model."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-licenses-8-minutes","depth":2,"text":"Software licenses (8 minutes)","children":[{"id":"what-is-software","depth":3,"text":"What is software?"},{"id":"free-and-open-source-software","depth":3,"text":"Free and Open Source Software"},{"id":"license-categories","depth":3,"text":"License categories"},{"id":"license-politics","depth":3,"text":"License politics"}]}]}},"_type":"markdown","_id":"local_fs:modules:licenses:licenses.md","_source":"local_fs","_file":"modules/licenses/licenses.md","_stem":"modules/licenses/licenses","_extension":"md","plainText":"---\ntitle: Software licenses\ntype: reading\norder: 4\n---\n\n## Software licenses (8 minutes)\n\nSoftware licenses are legal statements that give permission to use, modify and/or distribute software. By copyright law, only the copyright owner(s) can give this permission, so the license must be granted by those owners.\n\nThere are different kinds of software licenses, with different underlying business models. Some software producers sell copies or seats, where the user has to pay for each computer that the software is used on or person the software is used by, and where the user does not have permission to modify or distribute the software. In this case, licenses are given to individual users or companies as part of a sales contract.\n\nIt is also possible to make a general statement that anyone can use, modify and/or distribute a software package under certain conditions. In this case, there is no contract, and no specific counterparty. Instead, the owners of the copyright give the same permissions to everyone, usually in a document included with the software as it is put on the Internet. Software distributed like this can usually be downloaded without paying, although there may still be significant limitations on what you can do with it.\n\nSome software is distributed with a license that gives very broad permissions to anyone who obtains a copy. Such software is known as Free Software and/or Open Source Software. Before we look at what that is exactly, it helps to understand a bit better what software actually is, and how it's made.\n\n### What is software?\n\nTo non-programmers, software can appear to be a somewhat magical thing. It is in our computers and phones and it makes them work, or sometimes not work. It's made by specialist people who we call programmers, and who must be very smart to be able to make all this work, or perhaps very dumb given how often software doesn't work. In short, it seems to be mysterious.\n\nOf course, programmers are perfectly ordinary people. They make the software that makes our phones and computers work, and sometimes programmers make mistakes, and then the software doesn't work as intended. Computer programs are made by typing text into the computer, just like you do when writing an email or a letter. Computer programs consist of one or more files with instructions for the computer. These files can be modified to change what the software does, they can be combined together into a larger, more complex program, and they can be shared with others and reused. For the computer to be able to run the software, the files need to be translated from the human-readable text form (the *source code*) into a sequence of numbers encoding the same commands (a *binary*). This is done mechanically by a special program called a compiler or an interpreter.\n\nThere are different ways of making software collaboratively. One is to work closely together (even sharing a computer!) on the same source code, which can help reduce mistakes as two see more than one, or it can be useful as a teaching exercise. Looser ways of collaborating include copying someone else's code and then independently modifying it to do something a bit different, and reusing a software component made by someone else in your own program, usually in its original form but possibly with changes as well.\n\nThe looser forms of collaboration rely on software being distributed from its maker to its user, who then modifies it or integrates it. This requires permission from the copyright owners because there's distribution and the creation of a derivative work, which means that there needs to be a license. A reliable and easy way to do this is to make all the software Free and Open Source.\n\n### Free and Open Source Software\n\nThe Free Software Foundation lists four freedoms that users need to be given by the copyright owner(s) for a program to be considered Free Software:\n\n- The freedom to run the program as you wish, for any purpose.\n- The freedom to study how the program works, and change it, so it does your computing as you wish. Access to the source code is a precondition for this.\n- The freedom to redistribute copies so you can help others.\n- The freedom to distribute copies of your modified versions to others. By doing this you can give the whole community a chance to benefit from your changes. Access to the source code a precondition for this.\n\nNote that the word \"free\" here refers to freedom to do things, not to what the software costs. You're allowed to sell copies of Free Software!\n\nOpen Source Software has an official definition too, which is quite a bit longer but boils down to the same thing. Because of that, the terms are often combined into Free and Open Source Software, or FOSS, but the term Open Source is also popular. We will use them here interchangeably.\n\nYou can make a software package that you own the copyright to Open Source by distributing it (usually on the Internet) under an Open Source license, i.e. one that gives everyone the above freedoms. In practice, that means that the software is distributed in source code form, with a license document stating that the copyright owners give everyone the freedom to do the above things, subject to certain conditions. There exist a small number of standard Open Source licenses that you can use. All of these are open source, but there are some difference as well that are good to know about.\n\n### License categories\n\n<table>\n    <tr align=\"center\">\n        <th colspan=\"3\">Free and Open Source</th>\n        <th rowspan=\"3\" valign=\"top\">Proprietary</th>\n    </tr>\n    <tr align=\"center\">\n        <th colspan=\"2\">Copyleft</th>\n        <th rowspan=\"2\">Permissive</th>\n    </tr>\n    <tr align=\"center\">\n        <th>Strong</th>\n        <th>Weak</th>\n    </tr>\n    <tr align=\"center\">\n      <td>GPL<sup>1</sup> AGPL<sup>2</sup></td>\n      <td>LGPL<sup>3</sup> MPL<sup>4</sup></td>\n      <td>BSD<sup>5</sup> MIT<sup>6</sup> Apache</td>\n          <td>Research Only: No&nbsp;copying, No&nbsp;modification</td>\n    </tr>\n</table>\n<div class=\"footnote\">\n  <sup>1</sup>GPL: GNU General Public License <sup>2</sup>AGPL: Affero General Public License <sup>3</sup>LGPL: GNU Lesser General Public License <sup>4</sup> MPL: Mozilla Public License <sup>5</sup> BSD: Berkeley Software Distribution <sup>6</sup> MIT: Massachusetts Institute of Technology\n</div>\n\nThe table above shows five of the most common FOSS licenses. They're organised in a hierarchystarting with the distinction between Free and Open Source on the one and, and proprietary software on the other. Proprietary software is software that isn't FOSS, which is to say that it has restrictions on use or modification or distribution. It's called proprietary because there is a proprietor or (copyright) owner, who has exclusive control over the software. For Open Source this is not the case: there is a copyright and it's owned by someone, but the license gives everyone else the same permissions they have and so they don't have exclusive control.\n\nWithin the category of Open Source licenses, we can distinguish Copyleft licenses and Permissive licenses. Permissive licenses give everyone permission to use, modify and distribute with no further restrictions other than perhaps requiring an acknowledgement that the software was used. In particular, permissive licenses allow the software to be used as a part of non-Open Source software, and for it to be redistributed without the source code, so that it cannot be inspected or modified anymore.\n\nCopyleft licenses try to ensure that the software remains FOSS. You are free to distribute Open Source software that has a copyleft license, but you have to include the complete source code and distribute the modified or extended software under that same license. As a result, everyone who gets a copy of a version of the software and anything it's used in will be free to use, modify and distribute that product. Note that distribution isn't required, all common open source licenses allow making private modifications and not sharing them with anyone.\n\nWeak copyleft licenses are intended for use with libraries, software components that are intended to be used by other programmers to build larger programs. A weak copyleft license applies copyleft to the library itself, but not to the larger program using the library. As a result, programmers using the library can distribute their part of the program without source code or the right to make modifications, as long as they do distribute the source for the library, including any modifications. Strong copyleft licenses require the entire program to be under the same strong copyleft license.\n\n### License politics\n\nBesides the legal differences, there's a bit of a political difference between Free Software and Open Source, and between copyleft and permissive licenses, that is good to understand. Free Software adherents see everyone as a potential programmer, and believe that your computer isn't truly yours until you fully control what it does, which requires the ability to inspect and modify the software. They envision a world in which computer users collaboratively develop the software they use, sharing their improvements with each other. They therefore prefer copyleft licenses, because those ensure that as many software packages (and therefore, users) as possible are free.\n\nOpen Source takes a more pragmatic approach in assuming that most software is made by a small cadre of software developers, often employed by companies, and that there are a potentially large number of end users that have neither the skills nor the inclination to change what their computer does. For these end users, having the source code is not useful, but the developers can often save some effort by working together on software that everyone needs. A permissive Open Source license makes that possible with a minimal amount of legal complexity. It also makes it easy to build commercial, proprietary products on top of the software.\n\nFrom the perspective of science, there's something to be said for each of these approaches. On the one hand, Free Software and copyleft matches the ideals of Open Science quite well. On the other hand, science and scientific software development is funded by society using public funds in the hopes that something useful will come out of it, and scientific papers are useless to most citizens. They want a product, which will be produced commercially, and that is a good match for the Open Source and permissive licensing model.\n\n"},{"_path":"/modules/licenses/slides","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Software Licensing","description":"","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"software-licensing"},"children":[{"type":"text","value":"Software Licensing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"common-questions"},"children":[{"type":"text","value":"Common questions"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can I use this software I found online?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can I share my software with others?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can I contribute to someone else's software?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are three different things researchers do with software that are affected by licensing: using someone else's software, sharing your own software, and contributing to someone else's software (or having others contribute to yours)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You're probably most likely to get questions on the second topic, because the first is so commonly done that people either know the answer or don't know that it's even an issue, while the third one is still pretty rare in practice."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is covered by copyright, and that's the main legal context in which we'll look at these questions here."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"div","props":{"style":"width: 70%; float: left; margin-top: 10%"},"children":[{"type":"element","tag":"h2","props":{"id":"about-copyright"},"children":[{"type":"text","value":"About copyright"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Berne convention on copyright"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Owned by author or employer?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can be licensed"}]}]}]},{"type":"element","tag":"div","props":{"style":"width: 30%; float: right"},"children":[{"type":"element","tag":"img","props":{"src":"/modules/licenses/media/Zytgloggeturm_Bern.jpg","width":"100%"},"children":[]}]},{"type":"element","tag":"div","props":{"style":"float: left; clear: both; padding-left: 25%; padding-top: 1em"},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"//commons.wikimedia.org/wiki/User:JoachimKohler-HB","title":"User:JoachimKohler-HB"},"children":[{"type":"text","value":"JoachimKohler-HB"}]},{"type":"text","value":" - "},{"type":"element","tag":"span","props":{"className":["int-own-work"],"lang":"en"},"children":[{"type":"text","value":"Own work"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://creativecommons.org/licenses/by-sa/4.0","title":"Creative Commons Attribution-Share Alike 4.0"},"children":[{"type":"text","value":"CC BY-SA 4.0"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/w/index.php?curid=140063312"},"children":[{"type":"text","value":"Link"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By the Berne convention, software is automatically protected by copyright when it is made. Depending on the country, protection lasts 50 years or more. The owner of the copyright is the only one who can copy, publish, and modify the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you make software as part of a job for an employer, then your employer owns the copyright. Otherwise, you are the owner (unless there's a contract somewhere that says otherwise)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The owner of the copyright on a work can give permission to others to do things they would otherwise not be allowed to do, like copying, publishing and modifying the work. A document that describes what they can do is called a copyright license. These licenses can be given to a specific party, usually as part of a contract, or they can be offered to the general public."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"using-others-software"},"children":[{"type":"text","value":"Using others' software"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Two ways of using software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"You need a license"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Licenses sometimes implicit, or home-made"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open Source is better and safer"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Different Open Source licenses available"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are two ways of using someone else's software: running it, and incorporating it into your own program. Both are covered by copyright, because you need to download and because you're making a derivative work."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So you need copyright permission, which is to say a license. In science, these are sometimes implied, by a researcher publishing the code without an explicit license, or home-made, which is not recommended because a non-expert will overlook many of the details of copyright law."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's better if the software has an Open Source license, because these are professionally written and have standard, well-known meanings. We will go into that a bit more later. There are websites available that explain all the standard Open Source licenses in ordinary language, so that you can easily decide whether you can use a certain software package. You don't need to be (or have) a lawyer to use Open Source software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: left"},"children":[{"type":"element","tag":"h2","props":{"id":"why-share-software"},"children":[{"type":"text","value":"Why share software?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Increasing impact"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Academic freedom of employees"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Saving by collaborating"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Public funding"}]}]}]},{"type":"element","tag":"div","props":{"style":"width: 40%; float: right"},"children":[{"type":"element","tag":"img","props":{"src":"/modules/licenses/media/Stephanie_Morales_Sharing.jpg","width":"100%"},"children":[]}]},{"type":"element","tag":"div","props":{"style":"float: left; clear: both; padding-left: 35%; padding-top: 3em"},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@stephaniemoarr?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Stephanie Morales"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/person-holding-white-ceramic-mug-DGt9zA3Fr0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Scientific software is sometimes shared, but also sometimes kept to themselves by the researchers making it. Here are some reasons that sharing scientific software is important:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a scientific method, and it must be shared for the science to be reproducible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sharing software will bring users of the methods and citations to papers about it"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Researchers frequently change jobs, moving from university to university. Without permission from their previous employers, they would have to start rebuilding their software from scratch every time they move to a new university, which would be very inefficient."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Many of the most pressing problems that scientist work on involve complex, multifaceted systems that can only be properly studied in collaboration. Where software is involved, which is to say almost everywhere in academic research, researchers need to be able to exchange software and collaborate on its development, including across projects."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The software was most likely funded with public money, and should therefore be available to the public, just like papers are published Open Access."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: left"},"children":[{"type":"element","tag":"h2","props":{"id":"how-to-share-software"},"children":[{"type":"text","value":"How to share software"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Put it online"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add a license\n"},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who owns the software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dependencies?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Kinds of licenses"}]}]}]}]}]},{"type":"element","tag":"div","props":{"style":"width: 40%; float: right"},"children":[{"type":"element","tag":"img","props":{"src":"/modules/licenses/media/Stephanie_Morales_Sharing.jpg","width":"100%"},"children":[]}]},{"type":"element","tag":"div","props":{"style":"float: left; clear: both; padding-left: 35%; padding-top: 3em"},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@stephaniemoarr?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Stephanie Morales"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/person-holding-white-ceramic-mug-DGt9zA3Fr0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To share software effectively, you need to give it a license, preferably an Open Source one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To do that, you need to be the owner of the copyright, or at least be able to act on behalf of the owners. This may be very simple but it can also be very complex. More on the next slide."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The next thing to consider is whether other software has been used in the software you've made (that's almost always the case) and how those so-called dependencies are licensed, as this may constrain your choice."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, different Open Source licenses specify different terms and conditions for use, and you need to decide what you want there."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"who-owns-a-work"},"children":[{"type":"text","value":"Who owns a work?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Work for hire"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Consortium agreements"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Funding constraints"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In most countries, including The Netherlands, any work you do as part of your tasks as an employee of an organisation belongs to your employer, not to you. After all, they're paying you to do the work. This means that the copyright on any software written by a university employee is owned by the university."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Science is often done in consortia, which are typically governed by a Consortium Agreement. Those often have a section on Intellectual Property that applies. Sadly those sections often don't mention copyright, but they do usually state that each partner gets to own the things they've made. That means that if your researcher has worked together on the software with researcher at one of the partners, that there are two owners that need to decide on licensing together."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Funding may also come with restrictions or stipulations regarding ownership. For example, eScience Center grants come with a rule that says that both parties co-own the software, even if it was written by one of them, and that it will be published under the Apache License unless otherwise agreed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"kinds-of-licenses"},"children":[{"type":"text","value":"Kinds of licenses"}]},{"type":"element","tag":"table","props":{"style":"border: 0.1em solid black; border-collapse: collapse; width: 100%"},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"colSpan":"3","align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Free and Open Source"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"rowSpan":3,"align":"center","vAlign":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Proprietary"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"colSpan":"2","align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Copyleft"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"rowSpan":2,"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Permissive"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Strong"}]},{"type":"text","value":"\n        "},{"type":"element","tag":"th","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"Weak"}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n    "},{"type":"element","tag":"tr","props":{"align":"center","style":"border: 0.1em solid black"},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{"align":"center","style":"border: 0.1em solid black; padding: 1em"},"children":[{"type":"text","value":"GPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" AGPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"2"}]}]},{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{"align":"center","style":"border: 0.1em solid black; padding: 1em"},"children":[{"type":"text","value":"LGPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" MPL"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"4"}]}]},{"type":"text","value":"\n      "},{"type":"element","tag":"td","props":{"align":"center","style":"border: 0.1em solid black; padding: 1em"},"children":[{"type":"text","value":"BSD"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":" MIT"},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":" Apache"}]},{"type":"text","value":"\n          "},{"type":"element","tag":"td","props":{"align":"center"},"children":[{"type":"text","value":"Research only, No copying, No modification"}]},{"type":"text","value":"\n    "}]}]}]},{"type":"element","tag":"div","props":{"style":"margin-top: 1em; font-size: 70%; line-height: 2em"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"GPL: GNU General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"AGPL: Affero General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":"LGPL: GNU Lesser General Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"MPL: Mozilla Public License "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":"BSD: Berkeley Software Distribution "},{"type":"element","tag":"sup","props":{},"children":[{"type":"text","value":"6"}]},{"type":"text","value":"MIT: Massachusetts Institute of Technology\n"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software licenses can be classified into different categories, which is helpful to get a quick idea for what kind of license you are dealing with. First, there are Open Source and non-Open Source licenses. Open Source licenses allow you to use the software, share it, change it, and share your changes. Proprietary software licenses do not allow one or more of these things. Note that this is not about being commercial, you can actually sell copies of Open Source programs, although you're not very likely to find buyers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Copyleft licenses say that if you modify the licensed software or incorporate it into your own, that that new software package must then be licensed under the same license. A permissive license allows licensing the new work under any license. As a result, copyleft software needs to remain open source, while permissively licensed software can be made proprietary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Within the copyleft licenses we can distinguish strong copyleft, which covers both modified versions and use in other programs, from weak copyleft, which only limits modification. So a weak copyleft license keeps the licensed software package itself Open Source, but can be used as a part of proprietary software, while a strong copyleft license keeps the software from being used in (but not with) proprietary software (it is a bit vague legally where the limit is)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, the Affero GPL is designed for use with software that is designed to be installed on a server and accessed remotely, for example through a web browser. A normal copyleft license does not require the server owner to give a copy of the software running on the server to the users, while the AGPL does."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"choosing-a-license"},"children":[{"type":"text","value":"Choosing a license"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use a standard Open Source license"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Check your policy (if applicable)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use a tool"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The next step is to choose a license. If at all possible, use a standard Open Source license, because it will make everyone's lives much easier. Do not use Creative Commons licenses, as they're not designed for use with software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Next, check if your organisation has a policy that covers software licenses. Those are still a bit rare, but they're being worked on in many places so it's likely that you'll have one at some point. Check whether it specifies a particular license, or maybe a range of acceptable ones."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, there are some nice tools available that make it easier to select an Open Source license. We'll have a look at that in the exercise."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: left"},"children":[{"type":"element","tag":"h2","props":{"id":"contributing-to-software"},"children":[{"type":"text","value":"Contributing to software"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Under the license"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Contributor License Agreements\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who are you dealing with?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Transfer or license?"}]}]}]}]}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: right"},"children":[{"type":"element","tag":"img","props":{"src":"/modules/licenses/media/Kleine_Dinge.jpg","width":"100%"},"children":[]}]},{"type":"element","tag":"div","props":{"style":"float: left; clear: both; padding-left: 35%; padding-top: 3em"},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@markkoenig?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Mark König"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/white-and-green-quote-board-xCEuxxhpY3o?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The most common way of contributing to an open source project is to do it under the license associated with the project. That means that you keep the copyright on your addition or modification, and license it under the same license as the existing code. This is the norm for small projects run by volunteers (or scientists). This case is similar to sharing your own code under a given license."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Larger, more professionally run Open Source projects sometimes require a Contributor License Agreement. This is a contract that states what the recipient of your improvement can do with it. These are not standardised, so the contents vary."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When evaluating these, it's good to look at who you're dealing with. A commercial entity, like Google, or a governance organisation like the Apache Foundation. The latter non-profit offers support for Open Source projects, including making sure that everything is properly licensed. Google is of course a commercial entity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some CLAs require you to transfer ownership of the copyright on your contribution to someone else, which can be a good idea if that sole copyright holder can be trusted, for example because it makes it easier to upgrade the license. It may also allow them to turn your work proprietary however. In other cases, you're just giving explicit permission to distribute your contribution as Open Source software, which seems more just."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In general with CLAs, you should be careful with commercial entities (state aid!), and it's in any case probably wise to get your legal department involved."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-licensing","depth":2,"text":"Software Licensing"},{"id":"common-questions","depth":2,"text":"Common questions"},{"id":"about-copyright","depth":2,"text":"About copyright"},{"id":"using-others-software","depth":2,"text":"Using others' software"},{"id":"why-share-software","depth":2,"text":"Why share software?"},{"id":"how-to-share-software","depth":2,"text":"How to share software"},{"id":"who-owns-a-work","depth":2,"text":"Who owns a work?"},{"id":"kinds-of-licenses","depth":2,"text":"Kinds of licenses"},{"id":"choosing-a-license","depth":2,"text":"Choosing a license"},{"id":"contributing-to-software","depth":2,"text":"Contributing to software"}]}},"_type":"markdown","_id":"local_fs:modules:licenses:slides.md","_source":"local_fs","_file":"modules/licenses/slides.md","_stem":"modules/licenses/slides","_extension":"md","plainText":"---\ntitle: Software Licensing\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n## Software Licensing\n\n\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Common questions\n\n- Can I use this software I found online?\n- Can I share my software with others?\n- Can I contribute to someone else's software?\n\n\nNote:\n\nThere are three different things researchers do with software that are affected by licensing: using someone else's software, sharing your own software, and contributing to someone else's software (or having others contribute to yours).\n\nYou're probably most likely to get questions on the second topic, because the first is so commonly done that people either know the answer or don't know that it's even an issue, while the third one is still pretty rare in practice.\n\nSoftware is covered by copyright, and that's the main legal context in which we'll look at these questions here.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<div style=\"width: 70%; float: left; margin-top: 10%\">\n\n## About copyright\n\n- Berne convention on copyright\n- Owned by author or employer?\n- Can be licensed\n\n</div>\n\n<div style=\"width: 30%; float: right\">\n\n<img src=\"media/Zytgloggeturm_Bern.jpg\" width=\"100%\">\n\n</div>\n\n<div style=\"float: left; clear: both; padding-left: 25%; padding-top: 1em\">\n\n<small>Photo by <a href=\"//commons.wikimedia.org/wiki/User:JoachimKohler-HB\" title=\"User:JoachimKohler-HB\">JoachimKohler-HB</a> - <span class=\"int-own-work\" lang=\"en\">Own work</span>, <a href=\"https://creativecommons.org/licenses/by-sa/4.0\" title=\"Creative Commons Attribution-Share Alike 4.0\">CC BY-SA 4.0</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=140063312\">Link</a></small>\n\n</div>\n\n\n\nNote:\n\nBy the Berne convention, software is automatically protected by copyright when it is made. Depending on the country, protection lasts 50 years or more. The owner of the copyright is the only one who can copy, publish, and modify the software.\n\nIf you make software as part of a job for an employer, then your employer owns the copyright. Otherwise, you are the owner (unless there's a contract somewhere that says otherwise).\n\nThe owner of the copyright on a work can give permission to others to do things they would otherwise not be allowed to do, like copying, publishing and modifying the work. A document that describes what they can do is called a copyright license. These licenses can be given to a specific party, usually as part of a contract, or they can be offered to the general public.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Using others' software\n\n- Two ways of using software\n- You need a license\n- Licenses sometimes implicit, or home-made\n- Open Source is better and safer\n- Different Open Source licenses available\n\n\nNote:\n\nThere are two ways of using someone else's software: running it, and incorporating it into your own program. Both are covered by copyright, because you need to download and because you're making a derivative work.\n\nSo you need copyright permission, which is to say a license. In science, these are sometimes implied, by a researcher publishing the code without an explicit license, or home-made, which is not recommended because a non-expert will overlook many of the details of copyright law.\n\nIt's better if the software has an Open Source license, because these are professionally written and have standard, well-known meanings. We will go into that a bit more later. There are websites available that explain all the standard Open Source licenses in ordinary language, so that you can easily decide whether you can use a certain software package. You don't need to be (or have) a lawyer to use Open Source software.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<div style=\"width: 50%; float: left\">\n\n## Why share software?\n\n- Reproducibility\n- Increasing impact\n- Academic freedom of employees\n- Saving by collaborating\n- Public funding\n\n</div>\n\n<div style=\"width: 40%; float: right\">\n<img src=\"media/Stephanie_Morales_Sharing.jpg\" width=\"100%\">\n</div>\n\n<div style=\"float: left; clear: both; padding-left: 35%; padding-top: 3em\">\n<small>Photo by <a href=\"https://unsplash.com/@stephaniemoarr?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Stephanie Morales</a> on <a href=\"https://unsplash.com/photos/person-holding-white-ceramic-mug-DGt9zA3Fr0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a></small>\n</div>\n\n\nNote:\n\nScientific software is sometimes shared, but also sometimes kept to themselves by the researchers making it. Here are some reasons that sharing scientific software is important:\n\n- Software is a scientific method, and it must be shared for the science to be reproducible.\n- Sharing software will bring users of the methods and citations to papers about it\n- Researchers frequently change jobs, moving from university to university. Without permission from their previous employers, they would have to start rebuilding their software from scratch every time they move to a new university, which would be very inefficient.\n- Many of the most pressing problems that scientist work on involve complex, multifaceted systems that can only be properly studied in collaboration. Where software is involved, which is to say almost everywhere in academic research, researchers need to be able to exchange software and collaborate on its development, including across projects.\n- The software was most likely funded with public money, and should therefore be available to the public, just like papers are published Open Access.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<div style=\"width: 50%; float: left\">\n\n## How to share software\n\n- Put it online\n- Add a license\n    1. Who owns the software?\n    2. Dependencies?\n    3. Kinds of licenses\n\n</div>\n\n<div style=\"width: 40%; float: right\">\n<img src=\"media/Stephanie_Morales_Sharing.jpg\" width=\"100%\">\n</div>\n\n<div style=\"float: left; clear: both; padding-left: 35%; padding-top: 3em\">\n<small>Photo by <a href=\"https://unsplash.com/@stephaniemoarr?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Stephanie Morales</a> on <a href=\"https://unsplash.com/photos/person-holding-white-ceramic-mug-DGt9zA3Fr0g?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a></small>\n</div>\n\n\nNote:\n\nTo share software effectively, you need to give it a license, preferably an Open Source one.\n\nTo do that, you need to be the owner of the copyright, or at least be able to act on behalf of the owners. This may be very simple but it can also be very complex. More on the next slide.\n\nThe next thing to consider is whether other software has been used in the software you've made (that's almost always the case) and how those so-called dependencies are licensed, as this may constrain your choice.\n\nFinally, different Open Source licenses specify different terms and conditions for use, and you need to decide what you want there.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Who owns a work?\n\n- Work for hire\n- Consortium agreements\n- Funding constraints\n\n\nNote:\n\nIn most countries, including The Netherlands, any work you do as part of your tasks as an employee of an organisation belongs to your employer, not to you. After all, they're paying you to do the work. This means that the copyright on any software written by a university employee is owned by the university.\n\nScience is often done in consortia, which are typically governed by a Consortium Agreement. Those often have a section on Intellectual Property that applies. Sadly those sections often don't mention copyright, but they do usually state that each partner gets to own the things they've made. That means that if your researcher has worked together on the software with researcher at one of the partners, that there are two owners that need to decide on licensing together.\n\nFunding may also come with restrictions or stipulations regarding ownership. For example, eScience Center grants come with a rule that says that both parties co-own the software, even if it was written by one of them, and that it will be published under the Apache License unless otherwise agreed.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Kinds of licenses\n\n<table style=\"border: 0.1em solid black; border-collapse: collapse; width: 100%\">\n    <tr align=\"center\" style=\"border: 0.1em solid black\">\n        <th colspan=\"3\" align=\"center\" style=\"border: 0.1em solid black\">Free and Open Source</th>\n        <th rowspan=\"3\" align=\"center\" valign=\"center\" style=\"border: 0.1em solid black\">Proprietary</th>\n    </tr>\n    <tr align=\"center\" style=\"border: 0.1em solid black\">\n        <th colspan=\"2\" align=\"center\" style=\"border: 0.1em solid black\">Copyleft</th>\n        <th rowspan=\"2\" align=\"center\" style=\"border: 0.1em solid black\">Permissive</th>\n    </tr>\n    <tr align=\"center\" style=\"border: 0.1em solid black\">\n        <th align=\"center\" style=\"border: 0.1em solid black\">Strong</th>\n        <th align=\"center\" style=\"border: 0.1em solid black\">Weak</th>\n    </tr>\n    <tr align=\"center\" style=\"border: 0.1em solid black\">\n      <td align=\"center\" style=\"border: 0.1em solid black; padding: 1em\">GPL<sup>1</sup> AGPL<sup>2</sup></td>\n      <td align=\"center\" style=\"border: 0.1em solid black; padding: 1em\">LGPL<sup>3</sup> MPL<sup>4</sup></td>\n      <td align=\"center\" style=\"border: 0.1em solid black; padding: 1em\">BSD<sup>5</sup> MIT<sup>6</sup> Apache</td>\n          <td align=\"center\" >Research only, No&nbsp;copying, No&nbsp;modification</td>\n    </tr>\n</table>\n<div style=\"margin-top: 1em; font-size: 70%; line-height: 2em\">\n  <sup>1</sup>GPL: GNU General Public License <sup>2</sup>AGPL: Affero General Public License <sup>3</sup>LGPL: GNU Lesser General Public License <sup>4</sup>MPL: Mozilla Public License <sup>5</sup>BSD: Berkeley Software Distribution <sup>6</sup>MIT: Massachusetts Institute of Technology\n</div>\n\n\nNote:\n\nSoftware licenses can be classified into different categories, which is helpful to get a quick idea for what kind of license you are dealing with. First, there are Open Source and non-Open Source licenses. Open Source licenses allow you to use the software, share it, change it, and share your changes. Proprietary software licenses do not allow one or more of these things. Note that this is not about being commercial, you can actually sell copies of Open Source programs, although you're not very likely to find buyers.\n\nCopyleft licenses say that if you modify the licensed software or incorporate it into your own, that that new software package must then be licensed under the same license. A permissive license allows licensing the new work under any license. As a result, copyleft software needs to remain open source, while permissively licensed software can be made proprietary.\n\nWithin the copyleft licenses we can distinguish strong copyleft, which covers both modified versions and use in other programs, from weak copyleft, which only limits modification. So a weak copyleft license keeps the licensed software package itself Open Source, but can be used as a part of proprietary software, while a strong copyleft license keeps the software from being used in (but not with) proprietary software (it is a bit vague legally where the limit is).\n\nFinally, the Affero GPL is designed for use with software that is designed to be installed on a server and accessed remotely, for example through a web browser. A normal copyleft license does not require the server owner to give a copy of the software running on the server to the users, while the AGPL does.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Choosing a license\n\n- Use a standard Open Source license\n- Check your policy (if applicable)\n- Use a tool\n\n\nNote:\n\nThe next step is to choose a license. If at all possible, use a standard Open Source license, because it will make everyone's lives much easier. Do not use Creative Commons licenses, as they're not designed for use with software.\n\nNext, check if your organisation has a policy that covers software licenses. Those are still a bit rare, but they're being worked on in many places so it's likely that you'll have one at some point. Check whether it specifies a particular license, or maybe a range of acceptable ones.\n\nFinally, there are some nice tools available that make it easier to select an Open Source license. We'll have a look at that in the exercise.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<div style=\"width: 50%; float: left\">\n\n## Contributing to software\n\n- Under the license\n- Contributor License Agreements\n    - Who are you dealing with?\n    - Transfer or license?\n\n</div>\n\n<div style=\"width: 50%; float: right\">\n<img src=\"media/Kleine_Dinge.jpg\" width=\"100%\">\n</div>\n\n<div style=\"float: left; clear: both; padding-left: 35%; padding-top: 3em\">\n<small>Photo by <a href=\"https://unsplash.com/@markkoenig?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Mark König</a> on <a href=\"https://unsplash.com/photos/white-and-green-quote-board-xCEuxxhpY3o?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a></small>\n</div>\n\n\nNote:\n\nThe most common way of contributing to an open source project is to do it under the license associated with the project. That means that you keep the copyright on your addition or modification, and license it under the same license as the existing code. This is the norm for small projects run by volunteers (or scientists). This case is similar to sharing your own code under a given license.\n\nLarger, more professionally run Open Source projects sometimes require a Contributor License Agreement. This is a contract that states what the recipient of your improvement can do with it. These are not standardised, so the contents vary.\n\nWhen evaluating these, it's good to look at who you're dealing with. A commercial entity, like Google, or a governance organisation like the Apache Foundation. The latter non-profit offers support for Open Source projects, including making sure that everything is properly licensed. Google is of course a commercial entity.\n\nSome CLAs require you to transfer ownership of the copyright on your contribution to someone else, which can be a good idea if that sole copyright holder can be trusted, for example because it makes it easier to upgrade the license. It may also allow them to turn your work proprietary however. In other cases, you're just giving explicit permission to distribute your contribution as Open Source software, which seems more just.\n\nIn general with CLAs, you should be careful with commercial entities (state aid!), and it's in any case probably wise to get your legal department involved.\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/licenses/university_policy","_dir":"licenses","_draft":false,"_partial":false,"_locale":"","title":"Software policies","description":"","type":"reading","order":7,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"university-software-policies-2-minutes"},"children":[{"type":"text","value":"University software policies (2 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Universities employ researchers, who often create and use software in the course of doing research. That means that they create and use copyrighted works, activities governed by copyright law. Works created by employees as part of their work are normally owned by their employer. This is the default legally in many places, and is almost always stated in the employment contract as well. So, the university owns the software created by its employees, and because the employees also act on behalf of their employer, is responsible for any violations of copyright by their employees."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In practice, for example when submitting a paper to a journal, it is often assumed that scientists can transfer copyright ownership or otherwise give permission to the publisher to publish their work on behalf of the university, but strictly speaking there is usually no legal basis for this. Likewise, if scientists produce software as part of their scientific work, then that software is owned by the university, and publishing it as Open Source software, while often done, does not sit on solid legal footing."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sharing scientific software offers great possibilities for collaboration, sharing of resources, and increased impact of the scientific work as well as of the software itself. Universities are increasingly aware of this, and have created or are creating policies to guide how they create and use research software. In this module we'll look into the why, how and what of university software policies."}]},{"type":"element","tag":"h3","props":{"id":"why"},"children":[{"type":"text","value":"Why?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure scientific software is properly licensed\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Including the software your employees use!"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Increase collaboration"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Increase impact"}]}]},{"type":"element","tag":"h3","props":{"id":"how"},"children":[{"type":"text","value":"How?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Still in development"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"TU Delft"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Astron"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"NLeSC"}]}]},{"type":"element","tag":"h3","props":{"id":"what"},"children":[{"type":"text","value":"What?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software quality"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software development processes and tooling"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Adhering to others' licenses"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How to publish as Open Source"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Acceptable licenses"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Registering output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Education of researchers in software development"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Acknowledge funding"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"university-software-policies-2-minutes","depth":2,"text":"University software policies (2 minutes)","children":[{"id":"why","depth":3,"text":"Why?"},{"id":"how","depth":3,"text":"How?"},{"id":"what","depth":3,"text":"What?"}]}]}},"_type":"markdown","_id":"local_fs:modules:licenses:university_policy.md","_source":"local_fs","_file":"modules/licenses/university_policy.md","_stem":"modules/licenses/university_policy","_extension":"md","plainText":"---\ntitle: Software policies\ntype: reading\norder: 7\n---\n\n## University software policies (2 minutes)\n\nUniversities employ researchers, who often create and use software in the course of doing research. That means that they create and use copyrighted works, activities governed by copyright law. Works created by employees as part of their work are normally owned by their employer. This is the default legally in many places, and is almost always stated in the employment contract as well. So, the university owns the software created by its employees, and because the employees also act on behalf of their employer, is responsible for any violations of copyright by their employees.\n\nIn practice, for example when submitting a paper to a journal, it is often assumed that scientists can transfer copyright ownership or otherwise give permission to the publisher to publish their work on behalf of the university, but strictly speaking there is usually no legal basis for this. Likewise, if scientists produce software as part of their scientific work, then that software is owned by the university, and publishing it as Open Source software, while often done, does not sit on solid legal footing.\n\nSharing scientific software offers great possibilities for collaboration, sharing of resources, and increased impact of the scientific work as well as of the software itself. Universities are increasingly aware of this, and have created or are creating policies to guide how they create and use research software. In this module we'll look into the why, how and what of university software policies.\n\n### Why?\n\n- Ensure scientific software is properly licensed\n  - Including the software your employees use!\n- Increase collaboration\n- Increase impact\n\n### How?\n\n- Still in development\n- TU Delft\n- Astron\n- NLeSC\n\n### What?\n\n- Software quality\n- Software development processes and tooling\n- Adhering to others' licenses\n- How to publish as Open Source\n- Acceptable licenses\n- Registering output\n- Education of researchers in software development\n- Acknowledge funding\n\n"},{"_path":"/modules/publication/automating_software_publication","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Automating publication","description":"Most of the steps in the modern software publishing pipeline can be automated.","type":"exercise","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"automating-software-publication"},"children":[{"type":"text","value":"Automating software publication"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Most of the steps in the modern software publishing pipeline can be automated."}]},{"type":"element","tag":"h3","props":{"id":"an-example-with-github-zenodo-integration"},"children":[{"type":"text","value":"An example with GitHub-Zenodo integration"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Choose a software repository on GitHub that you own (either existing, or create a new one)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Navigate to "},{"type":"element","tag":"a","props":{"href":"https://zenodo.org/","rel":["nofollow"]},"children":[{"type":"text","value":"zenodo.org"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Log in with your Zenodo account (create a new one if necessary)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Navigate to the \"GitHub\" tab, located in a drop-down menu under your username"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Follow the instructions there to link your GitHub account with Zenodo (if not already done)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look through the list of repositories listed until you find the one you wanted to archive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Flip the toggle on the right to \"ON\""}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Go back to your repository on github.com and make a new release. Zenodo will automatically archive this release."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add the Zenodo badge for your repository to the README file."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"an-example-with-github-zenodo-integration","depth":3,"text":"An example with GitHub-Zenodo integration"}]}},"_type":"markdown","_id":"local_fs:modules:publication:automating_software_publication.md","_source":"local_fs","_file":"modules/publication/automating_software_publication.md","_stem":"modules/publication/automating_software_publication","_extension":"md","plainText":"---\ntitle: Automating publication\ntype: exercise\norder: 4\n---\n\n# Automating software publication\n\nMost of the steps in the modern software publishing pipeline can be automated.\n\n### An example with GitHub-Zenodo integration\n1. Choose a software repository on GitHub that you own (either existing, or create a new one).\n2. Navigate to [zenodo.org](https://zenodo.org/)\n3. Log in with your Zenodo account (create a new one if necessary)\n4. Navigate to the \"GitHub\" tab, located in a drop-down menu under your username\n5. Follow the instructions there to link your GitHub account with Zenodo (if not already done)\n6. Look through the list of repositories listed until you find the one you wanted to archive\n7. Flip the toggle on the right to \"ON\"\n8. Go back to your repository on github.com and make a new release. Zenodo will automatically archive this release.\n9. Add the Zenodo badge for your repository to the README file."},{"_path":"/modules/publication/ex_registries","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Find your registry","description":"Software registries are an important player in the findability of research software.\nA collection of software registries can be found here: Research Software Registries Awesome List","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"exercise-find-your-registry"},"children":[{"type":"text","value":"Exercise: Find your registry"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software registries are an important player in the findability of research software.\nA collection of software registries can be found here: "},{"type":"element","tag":"a","props":{"href":"https://github.com/NLeSC/awesome-research-software-registries","rel":["nofollow"]},"children":[{"type":"text","value":"Research Software Registries Awesome List"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Choose a piece of research software that you know, or pick one of the packages in this list:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In teams:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Find out what the software is about if you don't already know."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look by yourself (without looking at your team mates) in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/NLeSC/awesome-research-software-registries","rel":["nofollow"]},"children":[{"type":"text","value":"Research Software Registries Awesome List"}]},{"type":"text","value":" for a registry that is suitable for your chosen piece of software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Discuss with your partner(s) why you chose that registry."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Investigate the requirements for your chosen registry. What should the software and its documentation adhere to, to be added to the registry?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:publication:ex_registries.md","_source":"local_fs","_file":"modules/publication/ex_registries.md","_stem":"modules/publication/ex_registries","_extension":"md","plainText":"---\ntitle: Find your registry\ntype: exercise\norder: 5\n---\n\n# Exercise: Find your registry\n\nSoftware registries are an important player in the findability of research software.\nA collection of software registries can be found here: [Research Software Registries Awesome List](https://github.com/NLeSC/awesome-research-software-registries)\n\nChoose a piece of research software that you know, or pick one of the packages in this list:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\nIn teams:\n1. Find out what the software is about if you don't already know.\n2. Look by yourself (without looking at your team mates) in the [Research Software Registries Awesome List](https://github.com/NLeSC/awesome-research-software-registries) for a registry that is suitable for your chosen piece of software.\n3. Discuss with your partner(s) why you chose that registry.\n4. Investigate the requirements for your chosen registry. What should the software and its documentation adhere to, to be added to the registry?"},{"_path":"/modules/publication","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Publication","description":"thumbnail-publication\nPhoto by Bank Phrom on Unsplash","category":"Sharing Software","order":31,"author":"eScience Center","abstract":"Publication of research output is important for findability and reusability, but how does that work for software?","thumbnail":"thumbnail-publication.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/printing-machine-Tzm3Oyu_6sk","rel":["nofollow"]},"children":[{"type":"text","value":"thumbnail-publication"}]},{"type":"text","value":"\nPhoto by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@bank_phrom?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Bank Phrom"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/printing-machine-Tzm3Oyu_6sk?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:publication:index.md","_source":"local_fs","_file":"modules/publication/index.md","_stem":"modules/publication/index","_extension":"md","plainText":"---\ntitle: Software Publication\ncategory: Sharing Software\norder: 31\nauthor: eScience Center\nabstract: Publication of research output is important for findability and reusability, but how does that work for software?\nthumbnail: \"thumbnail-publication.jpg\"\nvisibility: visible\n---\n\n[thumbnail-publication](https://unsplash.com/photos/printing-machine-Tzm3Oyu_6sk)\nPhoto by <a href=\"https://unsplash.com/@bank_phrom?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Bank Phrom</a> on <a href=\"https://unsplash.com/photos/printing-machine-Tzm3Oyu_6sk?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  \n\n\n"},{"_path":"/modules/publication/info","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What does publishing software mean?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why should researchers publish their software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Where should researchers publish their software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are the basic steps of publishing software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I guide a researcher through the publishing process?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:publication:info.md","_source":"local_fs","_file":"modules/publication/info.md","_stem":"modules/publication/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What does publishing software mean?\n- Why should researchers publish their software?\n- Where should researchers publish their software?\n- What are the basic steps of publishing software?\n- How do I guide a researcher through the publishing process?\n"},{"_path":"/modules/publication/joss_checklist","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Review your software","description":"In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then go trough the JOSS checklist reviewing the software.","type":"exercise","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"review-your-software-for-publication"},"children":[{"type":"text","value":"Review your software for publication"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then go trough the JOSS checklist reviewing the software."}]}]},{"type":"element","tag":"h2","props":{"id":"step-1-choose-a-software-project"},"children":[{"type":"text","value":"Step 1: Choose a software project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Choose a software project for this exercise, preferably one you are familiar with."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you don't have a software in mind, you can use one of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"h2","props":{"id":"step-2-fill-the-joss-review-checklist"},"children":[{"type":"text","value":"Step 2: Fill the JOSS review checklist"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Get the "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjournals/joss-reviews/blob/master/.buffy/templates/reviewer_checklist.md","rel":["nofollow"]},"children":[{"type":"text","value":"template checklist"}]},{"type":"text","value":" used in the review process of "},{"type":"element","tag":"a","props":{"href":"https://joss.theoj.org/","rel":["nofollow"]},"children":[{"type":"text","value":"JOSS"}]},{"type":"text","value":" and fill it out."}]},{"type":"element","tag":"h3","props":{"id":"general-checks"},"children":[{"type":"text","value":"General checks"}]},{"type":"element","tag":"ul","props":{"className":["contains-task-list"]},"children":[{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Repository:"}]},{"type":"text","value":" Is the source code for this software available at the "},{"type":"element","tag":"binding","props":{"value":"target-repository"},"children":[]},{"type":"text","value":"?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"License:"}]},{"type":"text","value":" Does the repository contain a plain-text LICENSE or COPYING file with the contents of an "},{"type":"element","tag":"a","props":{"href":"https://opensource.org/licenses/alphabetical","rel":["nofollow"]},"children":[{"type":"text","value":"OSI approved"}]},{"type":"text","value":" software license?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Contribution and authorship:"}]},{"type":"text","value":" Has the submitting author ("},{"type":"element","tag":"binding","props":{"value":"author-handle"},"children":[]},{"type":"text","value":") made major contributions to the software? Does the full list of paper authors seem appropriate and complete?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Substantial scholarly effort:"}]},{"type":"text","value":" Does this submission meet the scope eligibility described in the "},{"type":"element","tag":"a","props":{"href":"https://joss.readthedocs.io/en/latest/submitting.html#substantial-scholarly-effort","rel":["nofollow"]},"children":[{"type":"text","value":"JOSS guidelines"}]}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Data sharing:"}]},{"type":"text","value":" If the paper contains original data, data are accessible to the reviewers. If the paper contains no original data, please check this item."}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reproducibility:"}]},{"type":"text","value":" If the paper contains original results, results are entirely reproducible by reviewers. If the paper contains no original results, please check this item."}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Human and animal research:"}]},{"type":"text","value":" If the paper contains original data research on humans subjects or animals, does it comply with "},{"type":"element","tag":"a","props":{"href":"https://joss.readthedocs.io/en/latest/policies.html?highlight=animal#joss-policies","rel":["nofollow"]},"children":[{"type":"text","value":"JOSS's human participants research policy and/or animal research policy"}]},{"type":"text","value":"? If the paper contains no such data, please check this item."}]}]},{"type":"element","tag":"h3","props":{"id":"functionality"},"children":[{"type":"text","value":"Functionality"}]},{"type":"element","tag":"ul","props":{"className":["contains-task-list"]},"children":[{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Installation:"}]},{"type":"text","value":" Does installation proceed as outlined in the documentation?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Functionality:"}]},{"type":"text","value":" Have the functional claims of the software been confirmed?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Performance:"}]},{"type":"text","value":" If there are any performance claims of the software, have they been confirmed? (If there are no claims, please check off this item.)"}]}]},{"type":"element","tag":"h3","props":{"id":"documentation"},"children":[{"type":"text","value":"Documentation"}]},{"type":"element","tag":"ul","props":{"className":["contains-task-list"]},"children":[{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A statement of need"}]},{"type":"text","value":": Do the authors clearly state what problems the software is designed to solve and who the target audience is?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Installation instructions:"}]},{"type":"text","value":" Is there a clearly-stated list of dependencies? Ideally these should be handled with an automated package management solution."}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Example usage:"}]},{"type":"text","value":" Do the authors include examples of how to use the software (ideally to solve real-world analysis problems)."}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Functionality documentation:"}]},{"type":"text","value":" Is the core functionality of the software documented to a satisfactory level (e.g., API method documentation)?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Automated tests:"}]},{"type":"text","value":" Are there automated tests or manual steps described so that the functionality of the software can be verified?"}]},{"type":"element","tag":"li","props":{"className":["task-list-item"]},"children":[{"type":"element","tag":"input","props":{"disabled":true,"type":"checkbox"},"children":[]},{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Community guidelines:"}]},{"type":"text","value":" Are there clear guidelines for third parties wishing to 1) Contribute to the software 2) Report issues or problems with the software 3) Seek support."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Skip the last category "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Software paper"}]}]},{"type":"element","tag":"h2","props":{"id":"step-3-how-was-the-reviewing-process"},"children":[{"type":"text","value":"Step 3: How was the reviewing process?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Reflect on the difficulty of the review process.\nWhich advantages has this review process?\nAre there projects in which you are currently working that would pass this review?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"step-1-choose-a-software-project","depth":2,"text":"Step 1: Choose a software project"},{"id":"step-2-fill-the-joss-review-checklist","depth":2,"text":"Step 2: Fill the JOSS review checklist","children":[{"id":"general-checks","depth":3,"text":"General checks"},{"id":"functionality","depth":3,"text":"Functionality"},{"id":"documentation","depth":3,"text":"Documentation"}]},{"id":"step-3-how-was-the-reviewing-process","depth":2,"text":"Step 3: How was the reviewing process?"}]}},"_type":"markdown","_id":"local_fs:modules:publication:JOSS_checklist.md","_source":"local_fs","_file":"modules/publication/JOSS_checklist.md","_stem":"modules/publication/JOSS_checklist","_extension":"md","plainText":"---\ntitle: Review your software\ntype: exercise\norder: 6\n---\n\n# Review your software for publication\n\n*In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then go trough the JOSS checklist reviewing the software.*\n\n## Step 1: Choose a software project\n\nChoose a software project for this exercise, preferably one you are familiar with.\n\nIf you don't have a software in mind, you can use one of the following:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\n\n## Step 2: Fill the JOSS review checklist\n\nGet the [template checklist](https://github.com/openjournals/joss-reviews/blob/master/.buffy/templates/reviewer_checklist.md) used in the review process of [JOSS](https://joss.theoj.org/) and fill it out.\n\n### General checks\n\n- [ ] **Repository:** Is the source code for this software available at the {{target-repository}}?\n- [ ] **License:** Does the repository contain a plain-text LICENSE or COPYING file with the contents of an [OSI approved](https://opensource.org/licenses/alphabetical) software license?\n- [ ] **Contribution and authorship:** Has the submitting author ({{author-handle}}) made major contributions to the software? Does the full list of paper authors seem appropriate and complete?\n- [ ] **Substantial scholarly effort:** Does this submission meet the scope eligibility described in the [JOSS guidelines](https://joss.readthedocs.io/en/latest/submitting.html#substantial-scholarly-effort)\n- [ ] **Data sharing:** If the paper contains original data, data are accessible to the reviewers. If the paper contains no original data, please check this item.\n- [ ] **Reproducibility:** If the paper contains original results, results are entirely reproducible by reviewers. If the paper contains no original results, please check this item.\n- [ ] **Human and animal research:** If the paper contains original data research on humans subjects or animals, does it comply with [JOSS's human participants research policy and/or animal research policy](https://joss.readthedocs.io/en/latest/policies.html?highlight=animal#joss-policies)? If the paper contains no such data, please check this item.\n\n### Functionality\n\n- [ ] **Installation:** Does installation proceed as outlined in the documentation?\n- [ ] **Functionality:** Have the functional claims of the software been confirmed?\n- [ ] **Performance:** If there are any performance claims of the software, have they been confirmed? (If there are no claims, please check off this item.)\n\n### Documentation\n\n- [ ] **A statement of need**: Do the authors clearly state what problems the software is designed to solve and who the target audience is?\n- [ ] **Installation instructions:** Is there a clearly-stated list of dependencies? Ideally these should be handled with an automated package management solution.\n- [ ] **Example usage:** Do the authors include examples of how to use the software (ideally to solve real-world analysis problems).\n- [ ] **Functionality documentation:** Is the core functionality of the software documented to a satisfactory level (e.g., API method documentation)?\n- [ ] **Automated tests:** Are there automated tests or manual steps described so that the functionality of the software can be verified?\n- [ ] **Community guidelines:** Are there clear guidelines for third parties wishing to 1) Contribute to the software 2) Report issues or problems with the software 3) Seek support.\n\nSkip the last category *Software paper*\n\n## Step 3: How was the reviewing process?\n\nReflect on the difficulty of the review process.\nWhich advantages has this review process?\nAre there projects in which you are currently working that would pass this review?\n"},{"_path":"/modules/publication/reading","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"Follow the links below to read more about software publication.","type":"reading","order":7,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"reading-material"},"children":[{"type":"text","value":"Reading material"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Follow the links below to read more about software publication."}]},{"type":"element","tag":"h3","props":{"id":"the-turing-way"},"children":[{"type":"text","value":"The Turing Way"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in the Turing Way about "},{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/communication/citable","rel":["nofollow"]},"children":[{"type":"text","value":"Making Research Objects Citable"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"code-refinery"},"children":[{"type":"text","value":"Code Refinery"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in CodeRefinery about "},{"type":"element","tag":"a","props":{"href":"https://coderefinery.github.io/social-coding/software-citation/","rel":["nofollow"]},"children":[{"type":"text","value":"Social coding and open software"}]}]},{"type":"element","tag":"h3","props":{"id":"peerj-computer-science"},"children":[{"type":"text","value":"PeerJ Computer Science"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read this interesting article about "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.7717/peerj-cs.86","rel":["nofollow"]},"children":[{"type":"text","value":"Software citation principles"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"the-turing-way","depth":3,"text":"The Turing Way"},{"id":"code-refinery","depth":3,"text":"Code Refinery"},{"id":"peerj-computer-science","depth":3,"text":"PeerJ Computer Science"}]}},"_type":"markdown","_id":"local_fs:modules:publication:reading.md","_source":"local_fs","_file":"modules/publication/reading.md","_stem":"modules/publication/reading","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 7\n---\n\n# Reading material\n\nFollow the links below to read more about software publication.\n\n### The Turing Way\nRead in the Turing Way about [Making Research Objects Citable](https://the-turing-way.netlify.app/communication/citable).\n\n### Code Refinery\nRead in CodeRefinery about [Social coding and open software](https://coderefinery.github.io/social-coding/software-citation/)\n\n### PeerJ Computer Science\nRead this interesting article about [Software citation principles](https://doi.org/10.7717/peerj-cs.86)"},{"_path":"/modules/publication/slides-publication","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Publishing Software","description":"===","type":"slides","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"publishing-software"},"children":[{"type":"text","value":"Publishing Software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"before-we-dive-in"},"children":[{"type":"text","value":"Before we dive in..."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What do you already know about software publication?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note: Let participants discuss how they would publish a piece of software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Answers can potentially be collected in a collaborative document."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-do-we-mean-by-publishing"},"children":[{"type":"text","value":"What do we mean by publishing?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Publishing the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"software itself"}]},{"type":"text","value":" (not just publishing an article "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"about"}]},{"type":"text","value":" it)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There are many ways to do this"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This generally means the source code itself, ideally including instructions on how to use it, what dependencies it has on other software, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The goal is to allow others to find and use your code, if they so wish, without extreme levels of difficulty."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-publish"},"children":[{"type":"text","value":"Why Publish?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Major scientific considerations\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Citability"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"FAIRness\n"},{"type":"element","tag":"img","props":{"src":"/modules/publication/media/fair.png","width":"30%"},"children":[]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Citability - Allows the software authors to get credit for their work\nReproducibility - If software is not published anywhere then few people will successfully reproduce analyses, simulations or other research results that were performed by other researchers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, publishing is essential for meeting the FAIR principles:\nFindability - if software lives on someone's harddrive then it cannot be easily found by anyone\nAccessibility - the software can e.g. be downloaded and installed using a standard protocol (authentication is still a possibility)\nInteroperability - publishing the dependencies (e.g. software libraries) and input/output formats and versions is necessary for interoperability\nReusability - it's only reusable if it's available, and if people know what they are allowed to do with it (based on its software license)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"traditional-publishing-pipeline"},"children":[{"type":"text","value":"Traditional publishing pipeline"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write some code and leave it on your harddrive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Generate scientific results with it"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write a paper about those results"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Possibly not even mentioning the software at all"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"consequences"},"children":[{"type":"text","value":"Consequences"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The software itself is not citable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Methods are not easily reproduced or even analysed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Nobody else can build on top of your research"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"modern-publishing-pipeline"},"children":[{"type":"text","value":"Modern publishing pipeline"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software repository"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tag/semantic versioning"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get a persistent identifier"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Registries"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Paper"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"software-repository"},"children":[{"type":"text","value":"Software repository"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Put all source files in a public version-controlled repository\ne.g. GitHub, GitLab"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is immediately Findable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Naturally contains a log of all development history"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Include a software license, and a citation.cff file"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See license, citation and software management chapters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"software-repository-1"},"children":[{"type":"text","value":"Software repository"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which one?\n"},{"type":"element","tag":"img","props":{"src":"/modules/publication/media/repository_logos.png","width":"80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Anything is better than nothing. Gitlab and Github are the mainstream, used by many and with lots of features. You might run into projects using other repositories."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"tagsemantic-versioning"},"children":[{"type":"text","value":"Tag/semantic versioning"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is important to communicate the actual version of the software used for a particular piece of research"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If your software is used as a dependency of another software/workflow then specific versions can be referenced"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ideally, use \"semantic versioning\" in the form MAJOR.MINOR.PATCH (e.g. v2.1.5)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"get-a-persistent-identifier"},"children":[{"type":"text","value":"Get a Persistent Identifier"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Specific versions of the software should be published to an archiving service that provides persistent identifiers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, Zenodo is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See Citation story"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"registries"},"children":[{"type":"text","value":"Registries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add a link to your software on a relevant public registry"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For example, the eScience Center maintains the Research Software Directory"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can also be domain specific software registries"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Or even list it on awesomelist"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This aids greatly in Findability by relevant researchers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"software-paper"},"children":[{"type":"text","value":"Software Paper"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Publish a journal article about the software specifically"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Journal of Research Software (JORS)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Journal of Open Source Software (JOSS)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SoftwareX"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CRAN"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some journals perform peer review of the software in question"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"automate-as-many-steps-as-possible"},"children":[{"type":"text","value":"Automate as many steps as possible!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, you can automate archiving on Zenodo by linking it to your github account"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See instructions in the \"Automating software publication\" tab of this story"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"before-we-dive-in","depth":2,"text":"Before we dive in..."},{"id":"what-do-we-mean-by-publishing","depth":2,"text":"What do we mean by publishing?"},{"id":"why-publish","depth":2,"text":"Why Publish?"},{"id":"traditional-publishing-pipeline","depth":2,"text":"Traditional publishing pipeline","children":[{"id":"consequences","depth":3,"text":"Consequences"}]},{"id":"modern-publishing-pipeline","depth":2,"text":"Modern publishing pipeline","children":[{"id":"software-repository","depth":3,"text":"Software repository"},{"id":"software-repository-1","depth":3,"text":"Software repository"},{"id":"tagsemantic-versioning","depth":3,"text":"Tag/semantic versioning"},{"id":"get-a-persistent-identifier","depth":3,"text":"Get a Persistent Identifier"},{"id":"registries","depth":3,"text":"Registries"},{"id":"software-paper","depth":3,"text":"Software Paper"}]},{"id":"automate-as-many-steps-as-possible","depth":2,"text":"Automate as many steps as possible!"}]}},"_type":"markdown","_id":"local_fs:modules:publication:slides-publication.md","_source":"local_fs","_file":"modules/publication/slides-publication.md","_stem":"modules/publication/slides-publication","_extension":"md","plainText":"---\ntitle: Publishing Software\ntype: slides\norder: 2\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Publishing Software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Before we dive in...\n\nWhat do you already know about software publication? \n\nNote: Let participants discuss how they would publish a piece of software.\n\nAnswers can potentially be collected in a collaborative document.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What do we mean by publishing?\n\n* Publishing the *software itself* (not just publishing an article *about* it)\n* There are many ways to do this\n\nNote:\n\nThis generally means the source code itself, ideally including instructions on how to use it, what dependencies it has on other software, etc.\n\nThe goal is to allow others to find and use your code, if they so wish, without extreme levels of difficulty.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why Publish?\n\n* Major scientific considerations \n    * Citability\n    * Reproducibility\n* FAIRness\n<img src=\"media/fair.png\" width=\"30%\">\n\nNote:\n\nCitability - Allows the software authors to get credit for their work\nReproducibility - If software is not published anywhere then few people will successfully reproduce analyses, simulations or other research results that were performed by other researchers\n\nAdditionally, publishing is essential for meeting the FAIR principles:\nFindability - if software lives on someone's harddrive then it cannot be easily found by anyone\nAccessibility - the software can e.g. be downloaded and installed using a standard protocol (authentication is still a possibility)\nInteroperability - publishing the dependencies (e.g. software libraries) and input/output formats and versions is necessary for interoperability\nReusability - it's only reusable if it's available, and if people know what they are allowed to do with it (based on its software license)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Traditional publishing pipeline\n\n* Write some code and leave it on your harddrive\n* Generate scientific results with it\n* Write a paper about those results\n* Possibly not even mentioning the software at all\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Consequences\n\n* The software itself is not citable\n* Methods are not easily reproduced or even analysed\n* Nobody else can build on top of your research\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Modern publishing pipeline\n\n* Software repository\n* Tag/semantic versioning\n* Get a persistent identifier\n* Registries\n* Software Paper\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\n\nPut all source files in a public version-controlled repository\ne.g. GitHub, GitLab\n\n* Software is immediately Findable\n* Naturally contains a log of all development history\n\nInclude a software license, and a citation.cff file\n\nNote:\n\nSee license, citation and software management chapters\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software repository\nWhich one?\n<img src=\"media/repository_logos.png\" width=\"80%\">\n\nNote:\n\nAnything is better than nothing. Gitlab and Github are the mainstream, used by many and with lots of features. You might run into projects using other repositories. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Tag/semantic versioning\n\nIt is important to communicate the actual version of the software used for a particular piece of research\n\nIf your software is used as a dependency of another software/workflow then specific versions can be referenced\n\nIdeally, use \"semantic versioning\" in the form MAJOR.MINOR.PATCH (e.g. v2.1.5)\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Get a Persistent Identifier\n\nSpecific versions of the software should be published to an archiving service that provides persistent identifiers\n\nFor example, Zenodo is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable\n\nNote:\n\nSee Citation story\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Registries\nAdd a link to your software on a relevant public registry\n\n* For example, the eScience Center maintains the Research Software Directory\n* Can also be domain specific software registries\n* Or even list it on awesomelist\n\nThis aids greatly in Findability by relevant researchers\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n### Software Paper\n\nPublish a journal article about the software specifically\n\n* Journal of Research Software (JORS)\n* Journal of Open Source Software (JOSS)\n* SoftwareX\n* CRAN\n\nSome journals perform peer review of the software in question\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Automate as many steps as possible!\n\nFor example, you can automate archiving on Zenodo by linking it to your github account\n\nSee instructions in the \"Automating software publication\" tab of this story\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/publication/software_publication_pipeline","_dir":"publication","_draft":false,"_partial":false,"_locale":"","title":"Publication pipeline","description":"","type":"reading","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-publication-pipeline"},"children":[{"type":"text","value":"Software publication pipeline"}]},{"type":"element","tag":"h2","props":{"id":"steps"},"children":[{"type":"text","value":"Steps"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is recommended that all steps in the pipeline are followed, but they are not dependent on each other. In this pipeline we provide resources to achieve the whole pipeline using GitHub or GitLab for hosting the source code"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software repository"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tag/semantic versioning"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get a persistent identifier"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Registries"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Paper"}]}]},{"type":"element","tag":"h2","props":{"id":"software-repository"},"children":[{"type":"text","value":"Software repository"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If possible, during the development of Research Software, changes should be tracked using dedicated version control software like "},{"type":"element","tag":"a","props":{"href":"https://git-scm.com/","rel":["nofollow"]},"children":[{"type":"text","value":"git"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Put all source files in a public version-controlled repository, preferably GitHub or GitLab. Both GitHub and Gitlab provide online repositories for hosting source code. As can be inferred from their names, they were designed to be used together with Git version control.  The nice thing about using git together with GitHub and GitLab is that it stores the complete history of changes to the source code, rather than just a single version ."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A quickstart tutorial for..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.github.com/en/get-started/quickstart/create-a-repo","rel":["nofollow"]},"children":[{"type":"text","value":"GitHub"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/user/project/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"GitLab"}]}]}]},{"type":"element","tag":"h2","props":{"id":"versions-tags-and-releases"},"children":[{"type":"text","value":"Versions, tags and releases"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Every time software changes, and that history is stored, that can be considered a new "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"version"}]},{"type":"text","value":" of the software. It is useful to add special identifiers, called "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"tags"}]},{"type":"text","value":" to new versions that mark significant changes, so that specific versions of your software can be cited or referenced as dependency by other software. If you use git for version control, you can "},{"type":"element","tag":"a","props":{"href":"https://git-scm.com/book/en/v2/Git-Basics-Tagging","rel":["nofollow"]},"children":[{"type":"text","value":"create tags in git"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is good practice to use "},{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://semver.org/","rel":["nofollow"]},"children":[{"type":"text","value":"semantic versioning"}]}]},{"type":"text","value":" to tag the software. In this way, information about the impact of the change from one version to the next is stored in the tag. Usually, tagged versions of the software are opened up to the public in a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"software release"}]},{"type":"text","value":", together with updated documentation and a documentation of the changes since the previous release in a so called "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"changelog"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The documentation of creating releases..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.github.com/en/repositories/releasing-projects-on-github","rel":["nofollow"]},"children":[{"type":"text","value":"on GitHub"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.gitlab.com/ee/user/project/releases/","rel":["nofollow"]},"children":[{"type":"text","value":"on GitLab"}]}]}]},{"type":"element","tag":"h2","props":{"id":"get-a-persistent-identifier"},"children":[{"type":"text","value":"Get a persistent identifier"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Specific versions of the software should be published to an archiving service that provides persistent identifiers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, "},{"type":"element","tag":"a","props":{"href":"https://zenodo.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Zenodo"}]},{"type":"text","value":" is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Documentation on how to integrate Zenodo with your repository..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.github.com/en/repositories/archiving-a-github-repository/referencing-and-citing-content","rel":["nofollow"]},"children":[{"type":"text","value":"on GitHub"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://gitlab.com/sbeniamine/gitlab2zenodo","rel":["nofollow"]},"children":[{"type":"text","value":"on Gitlab"}]}]}]},{"type":"element","tag":"h2","props":{"id":"registries"},"children":[{"type":"text","value":"Registries"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To improve findability of the software, it should be shared in "},{"type":"element","tag":"a","props":{"href":"https://github.com/NLeSC/awesome-research-software-registries","rel":["nofollow"]},"children":[{"type":"text","value":"existing software registries"}]},{"type":"text","value":". Preferably, software is added to a registry specific to the domain and/or programming language. Software can be shared in multiple registries if they are relevant to the software."}]},{"type":"element","tag":"h2","props":{"id":"software-paper"},"children":[{"type":"text","value":"Software Paper"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A major, but also optional step is to publish a journal article about the software specifically in a dedicated software journal. Some examples are:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://openresearchsoftware.metajnl.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Journal of Open Research Software (JORS)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://joss.theoj.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Journal of Open Source Software (JOSS)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.softxjournal.com/","rel":["nofollow"]},"children":[{"type":"text","value":"SoftwareX"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.software.ac.uk/top-tip/which-journals-should-i-publish-my-software","rel":["nofollow"]},"children":[{"type":"text","value":"Check this extensive list of software journals"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note that this is different than other scientific journal publications in that the publication should be focussing on the software and its features and not on any particular research results. However, research projects in which the software plays a crucial role can of course be mentioned as use cases."}]},{"type":"element","tag":"h2","props":{"id":"communication-and-outreach"},"children":[{"type":"text","value":"Communication and outreach"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once software is released, it is often a good idea to spend some time on communication and outreach to potential users of the software. In this way the world will get to know your software. This can be in many forms:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Blogposts"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Organisational/institutional newsletters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Conference presentations/posters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Etc."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"steps","depth":2,"text":"Steps"},{"id":"software-repository","depth":2,"text":"Software repository"},{"id":"versions-tags-and-releases","depth":2,"text":"Versions, tags and releases"},{"id":"get-a-persistent-identifier","depth":2,"text":"Get a persistent identifier"},{"id":"registries","depth":2,"text":"Registries"},{"id":"software-paper","depth":2,"text":"Software Paper"},{"id":"communication-and-outreach","depth":2,"text":"Communication and outreach"}]}},"_type":"markdown","_id":"local_fs:modules:publication:software_publication_pipeline.md","_source":"local_fs","_file":"modules/publication/software_publication_pipeline.md","_stem":"modules/publication/software_publication_pipeline","_extension":"md","plainText":"---\ntitle: Publication pipeline\ntype: reading\norder: 3\n---\n\n# Software publication pipeline\n\n## Steps\n\nIt is recommended that all steps in the pipeline are followed, but they are not dependent on each other. In this pipeline we provide resources to achieve the whole pipeline using GitHub or GitLab for hosting the source code \n* Software repository\n* Tag/semantic versioning\n* Get a persistent identifier\n* Registries\n* Software Paper\n\n\n## Software repository\n\nIf possible, during the development of Research Software, changes should be tracked using dedicated version control software like [git](https://git-scm.com/).  \n\nPut all source files in a public version-controlled repository, preferably GitHub or GitLab. Both GitHub and Gitlab provide online repositories for hosting source code. As can be inferred from their names, they were designed to be used together with Git version control.  The nice thing about using git together with GitHub and GitLab is that it stores the complete history of changes to the source code, rather than just a single version . \n\nA quickstart tutorial for...\n\n* [GitHub](https://docs.github.com/en/get-started/quickstart/create-a-repo)\n* [GitLab](https://docs.gitlab.com/ee/user/project/index.html)\n\n\n## Versions, tags and releases\nEvery time software changes, and that history is stored, that can be considered a new **version** of the software. It is useful to add special identifiers, called **tags** to new versions that mark significant changes, so that specific versions of your software can be cited or referenced as dependency by other software. If you use git for version control, you can [create tags in git](https://git-scm.com/book/en/v2/Git-Basics-Tagging)\n\nIt is good practice to use **[semantic versioning](https://semver.org/)** to tag the software. In this way, information about the impact of the change from one version to the next is stored in the tag. Usually, tagged versions of the software are opened up to the public in a **software release**, together with updated documentation and a documentation of the changes since the previous release in a so called **changelog**.\n\nThe documentation of creating releases... \n\n* [on GitHub](https://docs.github.com/en/repositories/releasing-projects-on-github)\n* [on GitLab](https://docs.gitlab.com/ee/user/project/releases/)\n\n\n## Get a persistent identifier\nSpecific versions of the software should be published to an archiving service that provides persistent identifiers\n\nFor example, [Zenodo](https://zenodo.org/) is a long term archiving service for scientific data and software.\nZenodo will assign a DOI to the published data, making it citable.\n\nDocumentation on how to integrate Zenodo with your repository...\n\n* [on GitHub](https://docs.github.com/en/repositories/archiving-a-github-repository/referencing-and-citing-content)\n* [on Gitlab](https://gitlab.com/sbeniamine/gitlab2zenodo)\n\n\n## Registries\nTo improve findability of the software, it should be shared in [existing software registries](https://github.com/NLeSC/awesome-research-software-registries). Preferably, software is added to a registry specific to the domain and/or programming language. Software can be shared in multiple registries if they are relevant to the software. \n\n\n## Software Paper\nA major, but also optional step is to publish a journal article about the software specifically in a dedicated software journal. Some examples are:\n\n* [Journal of Open Research Software (JORS)](https://openresearchsoftware.metajnl.com/)\n* [Journal of Open Source Software (JOSS)](https://joss.theoj.org/)\n* [SoftwareX](https://www.softxjournal.com/)\n\n[Check this extensive list of software journals](https://www.software.ac.uk/top-tip/which-journals-should-i-publish-my-software)\n\nNote that this is different than other scientific journal publications in that the publication should be focussing on the software and its features and not on any particular research results. However, research projects in which the software plays a crucial role can of course be mentioned as use cases. \n\n## Communication and outreach\nOnce software is released, it is often a good idea to spend some time on communication and outreach to potential users of the software. In this way the world will get to know your software. This can be in many forms:\n\n* Blogposts\n* Organisational/institutional newsletters\n* Conference presentations/posters\n* Etc."},{"_path":"/modules/researchsoftware/exercise-is-it-research-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Is it Research Software?","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-is-it-research-software"},"children":[{"type":"text","value":"Exercise: Is it research software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using the definition of research software from the FAIR4RS working group, try to classify the following as \"research software\" or \"software in research\""}]},{"type":"element","tag":"h3","props":{"id":"example-software-tools"},"children":[{"type":"text","value":"Example software tools"}]},{"type":"element","tag":"h4","props":{"id":"shape-preserving-local-histogram-modification-algorithm"},"children":[{"type":"text","value":"Shape Preserving Local Histogram Modification Algorithm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5201/ipol.2018.236","rel":["nofollow"]},"children":[{"type":"text","value":"An Analysis and Implementation of the Shape Preserving Local Histogram Modification Algorithm"}]},{"type":"text","value":" is a published article on "},{"type":"element","tag":"a","props":{"href":"https://www.ipol.im/","rel":["nofollow"]},"children":[{"type":"text","value":"IPOL"}]},{"type":"text","value":". The source code implementing the algorithm is available for download."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Is this \"research software\" or \"software in research\"?"}]},{"type":"element","tag":"h4","props":{"id":"scipy"},"children":[{"type":"text","value":"SciPy"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zbmath.org/software/6293","rel":["nofollow"]},"children":[{"type":"text","value":"SciPy"}]},{"type":"text","value":" is open-source software for mathematics, science, and engineering.\nIt is also the name of a very popular conference on scientific programming with Python. The SciPy library depends on NumPy, which provides convenient and fast N-dimensional array manipulation.\nThe SciPy library is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines such as routines for numerical integration and optimization.\nTogether, they run on all popular operating systems, are quick to install, and are free of charge.\nNumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the world’s leading scientists and engineers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Is this \"research software\" or \"software in research\"?"}]},{"type":"element","tag":"h3","props":{"id":"other-software-tools"},"children":[{"type":"text","value":"Other software tools"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How about other software tools you are familiar with?\nCan you provide an example of software you are familiar with, and then classify it as \"research software\" or \"software in research\"?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-is-it-research-software","depth":2,"text":"Exercise: Is it research software?","children":[{"id":"example-software-tools","depth":3,"text":"Example software tools"},{"id":"other-software-tools","depth":3,"text":"Other software tools"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-is-it-research-software.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-is-it-research-software.md","_stem":"modules/researchsoftware/exercise-is-it-research-software","_extension":"md","plainText":"---\ntitle: Is it Research Software?\ntype: exercise\norder: 5\n---\n\n## Exercise: Is it research software?\n\nUsing the definition of research software from the FAIR4RS working group, try to classify the following as \"research software\" or \"software in research\"\n\n### Example software tools\n\n#### Shape Preserving Local Histogram Modification Algorithm\n[An Analysis and Implementation of the Shape Preserving Local Histogram Modification Algorithm](https://doi.org/10.5201/ipol.2018.236) is a published article on [IPOL](https://www.ipol.im/). The source code implementing the algorithm is available for download.\n\nIs this \"research software\" or \"software in research\"?\n\n#### SciPy\n[SciPy](https://zbmath.org/software/6293) is open-source software for mathematics, science, and engineering.\nIt is also the name of a very popular conference on scientific programming with Python. The SciPy library depends on NumPy, which provides convenient and fast N-dimensional array manipulation.\nThe SciPy library is built to work with NumPy arrays, and provides many user-friendly and efficient numerical routines such as routines for numerical integration and optimization.\nTogether, they run on all popular operating systems, are quick to install, and are free of charge.\nNumPy and SciPy are easy to use, but powerful enough to be depended upon by some of the world’s leading scientists and engineers.\n\nIs this \"research software\" or \"software in research\"?\n\n### Other software tools\nHow about other software tools you are familiar with?\nCan you provide an example of software you are familiar with, and then classify it as \"research software\" or \"software in research\"?\n"},{"_path":"/modules/researchsoftware/exercise-research-life-cycle","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Research Life Cycle","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-where-does-software-fit-in-the-research-life-cycle"},"children":[{"type":"text","value":"Exercise: Where does software fit in the research life cycle?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Take a look at the research life cycle below."}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":400},"children":[]},{"type":"element","tag":"h3","props":{"id":"pick-a-piece-of-software"},"children":[{"type":"text","value":"Pick a piece of software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Think of a piece of software you have heard about, used, contributed to or developed in a research context."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following research software can also be used as examples:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"h3","props":{"id":"answer-the-following-questions"},"children":[{"type":"text","value":"Answer the following questions"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Write a short paragraph (max. 100 words) per question:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Would you consider this Research Software or Software used in Research? Explain why."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Where does it fit in the research life cycle? Explain why."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-where-does-software-fit-in-the-research-life-cycle","depth":2,"text":"Exercise: Where does software fit in the research life cycle?","children":[{"id":"pick-a-piece-of-software","depth":3,"text":"Pick a piece of software"},{"id":"answer-the-following-questions","depth":3,"text":"Answer the following questions"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-research-life-cycle.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-research-life-cycle.md","_stem":"modules/researchsoftware/exercise-research-life-cycle","_extension":"md","plainText":"---\ntitle: Research Life Cycle\ntype: exercise\norder: 5\n---\n\n## Exercise: Where does software fit in the research life cycle?\n\nTake a look at the research life cycle below.\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"400\"/>\n\n### Pick a piece of software\n\nThink of a piece of software you have heard about, used, contributed to or developed in a research context.\n\nThe following research software can also be used as examples:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\n### Answer the following questions \nWrite a short paragraph (max. 100 words) per question:\n\n- Would you consider this Research Software or Software used in Research? Explain why.\n- Where does it fit in the research life cycle? Explain why.\n"},{"_path":"/modules/researchsoftware/exercise-writing-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Writing Software","description":"","type":"exercise","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"writing-software-with-python-10-minutes"},"children":[{"type":"text","value":"Writing software with Python (10 minutes)"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/python-online.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"https://www.online-python.com/"}]},{"type":"element","tag":"h3","props":{"id":"if-you-have-never-written-software-before"},"children":[{"type":"text","value":"If you have never written software before:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Visit "},{"type":"element","tag":"a","props":{"href":"https://www.online-python.com/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.online-python.com/"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"it will show you as an example the code for a function that adds items together."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Play around with the code a bit, e.g.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Try using words instead of numbers as inputs. What happens and why?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add a function that subtracts items rather than adding them. What happens now if you use words instead of numbers, and why?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What else can you do?"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"if-you-have-experience-in-writing-software"},"children":[{"type":"text","value":"If you have experience in writing software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Buddy up with someone from the above group."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Use the 4-eye principle (pair programming), to watch what they are doing and help them figure out what is going on and why."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Try to be conscious in explaining what is important and what your buddy needs to know without overcomplicating matters or taking over the keyboard."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"writing-software-with-python-10-minutes","depth":2,"text":"Writing software with Python (10 minutes)","children":[{"id":"if-you-have-never-written-software-before","depth":3,"text":"If you have never written software before:"},{"id":"if-you-have-experience-in-writing-software","depth":3,"text":"If you have experience in writing software:"}]}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:exercise-writing-software.md","_source":"local_fs","_file":"modules/researchsoftware/exercise-writing-software.md","_stem":"modules/researchsoftware/exercise-writing-software","_extension":"md","plainText":"---\ntitle: Writing Software\ntype: exercise\norder: 2\n---\n\n## Writing software with Python (10 minutes)\n\n<img src=\"media/python-online.png\" width=\"70%\">\n<small>https://www.online-python.com/</small>\n\n### If you have never written software before:\n\n- Visit https://www.online-python.com/\n  - it will show you as an example the code for a function that adds items together.\n- Play around with the code a bit, e.g.\n  - Try using words instead of numbers as inputs. What happens and why?\n  - Add a function that subtracts items rather than adding them. What happens now if you use words instead of numbers, and why?\n  - What else can you do?\n\n### If you have experience in writing software:\n\n- Buddy up with someone from the above group.\n- Use the 4-eye principle (pair programming), to watch what they are doing and help them figure out what is going on and why.\n- Try to be conscious in explaining what is important and what your buddy needs to know without overcomplicating matters or taking over the keyboard.\n"},{"_path":"/modules/researchsoftware/further-reading","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Further Reading","description":"","type":"reading","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-and-data"},"children":[{"type":"text","value":"Software and data"}]},{"type":"element","tag":"h2","props":{"id":"software-is-data"},"children":[{"type":"text","value":"Software is data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In computer science, the fact that software is data is considered one of the fundamental concepts of computing. The fact that the thing that operates the machine (software) is the same kind of thing as the thing it operates on (data) is definitely one of the strengths of current computersystems and one of the main reasons why we can do such complex and powerful things with the combination of hardware and software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following blogpost discusses why this concept is so powerful: "},{"type":"element","tag":"a","props":{"href":"https://www.blackliszt.com/2014/04/fundamental-concepts-of-computing-software-is-data.html","rel":["nofollow"]},"children":[{"type":"text","value":"Fundamental Concepts of Computing: Software is Data!"}]}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-special-type-of-data"},"children":[{"type":"text","value":"Software is a special type of data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However for most practical purposes in most domains of scientific research (except maybe the domain of computer science) it is useful to make a distinction between the data that is software and other data. From now on, when we use the word data, we mean the kind fo data which is not software and which we use to store more static information."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is executable, data is not."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Data provides information or evidence, software provides a tool to do work on the data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a creative work, scientific data are facts or observations."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The lifetime of software is generally not as long as that of data."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://github.com/danielskatz/software-vs-data","rel":["nofollow"]},"children":[{"type":"text","value":"Software vs Data"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.7287/peerj.preprints.2630v1","rel":["nofollow"]},"children":[{"type":"text","value":"Software vs. data in the context of citation"}]}]},{"type":"element","tag":"h2","props":{"id":"the-role-of-research-software"},"children":[{"type":"text","value":"The role of Research Software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following piece was written after a workshop called \"The Future of Research Software\", held in the Netherlands in 2022."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It explores the different roles for research software in the research life cycle, strengthening the case for sustainable software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://upstream.force11.org/defining-the-roles-of-research-software/","rel":["nofollow"]},"children":[{"type":"text","value":"Defining the Roles of Research Software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zenodo.org/records/5504016","rel":["nofollow"]},"children":[{"type":"text","value":"Defining Research Software: a controversial discussion"}]},{"type":"text","value":": Summary Report of FAIR4RS Subgroup 3 activity and discussion"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-is-data","depth":2,"text":"Software is data"},{"id":"software-is-a-special-type-of-data","depth":2,"text":"Software is a special type of data"},{"id":"the-role-of-research-software","depth":2,"text":"The role of Research Software"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:further-reading.md","_source":"local_fs","_file":"modules/researchsoftware/further-reading.md","_stem":"modules/researchsoftware/further-reading","_extension":"md","plainText":"---\ntitle: Further Reading\ntype: reading\norder: 6\n---\n\n# Software and data\n\n## Software is data\n\nIn computer science, the fact that software is data is considered one of the fundamental concepts of computing. The fact that the thing that operates the machine (software) is the same kind of thing as the thing it operates on (data) is definitely one of the strengths of current computersystems and one of the main reasons why we can do such complex and powerful things with the combination of hardware and software.\n\nThe following blogpost discusses why this concept is so powerful: [Fundamental Concepts of Computing: Software is Data!](https://www.blackliszt.com/2014/04/fundamental-concepts-of-computing-software-is-data.html)\n\n## Software is a special type of data\n\nHowever for most practical purposes in most domains of scientific research (except maybe the domain of computer science) it is useful to make a distinction between the data that is software and other data. From now on, when we use the word data, we mean the kind fo data which is not software and which we use to store more static information.\n\n- Software is executable, data is not.\n- Data provides information or evidence, software provides a tool to do work on the data.\n- Software is a creative work, scientific data are facts or observations.\n- The lifetime of software is generally not as long as that of data.\n\n[Software vs Data](https://github.com/danielskatz/software-vs-data)\n\n[Software vs. data in the context of citation](https://doi.org/10.7287/peerj.preprints.2630v1)\n\n\n## The role of Research Software\n\nThe following piece was written after a workshop called \"The Future of Research Software\", held in the Netherlands in 2022.\n\nIt explores the different roles for research software in the research life cycle, strengthening the case for sustainable software.\n\n[Defining the Roles of Research Software](https://upstream.force11.org/defining-the-roles-of-research-software/)\n\n[Defining Research Software: a controversial discussion](https://zenodo.org/records/5504016): Summary Report of FAIR4RS Subgroup 3 activity and discussion\n"},{"_path":"/modules/researchsoftware","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"What is (Research) Software?","description":"thumbnail-research-software","category":"Getting Started","order":0,"author":"eScience Center","abstract":"What is software, how is it made and what makes research software so special?","thumbnail":"thumbnail-research-software.png","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/colorful-software-or-web-code-on-a-computer-monitor-Skf7HxARcoc?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash","rel":["nofollow"]},"children":[{"type":"text","value":"thumbnail-research-software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@markusspiske?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Markus Spiske"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/colorful-software-or-web-code-on-a-computer-monitor-Skf7HxARcoc?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:index.md","_source":"local_fs","_file":"modules/researchsoftware/index.md","_stem":"modules/researchsoftware/index","_extension":"md","plainText":"---\ntitle: What is (Research) Software?\ncategory: Getting Started\norder: 0\nauthor: eScience Center\nabstract: What is software, how is it made and what makes research software so special?\nthumbnail: \"thumbnail-research-software.png\"\nvisibility: visible\n---\n\n[thumbnail-research-software](https://unsplash.com/photos/colorful-software-or-web-code-on-a-computer-monitor-Skf7HxARcoc?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash)\n\nPhoto by <a href=\"https://unsplash.com/@markusspiske?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Markus Spiske</a> on <a href=\"https://unsplash.com/photos/colorful-software-or-web-code-on-a-computer-monitor-Skf7HxARcoc?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n\n\n\n\n"},{"_path":"/modules/researchsoftware/info","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Learning Objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What are the similarities and differences between software and data?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is the difference between \"Research Software\" and \"software in research\"?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why are these distinctions important and useful? How do I effectively communicate that to researchers?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:info.md","_source":"local_fs","_file":"modules/researchsoftware/info.md","_stem":"modules/researchsoftware/info","_extension":"md","plainText":"---\ntitle: Learning Objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What are the similarities and differences between software and data?\n- What is the difference between \"Research Software\" and \"software in research\"?\n- Why are these distinctions important and useful? How do I effectively communicate that to researchers?\n"},{"_path":"/modules/researchsoftware/slides-researchsoftware","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"Research Software","description":"===","type":"slides","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"research-software"},"children":[{"type":"text","value":"Research software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"ceci-nest-pas-une-photo"},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Ceci n'est pas une photo"}]}]},{"type":"element","tag":"img","props":{"src":"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Black_hole_-_Messier_87_crop_max_res.jpg/1280px-Black_hole_-_Messier_87_crop_max_res.jpg","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.3847/2041-8213/ab0ec7","rel":["nofollow"]},"children":[{"type":"text","value":"The Event Horizon Telescope Collaboration et al. 2019"}]},{"type":"text","value":" (CC BY 3.0)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software plays an important role in science. A first thought may be its role in data collection and analysis. Further, it may play a role in designing experiments, based on models generated. It may "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"be"}]},{"type":"text","value":" the experiment itself, simulate a research outcome based on data or ideas entered; it may also be the \"brain\" behind controlling crucial instrumentation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What scientific software can you think of?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What role does it play?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An example here: the Event Horizon Telescope, which took a \"picture\" of a black hole.\nThe \"telescope\" is not a single tool, but complex: a \"planet-scale array of eight ground-based radio telescopes\" (wikipedia).\nThe separate telescopes collect data that is synchronized with atomic clocks, and the data is combined at highly specialised supercomputers.\nThe data can be converted into an image using custom software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is software used?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is used all across the research life cycle."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"what-is-research-software"},"children":[{"type":"text","value":"What is Research Software?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/definition.png","width":"50%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"definition of Research Software from the FAIR4RS working group"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A definition of research software, from the FAIR4RS working group.\nIt is important that not all software that is used in research is research software.\nFor example, a text editor that is used to write a paper is not research software.\nNor is powerpoint, a web browser, or the software used to guide the telescope.\nEven tools like R or Python are not necessarily research software.\nThe code written in R or Python for an analysis would be research software, however.\nJust like a custom-made Excel macro that is used to analyse data.\nOr a custom-made web application that is used to collect data."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle-1"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Research Software"}]}]},{"type":"text","value":" used?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/researchcycle.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Research Software is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainly"}]},{"type":"text","value":" used in \"Collecting\" and \"Processing & analyzing\" steps.\nHowever, non-research software can also be used in these steps, and research software can also be used in other steps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"the-research-lifecycle-2"},"children":[{"type":"text","value":"The research lifecycle"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In which stages is "},{"type":"element","tag":"em","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Research Software"}]}]},{"type":"text","value":" used?"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/research-cycle-RS.png","alt":"The Research Life Cycle","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Research Software is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"mainly"}]},{"type":"text","value":" used in \"Collecting\" and \"Processing & analyzing\" steps.\nHowever, non-research software can also be used in these steps, and research software can also be used in other steps."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-the-distinction"},"children":[{"type":"text","value":"Why the distinction?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Defining Research Software..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Acknowledges its importance during research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Designates it as research output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Enables proper attribution"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Facilitates findability and reusability"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By defining research software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we can more easily justify and emphasize how essential it is while doing research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we can emphasize that creating (good) research software is an essential part of research and that the product is a true \"deliverable\" e.g. in grant applications"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"we give the opportunity for the developers to gain (citable) recognition for their work"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"by tagging software as \"research software\", we make it more (computer) findable, and therefor more easily reused"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is an important part of research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Not all software used in research is Research Software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Defining \"Research Software\" provides recognition in the research community"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"ceci-nest-pas-une-photo","depth":2,"text":"Ceci n'est pas une photo"},{"id":"the-research-lifecycle","depth":2,"text":"The research lifecycle","children":[{"id":"what-is-research-software","depth":3,"text":"What is Research Software?"}]},{"id":"the-research-lifecycle-1","depth":2,"text":"The research lifecycle"},{"id":"the-research-lifecycle-2","depth":2,"text":"The research lifecycle"},{"id":"why-the-distinction","depth":2,"text":"Why the distinction?"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:slides-researchsoftware.md","_source":"local_fs","_file":"modules/researchsoftware/slides-researchsoftware.md","_stem":"modules/researchsoftware/slides-researchsoftware","_extension":"md","plainText":"---\ntitle: Research Software\ntype: slides\norder: 3\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Research software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## *Ceci n'est pas une photo*\n\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Black_hole_-_Messier_87_crop_max_res.jpg/1280px-Black_hole_-_Messier_87_crop_max_res.jpg\" width=\"55%\">\n\n<small>[The Event Horizon Telescope Collaboration et al. 2019](https://doi.org/10.3847/2041-8213/ab0ec7) (CC BY 3.0)</small>\n\nNote:\n\nSoftware plays an important role in science. A first thought may be its role in data collection and analysis. Further, it may play a role in designing experiments, based on models generated. It may _be_ the experiment itself, simulate a research outcome based on data or ideas entered; it may also be the \"brain\" behind controlling crucial instrumentation.\n\nWhat scientific software can you think of?\n\nWhat role does it play?\n\nAn example here: the Event Horizon Telescope, which took a \"picture\" of a black hole.\nThe \"telescope\" is not a single tool, but complex: a \"planet-scale array of eight ground-based radio telescopes\" (wikipedia).\nThe separate telescopes collect data that is synchronized with atomic clocks, and the data is combined at highly specialised supercomputers.\nThe data can be converted into an image using custom software.\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\nIn which stages is software used?\n\nNote:\n\nSoftware is used all across the research life cycle.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### What is Research Software?\n\n<img src=\"media/definition.png\" width=\"50%\">\n\n<small>definition of Research Software from the FAIR4RS working group</small>\n\nNote:\n\nA definition of research software, from the FAIR4RS working group.\nIt is important that not all software that is used in research is research software.\nFor example, a text editor that is used to write a paper is not research software.\nNor is powerpoint, a web browser, or the software used to guide the telescope.\nEven tools like R or Python are not necessarily research software.\nThe code written in R or Python for an analysis would be research software, however.\nJust like a custom-made Excel macro that is used to analyse data.\nOr a custom-made web application that is used to collect data.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\nIn which stages is ***Research Software*** used?\n\n<img src=\"media/researchcycle.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\n\nNote:\n\nResearch Software is *mainly* used in \"Collecting\" and \"Processing & analyzing\" steps. \nHowever, non-research software can also be used in these steps, and research software can also be used in other steps.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## The research lifecycle\n\nIn which stages is ***Research Software*** used?\n\n<img src=\"media/research-cycle-RS.png\" alt=\"The Research Life Cycle\" width=\"55%\"/>\n\n\nNote:\n\nResearch Software is *mainly* used in \"Collecting\" and \"Processing & analyzing\" steps. \nHowever, non-research software can also be used in these steps, and research software can also be used in other steps.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why the distinction?\n\nDefining Research Software...\n\n- Acknowledges its importance during research\n- Designates it as research output\n- Enables proper attribution\n- Facilitates findability and reusability\n\nNote:\n\nBy defining research software:\n\n- we can more easily justify and emphasize how essential it is while doing research\n- we can emphasize that creating (good) research software is an essential part of research and that the product is a true \"deliverable\" e.g. in grant applications\n- we give the opportunity for the developers to gain (citable) recognition for their work\n- by tagging software as \"research software\", we make it more (computer) findable, and therefor more easily reused\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software is an important part of research\n- Not all software used in research is Research Software\n- Defining \"Research Software\" provides recognition in the research community\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/researchsoftware/slides-software","_dir":"researchsoftware","_draft":false,"_partial":false,"_locale":"","title":"What is Software?","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"what-is-software"},"children":[{"type":"text","value":"What is software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"some-history"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"img","props":{"className":["rotate-90"],"src":"media/Lochkarte_Tanzorgel_cutout.jpg","width":"40%","dataRotate":"90"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://www.wikidata.org/wiki/Q106975068"},"children":[{"type":"text","value":"Stefan Kuhn"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWho knows what this is?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"See next slide for explanation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-history-1"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"img","props":{"className":[],"src":"media/Lochkarte_Tanzorgel.jpg","width":"40%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://www.wikidata.org/wiki/Q106975068"},"children":[{"type":"text","value":"Stefan Kuhn"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nA street organ's machinery is instructed by long \"books\" of cardboard with holes punched in it. Each hole triggers one specific note and/or instrument to play in the organ. In this way the organ can be \"programmed\" and the punch book can be considered the software of the organ."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-history-2"},"children":[{"type":"text","value":"Some history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/wbLuMd5zYww?si=a_eppMknE5TOFPCY&start=277","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275"},"children":[]},{"type":"element","tag":"a","props":{"href":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275","rel":["nofollow"]},"children":[{"type":"text","value":"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nA long book of cardboard with holes punched in it is used to give the street organ instructions on which mechanical instruments should play what note at which time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/Punch-card-cobol.jpg","width":"55%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by Rainer Gerhards on "},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:Punch-card-cobol.jpg"},"children":[{"type":"text","value":"Wikimedia"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWho knows what this is? Looks similar to the previous thing, right? This is software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history-1"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/kaQmAybWn-w?si=OxhzN1myjx6d4vZt&start=540","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540"},"children":[{"type":"text","value":"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThis software was written using special typewriters that would punch holes in cardboard cards. It would encode instructions to the computer hardware, in this case the hardware is a UNIVAC 90/30 (1974). One punchcard from the old UNIVAC 90/30 system would hold a single line of code. A program usually consisted of a whole stack of these cards."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"some-more-history-2"},"children":[{"type":"text","value":"Some more history"}]},{"type":"element","tag":"iframe","props":{"width":560,"height":315,"src":"https://www.youtube.com/embed/SYpPPIsxq64?si=ixgCa3fUJY5ccAkE&start=793","title":"YouTube video player","frameBorder":"0","allow":"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share","referrerPolicy":"strict-origin-when-cross-origin","allowFullScreen":true},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793"},"children":[{"type":"text","value":"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThese punchcards would be loaded into the computer to instruct which parts of the hardware should act in which way and when. In this video, you see an even older computer, the Harwell Dekatron or W.I.T.C.H. (1952), which reads its software from perforated paper tape."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-today"},"children":[{"type":"text","value":"Software today"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/modern-software.avif","width":"55%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@thisisengineering"},"children":[{"type":"text","value":"ThisisEngineering"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/black-flat-screen-computer-monitor-hoivM01c-vg?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nQ: In what way is modern software different from historic punch-card \"software\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some possible answers:\nThese days, software usually gets written using a computer, in a text editor program, so the act of writing software requires software itself. The software is stored in memory and on a hard disk rather than on cardboard (remember, one card per line...). Modern software often builds on other software, or used specific parts of other software packages, rather than re-defining the wheel."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, it ultimately still basically does the same: Software is a set of instructions that tells hardware what to do."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"complexity-of-modern-software"},"children":[{"type":"text","value":"Complexity of modern software"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/VScode_snapshot.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Screenshot of source code for "},{"type":"element","tag":"a","props":{"href":"https://github.com/DeepRank/deeprank2"},"children":[{"type":"text","value":"DeepRank2"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn this image, we can get a glimpse of the complexity of modern software. We can see that software has a certain structure (indicated by differently colored text), is often composed of many lines of code (right side of image shows the entire length of the code), and is split over multiple intercommunicating files (left)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-form-of-data"},"children":[{"type":"text","value":"Software is a form of data"}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/data_definition.png","width":"70%"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Definition by "},{"type":"element","tag":"a","props":{"href":"https://www.merriam-webster.com/dictionary/data/"},"children":[{"type":"text","value":"Merriam Webster English Dictionary"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-is-data"},"children":[{"type":"text","value":"Software is data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software can be ..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"stored as bits"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"read, loaded, and processed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"input and/or output"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"can be assigned a DOI, licence, etc"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is stored as bits and read from disk, loaded into memory, and processed similar to other types of data."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software can be input, and software can be output. In fact, one of the major breakthroughs in computer science was when people realized that the instructions of the machine could be handled and stored the same as the data that it operated on."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"but"},"children":[{"type":"text","value":"BUT"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-is-a-special-type-of-data"},"children":[{"type":"text","value":"Software is a special type of data"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software is..."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"complex"}]},{"type":"text","value":": it is creatively generated, interconnected, and multi-layered"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"interdependent"}]},{"type":"text","value":": it builds upon and therefore depends on other software (and data)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"executable"}]},{"type":"text","value":": it needs to be run to have a value (e.g. to process data)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"dynamic"}]},{"type":"text","value":": it can (and will) break soon and therefore needs to be regularly updated"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWhile technically, software is a special kind of data (in that it is representation of information in a digital state), they are in essence quite different."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Complexity; it is not a single file, but a collection of files that are interconnected and multi-layered, and do not necessarily stand on their own. Software is also the result of a creative process that provides a tool to do something, and not the result of a measurement or observation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Interdependence; software is often built using other software, and rarely built completely from scratch. This makes it dependent on other existing applications, which themselves may also change over time. In the context of research software it also often depends on the data, data formats, data standards, metadata, etc, which also change when new equipment becomes available."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Executability; software is in its dryest form a set of instructions that can be an archive of a procedure. However, the main goal of software is that these instructions can be executed. While most forms of data can stand on their own (e.g. I can look at the list of ages of all the people in a room and make conclusions about average age, etc.), software cannot be directly interpreted (only in the context of what it does)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dynamic vs static; its interdependence and context-dependency drives software to require maintenance to retain its value, and this maintenance is not straightforward. Versioning of software is very common, while data is often static (though versions may happen)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"software-requires-dedicated-maintenance"},"children":[{"type":"text","value":"Software requires dedicated maintenance"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software needs to be actively maintained to remain useable.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"This is contrary to 'regular' data, which is expected to remain static forever."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maintenance is often lacking in academic contexts\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of funding"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of incentives/rewards"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"lack of understanding and expertise (maintenance is a different from creation)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"individualistic work with fast turnover"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\n'Regular' data can sometimes be versioned, but this is more the exception than the rule."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Regarding the reasons for lack of maintenance:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"funding opportunities for this do exist, but are rare and usually only for large projects"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"while you can sometimes publish a major update to a software package, this is also rare, and will even more rarely result in a high-impact/highly cited paper. it is also not highly appreciated e.g. on a CV."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"while academics can often create software that \"does the job\" well, a different skillset is required to maintain the software (or write it in a way to facilitate maintenance)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"academics often work on projects by themselves and then move on soon after their papers are published, leaving a knowledge gap for others to maintain the software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-vs-data-management"},"children":[{"type":"text","value":"Software vs data management"}]},{"type":"element","tag":"ul","props":{"style":"margin-bottom: 20px;"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"living thing"}]}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Good data management will not ensure good software management"}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"While some FAIR data management practices apply directly to software, others do not apply as easily\n    "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n      "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"see "},{"type":"element","tag":"a","props":{"href":"https://www.nature.com/articles/s41597-022-01710-x"},"children":[{"type":"text","value":"FAIR software paper"}]}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"There is a thriving open-software community that has generated many tools and standards to facilitate good practices"}]}]},{"type":"element","tag":"img","props":{"src":"/modules/researchsoftware/media/FAIR-software-paper.png","width":"40%","alt":"FAIR Software Paper","style":"display: block; border-style: none; margin: 0 auto;"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThe different nature of software also provides opportunities but also requires extra thought on its management.\nSoftware is a living thing, and therefore it is easier to adopt good practices early on.\nCrucially, there is a community driven openness in software that long predates the open science movement.\nThis is not to say that software is inherently open, but that there is a broad open culture, which also comes with existing tools and pathways to facilitate openness and transparency.\nConsider GitHub (and other code hosting platforms), which are designed for this purpose.\nConsider also version control software, a good software development practice that builds in provenance."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software are the instructions that tell the hardware (computer) what to do"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is a 'living thing'"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"We need extra and different techniques for good software management"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"some-history","depth":2,"text":"Some history"},{"id":"some-history-1","depth":2,"text":"Some history"},{"id":"some-history-2","depth":2,"text":"Some history"},{"id":"some-more-history","depth":2,"text":"Some more history"},{"id":"some-more-history-1","depth":2,"text":"Some more history"},{"id":"some-more-history-2","depth":2,"text":"Some more history"},{"id":"software-today","depth":2,"text":"Software today"},{"id":"complexity-of-modern-software","depth":2,"text":"Complexity of modern software"},{"id":"software-is-a-form-of-data","depth":2,"text":"Software is a form of data"},{"id":"software-is-data","depth":2,"text":"Software is data"},{"id":"but","depth":2,"text":"BUT"},{"id":"software-is-a-special-type-of-data","depth":2,"text":"Software is a special type of data"},{"id":"software-requires-dedicated-maintenance","depth":2,"text":"Software requires dedicated maintenance"},{"id":"software-vs-data-management","depth":2,"text":"Software vs data management"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:researchsoftware:slides-software.md","_source":"local_fs","_file":"modules/researchsoftware/slides-software.md","_stem":"modules/researchsoftware/slides-software","_extension":"md","plainText":"---\ntitle: What is Software?\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# What is software?\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<img class=\"rotate-90\" src=\"media/Lochkarte_Tanzorgel_cutout.jpg\"  width=\"40%\" data-rotate=\"90\">\n\n<small>Photo by <a href=\"https://www.wikidata.org/wiki/Q106975068\">Stefan Kuhn</a> on <a href=\"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg\">Wikimedia</a>\n</small>\n\n\nNote:\nWho knows what this is?\n\nSee next slide for explanation.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<img class=\"\" src=\"media/Lochkarte_Tanzorgel.jpg\"  width=\"40%\">\n\n<small>Photo by <a href=\"https://www.wikidata.org/wiki/Q106975068\">Stefan Kuhn</a> on <a href=\"https://commons.wikimedia.org/wiki/File:Lochkarte_Tanzorgel.jpg\">Wikimedia</a>\n</small>\n\n\nNote:\nA street organ's machinery is instructed by long \"books\" of cardboard with holes punched in it. Each hole triggers one specific note and/or instrument to play in the organ. In this way the organ can be \"programmed\" and the punch book can be considered the software of the organ.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/wbLuMd5zYww?si=a_eppMknE5TOFPCY&amp;start=277\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n\n<small><a href=\"https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275\">https://youtu.be/wbLuMd5zYww?si=3o0zptLY4c3i1ppk&t=275</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nA long book of cardboard with holes punched in it is used to give the street organ instructions on which mechanical instruments should play what note at which time. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<img src=\"media/Punch-card-cobol.jpg\" width=\"55%\">\n\n<small>Photo by Rainer Gerhards on <a href=\"https://commons.wikimedia.org/wiki/File:Punch-card-cobol.jpg\">Wikimedia</a>\n</small>\n\n\n<!-- Speaker notes -->\nNote:\nWho knows what this is? Looks similar to the previous thing, right? This is software.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kaQmAybWn-w?si=OxhzN1myjx6d4vZt&amp;start=540\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<small><a href=\"https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540\">https://youtu.be/kaQmAybWn-w?si=zRmBx4Df68gWuw3e&t=540</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nThis software was written using special typewriters that would punch holes in cardboard cards. It would encode instructions to the computer hardware, in this case the hardware is a UNIVAC 90/30 (1974). One punchcard from the old UNIVAC 90/30 system would hold a single line of code. A program usually consisted of a whole stack of these cards.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Some more history\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/SYpPPIsxq64?si=ixgCa3fUJY5ccAkE&amp;start=793\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n<small><a href=\"https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793\">https://youtu.be/SYpPPIsxq64?si=m__szsXBDI6SP5kx&t=793</a>\n</small>\n\n<!-- Speaker notes -->\nNote:\nThese punchcards would be loaded into the computer to instruct which parts of the hardware should act in which way and when. In this video, you see an even older computer, the Harwell Dekatron or W.I.T.C.H. (1952), which reads its software from perforated paper tape. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Software today\n\n<img src=\"media/modern-software.avif\" width=\"55%\">\n<small>Photo by <a href=\"https://unsplash.com/@thisisengineering\">ThisisEngineering</a> on <a href=\"https://unsplash.com/photos/black-flat-screen-computer-monitor-hoivM01c-vg?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash\">Unsplash</a></small>\n\n\n<!-- Speaker notes -->\nNote:\nQ: In what way is modern software different from historic punch-card \"software\"\n\nSome possible answers:\nThese days, software usually gets written using a computer, in a text editor program, so the act of writing software requires software itself. The software is stored in memory and on a hard disk rather than on cardboard (remember, one card per line...). Modern software often builds on other software, or used specific parts of other software packages, rather than re-defining the wheel.\n\nHowever, it ultimately still basically does the same: Software is a set of instructions that tells hardware what to do.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Complexity of modern software\n\n<img src=\"media/VScode_snapshot.png\" width=\"70%\">\n<small>Screenshot of source code for <a href=\"https://github.com/DeepRank/deeprank2\">DeepRank2</a></small>\n\n<!-- Speaker notes -->\nNote:\nIn this image, we can get a glimpse of the complexity of modern software. We can see that software has a certain structure (indicated by differently colored text), is often composed of many lines of code (right side of image shows the entire length of the code), and is split over multiple intercommunicating files (left).\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Software is a form of data\n\n<img src=\"media/data_definition.png\" width=\"70%\">\n<small>Definition by <a href=\"https://www.merriam-webster.com/dictionary/data/\">Merriam Webster English Dictionary</a></small>\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software is data\n\nSoftware can be ...\n\n- stored as bits\n- read, loaded, and processed\n- input and/or output\n- can be assigned a DOI, licence, etc\n\n<!-- Speaker notes -->\nNote:\n- Software is stored as bits and read from disk, loaded into memory, and processed similar to other types of data. \n- Software can be input, and software can be output. In fact, one of the major breakthroughs in computer science was when people realized that the instructions of the machine could be handled and stored the same as the data that it operated on. \n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## BUT\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software is a special type of data\n\nSoftware is...\n\n- **complex**: it is creatively generated, interconnected, and multi-layered\n- **interdependent**: it builds upon and therefore depends on other software (and data)\n- **executable**: it needs to be run to have a value (e.g. to process data)\n- **dynamic**: it can (and will) break soon and therefore needs to be regularly updated \n\n<!-- Speaker notes -->\nNote:\nWhile technically, software is a special kind of data (in that it is representation of information in a digital state), they are in essence quite different.\n\n- Complexity; it is not a single file, but a collection of files that are interconnected and multi-layered, and do not necessarily stand on their own. Software is also the result of a creative process that provides a tool to do something, and not the result of a measurement or observation.\n- Interdependence; software is often built using other software, and rarely built completely from scratch. This makes it dependent on other existing applications, which themselves may also change over time. In the context of research software it also often depends on the data, data formats, data standards, metadata, etc, which also change when new equipment becomes available.\n- Executability; software is in its dryest form a set of instructions that can be an archive of a procedure. However, the main goal of software is that these instructions can be executed. While most forms of data can stand on their own (e.g. I can look at the list of ages of all the people in a room and make conclusions about average age, etc.), software cannot be directly interpreted (only in the context of what it does).\n- Dynamic vs static; its interdependence and context-dependency drives software to require maintenance to retain its value, and this maintenance is not straightforward. Versioning of software is very common, while data is often static (though versions may happen).\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software requires dedicated maintenance\n\n- Software needs to be actively maintained to remain useable.\n  - This is contrary to 'regular' data, which is expected to remain static forever.\n- Maintenance is often lacking in academic contexts\n  - lack of funding\n  - lack of incentives/rewards\n  - lack of understanding and expertise (maintenance is a different from creation)\n  - individualistic work with fast turnover\n\n\n<!-- Speaker notes -->\nNote:\n'Regular' data can sometimes be versioned, but this is more the exception than the rule.\n\nRegarding the reasons for lack of maintenance:\n- funding opportunities for this do exist, but are rare and usually only for large projects\n- while you can sometimes publish a major update to a software package, this is also rare, and will even more rarely result in a high-impact/highly cited paper. it is also not highly appreciated e.g. on a CV.\n- while academics can often create software that \"does the job\" well, a different skillset is required to maintain the software (or write it in a way to facilitate maintenance)\n- academics often work on projects by themselves and then move on soon after their papers are published, leaving a knowledge gap for others to maintain the software\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software vs data management\n\n<ul style=\"margin-bottom: 20px;\">\n  <li>Software is a <strong>living thing</strong></li>\n  <li>Good data management will not ensure good software management</li>\n  <li>While some FAIR data management practices apply directly to software, others do not apply as easily\n    <ul>\n      <li>see <a href=\"https://www.nature.com/articles/s41597-022-01710-x\">FAIR software paper</a></li>\n    </ul>\n  </li>\n  <li>There is a thriving open-software community that has generated many tools and standards to facilitate good practices</li>\n</ul>\n\n<img src=\"media/FAIR-software-paper.png\" width=\"40%\" alt=\"FAIR Software Paper\" style=\"display: block; border-style: none; margin: 0 auto;\">\n\nNote:\nThe different nature of software also provides opportunities but also requires extra thought on its management.\nSoftware is a living thing, and therefore it is easier to adopt good practices early on.\nCrucially, there is a community driven openness in software that long predates the open science movement.\nThis is not to say that software is inherently open, but that there is a broad open culture, which also comes with existing tools and pathways to facilitate openness and transparency.\nConsider GitHub (and other code hosting platforms), which are designed for this purpose.\nConsider also version control software, a good software development practice that builds in provenance.\n\n===\n\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software are the instructions that tell the hardware (computer) what to do\n- Software is a 'living thing'\n- We need extra and different techniques for good software management\n\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/softwarelandscape/exercise1","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Study & present","description":"","type":"exercise","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-study-and-present-20-30-minutes-for-2-5-groups"},"children":[{"type":"text","value":"Exercise: Study and present (20 - 30 minutes for 2-5 groups)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pick a concept, initiative or organization from this module's "},{"type":"element","tag":"a","props":{"href":"/modules/softwarelandscape/slides"},"children":[{"type":"text","value":"slide deck"}]},{"type":"text","value":" or the "},{"type":"element","tag":"a","props":{"href":"/main/yellowpages"},"children":[{"type":"text","value":"yellow pages"}]},{"type":"text","value":" related to the Research Software Landscape (or find one you think should be there and while you are at it, "},{"type":"element","tag":"a","props":{"href":"/main/contribute"},"children":[{"type":"text","value":"start a contribution"}]},{"type":"text","value":")."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then do a little research:"}]},{"type":"element","tag":"h3","props":{"id":"find-out-the-following-10-minutes"},"children":[{"type":"text","value":"Find out the following (10 minutes):"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What kind of \"thing\" did you choose? (e.g. an organization, group of people, document, set of guidelines, etc.)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is the core purpose or central thought behind your chosen concept?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is your chosen concept globally active, bound to a country or somehow geographically located somewhere?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Describe the timeline of your chosen concept: any relevant history, its inception, any updates, is it still active?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How can the scientific community benefit from this concept?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Are there other concepts related to your chosen concept?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What else can you tell? Spicy details, fun facts?"}]}]},{"type":"element","tag":"h3","props":{"id":"present-4-minutes"},"children":[{"type":"text","value":"Present (4 minutes):"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With your group, present what you learned in 4 minutes of which you reserve one minute for questions."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-study-and-present-20-30-minutes-for-2-5-groups","depth":2,"text":"Exercise: Study and present (20 - 30 minutes for 2-5 groups)","children":[{"id":"find-out-the-following-10-minutes","depth":3,"text":"Find out the following (10 minutes):"},{"id":"present-4-minutes","depth":3,"text":"Present (4 minutes):"}]}]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:exercise1.md","_source":"local_fs","_file":"modules/softwarelandscape/exercise1.md","_stem":"modules/softwarelandscape/exercise1","_extension":"md","plainText":"---\ntitle: Study & present\ntype: exercise\norder: 2\n---\n\n## Exercise: Study and present (20 - 30 minutes for 2-5 groups)\n\nPick a concept, initiative or organization from this module's [slide deck](/modules/softwarelandscape/slides) or the [yellow pages](/main/yellowpages) related to the Research Software Landscape (or find one you think should be there and while you are at it, [start a contribution](/main/contribute)). \n\nThen do a little research:\n\n### Find out the following (10 minutes):\n\n1. What kind of \"thing\" did you choose? (e.g. an organization, group of people, document, set of guidelines, etc.)\n1. What is the core purpose or central thought behind your chosen concept?\n1. Is your chosen concept globally active, bound to a country or somehow geographically located somewhere?\n1. Describe the timeline of your chosen concept: any relevant history, its inception, any updates, is it still active?\n1. How can the scientific community benefit from this concept?\n1. Are there other concepts related to your chosen concept?\n1. What else can you tell? Spicy details, fun facts? \n\n### Present (4 minutes):\nWith your group, present what you learned in 4 minutes of which you reserve one minute for questions. "},{"_path":"/modules/softwarelandscape/exercise2","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Mapping the principles","description":"","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-mapping-the-principles"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Exercise:"}]},{"type":"text","value":" Mapping the principles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Choose one of the three examples of software below. They have been described with statements that can be mapped to the FAIR4RS Principles. With each statement in the software description, identify the principle(s) it maps to, and the (sub)facet(s) of the principle(s) it addresses. A single statement may map to multiple (sub)facets."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"FAIR for Research Software principles","src":"/modules/softwarelandscape/media/fair4rs_principles.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"software-1-comet"},"children":[{"type":"text","value":"Software 1: "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.1002/pmic.201200439","rel":["nofollow"]},"children":[{"type":"text","value":"Comet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.1002/pmic.201200439","rel":["nofollow"]},"children":[{"type":"text","value":"Comet"}]},{"type":"text","value":" is a command-line tool and desktop application for tandem mass spectrometry sequence database search6."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comet is licensed under the Apache 2.0 open source licence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comet is registered in the bio.tools catalogue of bioinformatics tools, where it has a globally unique and persistent identifier, and rich metadata that includes the identifier and is searchable and indexable."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The metadata in bio.tools is independent from the Comet repository, and will stay accessible should the software itself become inaccessible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The publicly accessible project repository on GitHub includes detailed information about the development of Comet."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The code includes dependencies to external software packages, such as Thermo Scientific’s MSFileReader library."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comet can be downloaded via the browser following the links provided in the metadata using https."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Comet uses standard data types from the proteomics domain for its input and output data that are documented in the metadata as functional annotations."}]}]},{"type":"element","tag":"h3","props":{"id":"software-2-puregome"},"children":[{"type":"text","value":"Software 2: "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.4337242","rel":["nofollow"]},"children":[{"type":"text","value":"PureGoMe"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.4337242","rel":["nofollow"]},"children":[{"type":"text","value":"PureGoMe"}]},{"type":"text","value":" is a project aimed at understanding Dutch public sentiment during the COVID-19 outbreak period by analysing real-time Twitter data. It provides a collection of Python scripts and Jupyter notebooks for this purpose."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PureGoMe can be downloaded from the project repository, while metadata is accessible independently from the registry."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PuReGoMe's GitHub repository has detailed records of the development history."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The code includes dependencies to other software, such as various Python libraries."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PuReGoMe has a (versioned) DOI from Zenodo."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PuReGoMe uses the Apache 2.0 open source licence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PuReGoMe uses standard file formats (e.g., CSV files) for data exchange."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PuReGoMe refers to other objects such as websites."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"PureGoMe is registered in the Research Software Directory that captures the most relevant metadata, including the identifier, in searchable and indexable form."}]}]},{"type":"element","tag":"h3","props":{"id":"software-3-gammashiny"},"children":[{"type":"text","value":"Software 3: "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.4139005","rel":["nofollow"]},"children":[{"type":"text","value":"gammaShiny"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.4139005","rel":["nofollow"]},"children":[{"type":"text","value":"gammaShiny"}]},{"type":"text","value":" is an application that provides enhanced graphical user interfaces for the R gamma package8. It is used to process in-situ gamma-ray spectrometry measurements for luminescence dating."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"gammaShiny has been deposited in the HAL French national archive and it has a persistent globally unique identifier, with the HAL identifier of the metadata record and a SWHID, identifying specifically the software artefact on the Software Heritage universal software source code archive."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Thanks to the HAL platform, where a licence is mandatory, gammaShiny is under a GNU General Public Licence v3.0."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The archived versions of gammaShiny’s source code in Software Heritage include a codemeta.json file, identifiable with a SWHID, where other metadata is available including dependencies named in CodeMeta (\"softwareRequirements\")."}]}]},{"type":"element","tag":"h3","props":{"id":"do-you-agree"},"children":[{"type":"text","value":"Do you agree?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The examples were taken from "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.1038/s41597-022-01710-x","rel":["nofollow"]},"children":[{"type":"text","value":"this paper"}]},{"type":"text","value":".\nIn the Results section of the paper you will find the authors' analysis of the software, which contains the statements above, mapped to the FAIR4RS Principles."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Do you agree with their assessment?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-mapping-the-principles","depth":2,"text":"Exercise: Mapping the principles","children":[{"id":"software-1-comet","depth":3,"text":"Software 1: Comet"},{"id":"software-2-puregome","depth":3,"text":"Software 2: PureGoMe"},{"id":"software-3-gammashiny","depth":3,"text":"Software 3: gammaShiny"},{"id":"do-you-agree","depth":3,"text":"Do you agree?"}]}]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:exercise2.md","_source":"local_fs","_file":"modules/softwarelandscape/exercise2.md","_stem":"modules/softwarelandscape/exercise2","_extension":"md","plainText":"---\ntitle: Mapping the principles\ntype: exercise\norder: 3\n---\n\n## **Exercise:** Mapping the principles\n\nChoose one of the three examples of software below. They have been described with statements that can be mapped to the FAIR4RS Principles. With each statement in the software description, identify the principle(s) it maps to, and the (sub)facet(s) of the principle(s) it addresses. A single statement may map to multiple (sub)facets.\n\n![FAIR for Research Software principles](media/fair4rs_principles.png)\n\n\n### Software 1: [Comet](https://doi.org/10.1002/pmic.201200439)\n\n[Comet](https://doi.org/10.1002/pmic.201200439) is a command-line tool and desktop application for tandem mass spectrometry sequence database search6.\n\n- Comet is licensed under the Apache 2.0 open source licence.\n- Comet is registered in the bio.tools catalogue of bioinformatics tools, where it has a globally unique and persistent identifier, and rich metadata that includes the identifier and is searchable and indexable.\n- The metadata in bio.tools is independent from the Comet repository, and will stay accessible should the software itself become inaccessible.\n- The publicly accessible project repository on GitHub includes detailed information about the development of Comet.\n- The code includes dependencies to external software packages, such as Thermo Scientific’s MSFileReader library.\n- Comet can be downloaded via the browser following the links provided in the metadata using https.\n- Comet uses standard data types from the proteomics domain for its input and output data that are documented in the metadata as functional annotations.\n\n### Software 2: [PureGoMe](https://doi.org/10.5281/zenodo.4337242)\n\n[PureGoMe](https://doi.org/10.5281/zenodo.4337242) is a project aimed at understanding Dutch public sentiment during the COVID-19 outbreak period by analysing real-time Twitter data. It provides a collection of Python scripts and Jupyter notebooks for this purpose.\n\n- PureGoMe can be downloaded from the project repository, while metadata is accessible independently from the registry.\n- PuReGoMe's GitHub repository has detailed records of the development history.\n- The code includes dependencies to other software, such as various Python libraries.\n- PuReGoMe has a (versioned) DOI from Zenodo.\n- PuReGoMe uses the Apache 2.0 open source licence.\n- PuReGoMe uses standard file formats (e.g., CSV files) for data exchange.\n- PuReGoMe refers to other objects such as websites.\n- PureGoMe is registered in the Research Software Directory that captures the most relevant metadata, including the identifier, in searchable and indexable form.\n\n### Software 3: [gammaShiny](https://doi.org/10.5281/zenodo.4139005)\n\n[gammaShiny](https://doi.org/10.5281/zenodo.4139005) is an application that provides enhanced graphical user interfaces for the R gamma package8. It is used to process in-situ gamma-ray spectrometry measurements for luminescence dating.\n\n- gammaShiny has been deposited in the HAL French national archive and it has a persistent globally unique identifier, with the HAL identifier of the metadata record and a SWHID, identifying specifically the software artefact on the Software Heritage universal software source code archive.\n- Thanks to the HAL platform, where a licence is mandatory, gammaShiny is under a GNU General Public Licence v3.0.\n- The archived versions of gammaShiny’s source code in Software Heritage include a codemeta.json file, identifiable with a SWHID, where other metadata is available including dependencies named in CodeMeta (\"softwareRequirements\").\n\n### Do you agree?\n\nThe examples were taken from [this paper](https://doi.org/10.1038/s41597-022-01710-x).\nIn the Results section of the paper you will find the authors' analysis of the software, which contains the statements above, mapped to the FAIR4RS Principles.\n\nDo you agree with their assessment?"},{"_path":"/modules/softwarelandscape/exercise3","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Role playing","description":"","type":"exercise","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-role-playing-exercise-15-minutes"},"children":[{"type":"text","value":"Exercise: Role playing exercise (15 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pick a piece of software you know of or pick one from the following examples:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"One person (the researcher) takes some time to prepare to present a piece of software, while the other person reads up on the "},{"type":"element","tag":"a","props":{"href":"reading"},"children":[{"type":"text","value":"reading materials"}]},{"type":"text","value":" from this module."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then you play out one of the following two situations:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A researcher comes to a supporter with their piece of software and asks for support on managing it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A research supporter approaches a researcher who is, according to the organization's records, a contributer to the software."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Things for "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"the researcher"}]},{"type":"text","value":" to be aware of and prepare before the conversation starts:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is the software about? Describe its purpose."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who will use it?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is the expected lifecycle of the software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What potential users or applications are untapped?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Things for "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"the research supporter"}]},{"type":"text","value":" to ask about and be able to give support on:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Which FAIR principles are addressed?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How can the software be made more FAIR?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is the software FOSS (Free and Open Source)?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Is there an organization or person responsible for maintainance?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What would be the next step (low-hanging fruit)?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Together:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Define the next steps for the software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Goals:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Frame an assessment positively: always start with assessing the things that have been done that contribute to good management and FAIR software. This is crucial, as well as motivating."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-role-playing-exercise-15-minutes","depth":2,"text":"Exercise: Role playing exercise (15 minutes)"}]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:exercise3.md","_source":"local_fs","_file":"modules/softwarelandscape/exercise3.md","_stem":"modules/softwarelandscape/exercise3","_extension":"md","plainText":"---\ntitle: Role playing\ntype: exercise\norder: 4\n---\n\n## Exercise: Role playing exercise (15 minutes)\nPick a piece of software you know of or pick one from the following examples:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\n\nOne person (the researcher) takes some time to prepare to present a piece of software, while the other person reads up on the [reading materials](reading.md) from this module. \n\nThen you play out one of the following two situations:\n\n1. A researcher comes to a supporter with their piece of software and asks for support on managing it.\n2. A research supporter approaches a researcher who is, according to the organization's records, a contributer to the software.\n\nThings for **the researcher** to be aware of and prepare before the conversation starts:\n\n- What is the software about? Describe its purpose.\n- Who will use it? \n- What is the expected lifecycle of the software?\n- What potential users or applications are untapped?\n\nThings for **the research supporter** to ask about and be able to give support on:\n\n- Which FAIR principles are addressed?\n- How can the software be made more FAIR?\n- Is the software FOSS (Free and Open Source)?\n- Is there an organization or person responsible for maintainance?\n- What would be the next step (low-hanging fruit)?\n\nTogether:\n\n- Define the next steps for the software\n\n\nGoals:\n\n- Frame an assessment positively: always start with assessing the things that have been done that contribute to good management and FAIR software. This is crucial, as well as motivating."},{"_path":"/modules/softwarelandscape","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software in the Scientific Landscape","description":"Photo by Kalen Emsley on Unsplash","category":"Getting Started","order":13,"abstract":"What role does software play in the scientific landscape?","author":"eScience Center","thumbnail":"thumbnail-landscape.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@kalenemsley?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Kalen Emsley"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/green-mountain-across-body-of-water-Bkci_8qcdvQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:index.md","_source":"local_fs","_file":"modules/softwarelandscape/index.md","_stem":"modules/softwarelandscape/index","_extension":"md","plainText":"---\ntitle: Software in the Scientific Landscape\ncategory: Getting Started\norder: 13\nabstract: What role does software play in the scientific landscape? \nauthor: eScience Center\nthumbnail: \"thumbnail-landscape.jpg\"\nvisibility: visible\n---\n\nPhoto by <a href=\"https://unsplash.com/@kalenemsley?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Kalen Emsley</a> on <a href=\"https://unsplash.com/photos/green-mountain-across-body-of-water-Bkci_8qcdvQ?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  \n"},{"_path":"/modules/softwarelandscape/info","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why do researchers write software themselves?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What problems arise because of this?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What initiatives exist to tackle these issues?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:info.md","_source":"local_fs","_file":"modules/softwarelandscape/info.md","_stem":"modules/softwarelandscape/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- Why do researchers write software themselves?\n- What problems arise because of this?\n- What initiatives exist to tackle these issues?\n"},{"_path":"/modules/softwarelandscape/reading","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"reading-material"},"children":[{"type":"text","value":"Reading material"}]},{"type":"element","tag":"h2","props":{"id":"fair-software"},"children":[{"type":"text","value":"FAIR software"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Follow the links below to read about other resources related to the FAIR principles for research software."}]},{"type":"element","tag":"h3","props":{"id":"fair-principles-15-minutes"},"children":[{"type":"text","value":"FAIR principles (15 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The FAIR principles were originally introduced in "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.1038/sdata.2016.18","rel":["nofollow"]},"children":[{"type":"text","value":"this paper by Wilkinson et al."}]},{"type":"text","value":".\nThis paper is a good starting point to learn more about FAIR, but if you are already familiar with the concept, a quick skim of the paper should do.\nThe most important take-away from this particular paper is the point that FAIR, while originally a data-specific concept, was designed with other digital objects in mind as well."}]},{"type":"element","tag":"h3","props":{"id":"fair-software-10-minutes"},"children":[{"type":"text","value":"FAIR software (10 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To extend the FAIR principles to software, the "},{"type":"element","tag":"a","props":{"href":"https://force11.org/groups/fair-4-research-software-fair4rs-working-group/","rel":["nofollow"]},"children":[{"type":"text","value":"FAIR 4 Research Software working group"}]},{"type":"text","value":" was formed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The FAIR4RS Principles were "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.15497/RDA00068","rel":["nofollow"]},"children":[{"type":"text","value":"released in 2022"}]},{"type":"text","value":", and since then there have been many efforts for adopting them."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Their paper "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.1038/s41597-022-01710-x","rel":["nofollow"]},"children":[{"type":"text","value":"Introducing the FAIR principles for research software"}]},{"type":"text","value":" describes in more practical terms how FAIR can be applied to software."}]},{"type":"element","tag":"h3","props":{"id":"fair-software-20-minutes-optional"},"children":[{"type":"text","value":"FAIR software (20 minutes, optional)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"While the intepretation of the FAIR4RS working group has been the dominant set of principles since its publication, it was not the first attempt to apply FAIR to software.\n"},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.3233/ds-190026","rel":["nofollow"]},"children":[{"type":"text","value":"This paper by Anna Lena Lamprecht et al."}]},{"type":"text","value":" was published a few years earlier, and also described an extension of the FAIR principles for software.\nThe paper is a more elaborate in its descriptions of software, the different aspects of software, and how they are or are not addressed by FAIR.\nIt is a good read if you want to get a deeper understanding of software and its relation to the FAIR principles."}]},{"type":"element","tag":"h3","props":{"id":"fair-research-software-principles-adoption"},"children":[{"type":"text","value":"FAIR Research Software Principles adoption"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The blog post "},{"type":"element","tag":"a","props":{"href":"https://www.researchsoft.org/blog/2024-03/","rel":["nofollow"]},"children":[{"type":"text","value":"The FAIR for Research Software Principles after two years: an adoption update"}]},{"type":"text","value":" contains a summary of these efforts."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"fair-software","depth":2,"text":"FAIR software","children":[{"id":"fair-principles-15-minutes","depth":3,"text":"FAIR principles (15 minutes)"},{"id":"fair-software-10-minutes","depth":3,"text":"FAIR software (10 minutes)"},{"id":"fair-software-20-minutes-optional","depth":3,"text":"FAIR software (20 minutes, optional)"},{"id":"fair-research-software-principles-adoption","depth":3,"text":"FAIR Research Software Principles adoption"}]}]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:reading.md","_source":"local_fs","_file":"modules/softwarelandscape/reading.md","_stem":"modules/softwarelandscape/reading","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 5\n---\n\n# Reading material\n\n## FAIR software\nFollow the links below to read about other resources related to the FAIR principles for research software.\n\n### FAIR principles (15 minutes)\n\nThe FAIR principles were originally introduced in [this paper by Wilkinson et al.](https://doi.org/10.1038/sdata.2016.18).\nThis paper is a good starting point to learn more about FAIR, but if you are already familiar with the concept, a quick skim of the paper should do.\nThe most important take-away from this particular paper is the point that FAIR, while originally a data-specific concept, was designed with other digital objects in mind as well.\n\n### FAIR software (10 minutes)\n\nTo extend the FAIR principles to software, the [FAIR 4 Research Software working group](https://force11.org/groups/fair-4-research-software-fair4rs-working-group/) was formed.\n\nThe FAIR4RS Principles were [released in 2022](https://doi.org/10.15497/RDA00068), and since then there have been many efforts for adopting them.\n\nTheir paper [Introducing the FAIR principles for research software](https://doi.org/10.1038/s41597-022-01710-x) describes in more practical terms how FAIR can be applied to software.\n\n### FAIR software (20 minutes, optional)\n\nWhile the intepretation of the FAIR4RS working group has been the dominant set of principles since its publication, it was not the first attempt to apply FAIR to software.\n[This paper by Anna Lena Lamprecht et al.](https://doi.org/10.3233/ds-190026) was published a few years earlier, and also described an extension of the FAIR principles for software.\nThe paper is a more elaborate in its descriptions of software, the different aspects of software, and how they are or are not addressed by FAIR.\nIt is a good read if you want to get a deeper understanding of software and its relation to the FAIR principles.\n\n### FAIR Research Software Principles adoption\n\nThe blog post [The FAIR for Research Software Principles after two years: an adoption update](https://www.researchsoft.org/blog/2024-03/) contains a summary of these efforts."},{"_path":"/modules/softwarelandscape/slides","_dir":"softwarelandscape","_draft":false,"_partial":false,"_locale":"","title":"Software Landscape","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-in-the-research-landscape"},"children":[{"type":"text","value":"Software in the Research Landscape"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"why-do-researchers-write-software"},"children":[{"type":"text","value":"Why do researchers write software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Trends in research"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research depends on building on previous research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research increasingly depends on software/code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Researchers want/need control over their methods"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h3","props":{"id":"why-do-researchers-write-software-1"},"children":[{"type":"text","value":"Why do researchers write software?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Existing software is not ... enough"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Existing software is not "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"bleeding edge"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Existing software is often closed source"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Using closed-source software decreases flexibility"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Closed-source software hides the research method"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h3","props":{"id":"problems-in-research-software"},"children":[{"type":"text","value":"Problems in research software"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"So"}]},{"type":"text","value":" researchers often write software themselves"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"But"}]},{"type":"text","value":" researchers are not trained as software engineers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"And"}]},{"type":"text","value":" software is not (yet) regarded as valuable research output"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nFirst is a true statement.\nSecond statement describes a problem with code quality, sustainability and reproducibility\nThird statement uncovers a problem with attribution, funding, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h3","props":{"id":"this-results-in-problems-with"},"children":[{"type":"text","value":"This results in problems with:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software quality and sustainability"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility of research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Attribution for researchers writing code"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Funding for research software"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"current-landscape"},"children":[{"type":"text","value":"Current Landscape"}]},{"type":"element","tag":"img","props":{"src":"/modules/softwarelandscape/media/research-software-landscape-logos.svg"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nMany initiatives have been started to solve the problems that were mentioned."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research Software Engineers communities and networks"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Open Science"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"FAIR for Research Software"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.researchsoft.org/","rel":["nofollow"]},"children":[{"type":"text","value":"ReSA (Research Software Alliance)"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"RDA (Research Data Alliance)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"FORCE11 (SCholarly Communication)"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"FOSS (Free and Open Source Software)("},{"type":"element","tag":"a","props":{"href":"https://freeopensourcesoftware.org/","rel":["nofollow"]},"children":[{"type":"text","value":"https://freeopensourcesoftware.org/"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Heritage ("},{"type":"element","tag":"a","props":{"href":"https://www.softwareheritage.org/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.softwareheritage.org/"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research Software training"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Carpentries"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Code Refinery"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The Turing Way"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Management Plan working group (NWO, eScience Center)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-worldwide-rse-movement"},"children":[{"type":"text","value":"The worldwide RSE movement"}]},{"type":"element","tag":"img","props":{"src":"https://www.fz-juelich.de/en/rse/about/rse-worldwide/rse-worldwide-1-2.jpg/@@images/image/great"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.fz-juelich.de/en/rse/about/rse-worldwide","rel":["nofollow"]},"children":[{"type":"text","value":"The national associations around the world as at 2023. (image courtesy of Ian Cosden, US RSE Association)"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nRSE stands for Research Software Engineer. This is a person that writes or contributes to Research Software.\nThe community of RSE's is growing and many strive for recognition of the RSE trade and respecting software as scientific output."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The eScience Center published their role description of RSEs in general and a job profile specific to RSEs at the eScience Center."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"open-science"},"children":[{"type":"text","value":"Open Science"}]},{"type":"element","tag":"img","props":{"src":"/modules/softwarelandscape/media/unescoopenscience.png","width":"40%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://creativecommons.org/2021/12/02/unesco-recommendation-on-open-science-ratified/","rel":["nofollow"]},"children":[{"type":"text","value":"UNESCO Recommendation on Open Science, 2021"}]},{"type":"text","value":" (CC BY IGO 3.0)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nOpen Science encompasses many aspects of science.\nIt is a movement that aims to make science — which includes software — more open, transparent, and accessible.\nThis is supported by many organisations, including UNESCO. The Netherlands recently started its own program dedicated to open science called \"Regie Orgaan Open Science NL\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-fair-principles"},"children":[{"type":"text","value":"The FAIR principles"}]},{"type":"element","tag":"img","props":{"src":"/modules/softwarelandscape/media/fair.png","width":"60%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nThe FAIR principles standardize values that help openness, transparency, and accessibility."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"fair-for-data"},"children":[{"type":"text","value":"FAIR (for data)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"screenshot Wilkinson 2016","src":"/modules/softwarelandscape/media/fairwilkinson.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nFAIR principles were originally also with other digital objects in mind than just plain research data, though the actual description was very data-specific.\nThis has been extended meanwhile."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"fair-for-software"},"children":[{"type":"text","value":"FAIR (for software)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"FAIR for Research Software paper","src":"/modules/softwarelandscape/media/fair4rs_paper.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Contributing Organizations","src":"/modules/softwarelandscape/media/fair4rs_logos.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nIn 2022, the results of extensive community consultation were published in the FAIR for Research Software paper.\nThe working group behind this was a collaboration between the Research Software Alliance, the Research Data Alliance, and FORCE11."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"fair-for-software-1"},"children":[{"type":"text","value":"FAIR (for software)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"FAIR for Research Software principles","src":"/modules/softwarelandscape/media/fair4rs_principles.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThese are the interpretations given to the FAIR principles for software by the working group.\nIn many cases these are rephrased to better fit software, but in some cases they are also extended."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"training"},"children":[{"type":"text","value":"Training"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Research Software Training logo","src":"/modules/softwarelandscape/media/RStraining.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://researchsoftwaretraining.nl/","rel":["nofollow"]},"children":[{"type":"text","value":"https://researchsoftwaretraining.nl/"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThe dutch research software training network brings together all initiatives on training for research software and related topics. You may know of the Carpentries, and you might be following these materials because you know of the Netherlands eScience Center's training program, but there is much more!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"challenges-of-the-research-software-landscape"},"children":[{"type":"text","value":"Challenges of the Research Software Landscape"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Still developing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"As a result:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lots of uncertainty"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Few policies and job positions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Researchers might not be aware of the issue"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How can we activate the scientific community?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Discuss diversity of research support and the current state of the landscape (still developing, lots of uncertainty, non-existence of policies and actual positions)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Discuss reason why this is important and it should be on the agenda"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Discuss that they might not get any questions about this, because researchers are not aware. They don't know they should ask, or what to ask. This might change once NWO implements the software management plans as requirement for grant applications."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"practical-implications-for-your-work"},"children":[{"type":"text","value":"Practical implications for your work"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Educate yourself and your surroundings"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Familiarize yourself with your institute's software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reach out to researchers (in a friendly manner) if they do not come to you"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Inquire about software policies with management"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Be aware that researchers might not be too willing"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is an important part of research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Some problems arise due to the combination of:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the role of software in research"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"the nature of software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"how software is developed"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Many initiatives have started in the last decade to tackle these issues"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The landscape is still under heavy development"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"why-do-researchers-write-software","depth":3,"text":"Why do researchers write software?"},{"id":"why-do-researchers-write-software-1","depth":3,"text":"Why do researchers write software?"},{"id":"problems-in-research-software","depth":3,"text":"Problems in research software"},{"id":"this-results-in-problems-with","depth":3,"text":"This results in problems with:"},{"id":"current-landscape","depth":2,"text":"Current Landscape"},{"id":"the-worldwide-rse-movement","depth":2,"text":"The worldwide RSE movement"},{"id":"open-science","depth":2,"text":"Open Science"},{"id":"the-fair-principles","depth":2,"text":"The FAIR principles"},{"id":"fair-for-data","depth":2,"text":"FAIR (for data)"},{"id":"fair-for-software","depth":2,"text":"FAIR (for software)"},{"id":"fair-for-software-1","depth":2,"text":"FAIR (for software)"},{"id":"training","depth":2,"text":"Training"},{"id":"challenges-of-the-research-software-landscape","depth":2,"text":"Challenges of the Research Software Landscape"},{"id":"practical-implications-for-your-work","depth":2,"text":"Practical implications for your work"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:softwarelandscape:slides.md","_source":"local_fs","_file":"modules/softwarelandscape/slides.md","_stem":"modules/softwarelandscape/slides","_extension":"md","plainText":"---\ntitle: Software Landscape\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Software in the Research Landscape\n\n===\n\n\n<!-- .slide: data-state=\"standard\" -->\n### Why do researchers write software?\n**Trends in research**\n- Research depends on building on previous research\n- Research increasingly depends on software/code\n- Researchers want/need control over their methods\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n### Why do researchers write software?\n**Existing software is not ... enough**\n\n- Existing software is not *bleeding edge*\n- Existing software is often closed source\n- Using closed-source software decreases flexibility\n- Closed-source software hides the research method\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n### Problems in research software\n\n- **So** researchers often write software themselves \n- **But** researchers are not trained as software engineers\n- **And** software is not (yet) regarded as valuable research output\n\nNote:\nFirst is a true statement. \nSecond statement describes a problem with code quality, sustainability and reproducibility\nThird statement uncovers a problem with attribution, funding, etc.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n### This results in problems with:\n\n- Software quality and sustainability\n- Reproducibility of research\n- Attribution for researchers writing code\n- Funding for research software\n\n===\n\n<!-- .slide: data-state=\"standard black-overlay\" id=\"landscape\" data-background-image=\"media/landscape.jpg\" -->\n## Current Landscape\n\n<img src=\"media/research-software-landscape-logos.svg\" />\n\nnote:\nMany initiatives have been started to solve the problems that were mentioned. \n\n- Research Software Engineers communities and networks\n- Open Science \n- FAIR for Research Software \n  - [ReSA (Research Software Alliance)](https://www.researchsoft.org/)\n  - RDA (Research Data Alliance)\n  - FORCE11 (SCholarly Communication)\n\n- FOSS (Free and Open Source Software)(https://freeopensourcesoftware.org/)\n- Software Heritage (https://www.softwareheritage.org/)\n- Research Software training\n  - Carpentries \n  - Code Refinery\n  - The Turing Way\n\n- Software Management Plan working group (NWO, eScience Center)\n\n===\n\n\n<!-- .slide: data-state=\"standard center\" id=\"rse-world\" -->\n## The worldwide RSE movement\n\n<img src=\"https://www.fz-juelich.de/en/rse/about/rse-worldwide/rse-worldwide-1-2.jpg/@@images/image/great\" >\n\n<small>[The national associations around the world as at 2023. (image courtesy of Ian Cosden, US RSE Association)](https://www.fz-juelich.de/en/rse/about/rse-worldwide)</small>\n\nNote:\nRSE stands for Research Software Engineer. This is a person that writes or contributes to Research Software. \nThe community of RSE's is growing and many strive for recognition of the RSE trade and respecting software as scientific output. \n\nThe eScience Center published their role description of RSEs in general and a job profile specific to RSEs at the eScience Center. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n## Open Science\n\n<img src=\"media/unescoopenscience.png\" width=40%>\n\n<small>[UNESCO Recommendation on Open Science, 2021](https://creativecommons.org/2021/12/02/unesco-recommendation-on-open-science-ratified/) (CC BY IGO 3.0)</small>\n\nnote:\nOpen Science encompasses many aspects of science.\nIt is a movement that aims to make science — which includes software — more open, transparent, and accessible.\nThis is supported by many organisations, including UNESCO. The Netherlands recently started its own program dedicated to open science called \"Regie Orgaan Open Science NL\"\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n## The FAIR principles\n\n<img src=\"media/fair.png\" width=\"60%\">\n\nnote:\nThe FAIR principles standardize values that help openness, transparency, and accessibility.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## FAIR (for data)\n\n![screenshot Wilkinson 2016](media/fairwilkinson.png)\n\nnote:\nFAIR principles were originally also with other digital objects in mind than just plain research data, though the actual description was very data-specific.\nThis has been extended meanwhile.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## FAIR (for software)\n\n![FAIR for Research Software paper](media/fair4rs_paper.png)\n\n![Contributing Organizations](media/fair4rs_logos.png)\n\nnote:\nIn 2022, the results of extensive community consultation were published in the FAIR for Research Software paper.\nThe working group behind this was a collaboration between the Research Software Alliance, the Research Data Alliance, and FORCE11.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## FAIR (for software)\n\n![FAIR for Research Software principles](media/fair4rs_principles.png)\n\nNote:\nThese are the interpretations given to the FAIR principles for software by the working group.\nIn many cases these are rephrased to better fit software, but in some cases they are also extended.\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Training\n\n\n![Research Software Training logo](media/RStraining.png)\n\nhttps://researchsoftwaretraining.nl/\n\n\nNote:\nThe dutch research software training network brings together all initiatives on training for research software and related topics. You may know of the Carpentries, and you might be following these materials because you know of the Netherlands eScience Center's training program, but there is much more!\n\n===\n\n\n<!-- .slide: data-state=\"standard center\" -->\n## Challenges of the Research Software Landscape\n- Still developing\n- As a result:\n  - Lots of uncertainty\n  - Few policies and job positions\n  - Researchers might not be aware of the issue\n- How can we activate the scientific community?\n\nNote:\n- Discuss diversity of research support and the current state of the landscape (still developing, lots of uncertainty, non-existence of policies and actual positions)\n- Discuss reason why this is important and it should be on the agenda\n- Discuss that they might not get any questions about this, because researchers are not aware. They don't know they should ask, or what to ask. This might change once NWO implements the software management plans as requirement for grant applications.\n\n==\n\n<!-- .slide: data-state=\"standard center\" -->\n## Practical implications for your work\n\n- Educate yourself and your surroundings\n- Familiarize yourself with your institute's software\n- Reach out to researchers (in a friendly manner) if they do not come to you\n- Inquire about software policies with management\n- Be aware that researchers might not be too willing\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software is an important part of research\n- Some problems arise due to the combination of:\n  - the role of software in research\n  - the nature of software\n  - how software is developed\n- Many initiatives have started in the last decade to tackle these issues\n- The landscape is still under heavy development\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/softwaremanagementplans","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Management Plans","description":"thumbnail-smp","category":"Getting Started","order":21,"author":"eScience Center","abstract":"Writing a Software Management Plan will help you to think ahead about important steps in software management.","thumbnail":"thumbnail-smp.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/person-holding-pencil-near-laptop-computer-5fNmWej4tAA?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash","rel":["nofollow"]},"children":[{"type":"text","value":"thumbnail-smp"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@homajob?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Scott Graham"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/person-holding-pencil-near-laptop-computer-5fNmWej4tAA?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:index.md","_source":"local_fs","_file":"modules/softwaremanagementplans/index.md","_stem":"modules/softwaremanagementplans/index","_extension":"md","plainText":"---\ntitle: Software Management Plans\ncategory: Getting Started\norder: 21\nauthor: eScience Center\nabstract: Writing a Software Management Plan will help you to think ahead about important steps in software management.\nthumbnail: \"thumbnail-smp.jpg\"\nvisibility: visible\n---\n\n[thumbnail-smp](https://unsplash.com/photos/person-holding-pencil-near-laptop-computer-5fNmWej4tAA?utm_content=creditShareLink&utm_medium=referral&utm_source=unsplash)\n\nPhoto by <a href=\"https://unsplash.com/@homajob?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Scott Graham</a> on <a href=\"https://unsplash.com/photos/person-holding-pencil-near-laptop-computer-5fNmWej4tAA?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>"},{"_path":"/modules/softwaremanagementplans/info","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is a software management plan?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why are software management plans important for science?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Why is making a software management plan useful to researchers?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I identify what should be in a software management plan for a given piece of software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How do I guide a researcher through tailoring a software management plan to their software?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:info.md","_source":"local_fs","_file":"modules/softwaremanagementplans/info.md","_stem":"modules/softwaremanagementplans/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- What is a software management plan?\n- Why are software management plans important for science?\n- Why is making a software management plan useful to researchers?\n- How do I identify what should be in a software management plan for a given piece of software?\n- How do I guide a researcher through tailoring a software management plan to their software?\n"},{"_path":"/modules/softwaremanagementplans/practicalguide","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Practical Guide","description":"","type":"reading","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"practical-guide-to-software-management-plans-15-minutes"},"children":[{"type":"text","value":"Practical Guide to Software Management Plans (15 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Research software plays a crucial role in academic research and has become a key output of many research projects. A software management plan helps to implement best practices during software development and ensures that software is accessible and reusable in the short and longer term. It also contributes to the reproducibility of results and stimulates collaborative work on open-source software for research."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In practice, a software management plan helps:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assess whether developing new software is necessary"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Plan to make the research software reusable and sustainable"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Plan for necessary resources"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Allow for verification of work that went into implementation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the Practical Guide to Software Management plans, this is described in more detail:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zenodo.org/record/7589725","rel":["nofollow"]},"children":[{"type":"text","value":"A practical guide to software management plans"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After reading this guide, you should:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Be aware of different types of research software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understand different demands placed on these types of software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Know about various aspects of software management"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Be able to explain the importance of a software management plan for software sustainability."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"practical-guide-to-software-management-plans-15-minutes","depth":2,"text":"Practical Guide to Software Management Plans (15 minutes)"}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:practicalguide.md","_source":"local_fs","_file":"modules/softwaremanagementplans/practicalguide.md","_stem":"modules/softwaremanagementplans/practicalguide","_extension":"md","plainText":"---\ntitle: Practical Guide\ntype: reading\norder: 3\n---\n\n\n## Practical Guide to Software Management Plans (15 minutes)\n\nResearch software plays a crucial role in academic research and has become a key output of many research projects. A software management plan helps to implement best practices during software development and ensures that software is accessible and reusable in the short and longer term. It also contributes to the reproducibility of results and stimulates collaborative work on open-source software for research.\n\nIn practice, a software management plan helps:\n\n- Assess whether developing new software is necessary\n- Plan to make the research software reusable and sustainable\n- Plan for necessary resources\n- Allow for verification of work that went into implementation\n\nIn the Practical Guide to Software Management plans, this is described in more detail:\n\n[A practical guide to software management plans](https://zenodo.org/record/7589725)\n\nAfter reading this guide, you should:\n\n- Be aware of different types of research software\n- Understand different demands placed on these types of software\n- Know about various aspects of software management\n- Be able to explain the importance of a software management plan for software sustainability.\n"},{"_path":"/modules/softwaremanagementplans/reading","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Reading material","description":"","type":"reading","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"reading-material"},"children":[{"type":"text","value":"Reading material"}]},{"type":"element","tag":"h2","props":{"id":"software-management-plans"},"children":[{"type":"text","value":"Software Management Plans"}]},{"type":"element","tag":"h3","props":{"id":"zenodo"},"children":[{"type":"text","value":"Zenodo"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in Zenodo about "},{"type":"element","tag":"a","props":{"href":"https://zenodo.org/records/7589725","rel":["nofollow"]},"children":[{"type":"text","value":"Practical guide to Software Management Plans"}]}]},{"type":"element","tag":"h3","props":{"id":"software-sustainability-institute"},"children":[{"type":"text","value":"Software Sustainability Institute"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in SSI Resources Hub about "},{"type":"element","tag":"a","props":{"href":"https://www.software.ac.uk/guide/writing-and-using-software-management-plan","rel":["nofollow"]},"children":[{"type":"text","value":"Writing and using a software management plan"}]}]},{"type":"element","tag":"h2","props":{"id":"overview-of-practical-guides"},"children":[{"type":"text","value":"Overview of practical guides"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are various practical guides online to the different aspects of software management."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is an (incomplete) list:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/vcs.html","rel":["nofollow"]},"children":[{"type":"text","value":"Version control"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/testing/testing-guidance.html","rel":["nofollow"]},"children":[{"type":"text","value":"Testing"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/renv/renv-package.html","rel":["nofollow"]},"children":[{"type":"text","value":"Packaging"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://guide.esciencecenter.nl/#/best_practices/documentation","rel":["nofollow"]},"children":[{"type":"text","value":"Documentation"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deployment"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Developer"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/communication/citable/citable-cff.html#cm-citable-cff","rel":["nofollow"]},"children":[{"type":"text","value":"Citation"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-software.html","rel":["nofollow"]},"children":[{"type":"text","value":"Software licensing"}]},{"type":"text","value":" and "},{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-compatibility.html","rel":["nofollow"]},"children":[{"type":"text","value":"compatibility"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-management-plans","depth":2,"text":"Software Management Plans","children":[{"id":"zenodo","depth":3,"text":"Zenodo"},{"id":"software-sustainability-institute","depth":3,"text":"Software Sustainability Institute"}]},{"id":"overview-of-practical-guides","depth":2,"text":"Overview of practical guides"}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:reading.md","_source":"local_fs","_file":"modules/softwaremanagementplans/reading.md","_stem":"modules/softwaremanagementplans/reading","_extension":"md","plainText":"---\ntitle: Reading material\ntype: reading\norder: 6\n---\n\n# Reading material\n\n## Software Management Plans\n\n### Zenodo\nRead in Zenodo about [Practical guide to Software Management Plans](https://zenodo.org/records/7589725)\n\n### Software Sustainability Institute\nRead in SSI Resources Hub about [Writing and using a software management plan](https://www.software.ac.uk/guide/writing-and-using-software-management-plan)\n\n## Overview of practical guides\nThere are various practical guides online to the different aspects of software management.\n\nHere is an (incomplete) list:\n\n- [Version control](https://the-turing-way.netlify.app/reproducible-research/vcs.html)\n- [Testing](https://the-turing-way.netlify.app/reproducible-research/testing/testing-guidance.html)\n- [Packaging](https://the-turing-way.netlify.app/reproducible-research/renv/renv-package.html)\n- [Documentation](https://guide.esciencecenter.nl/#/best_practices/documentation)\n  - User\n  - Deployment\n  - Developer\n- [Citation](https://the-turing-way.netlify.app/communication/citable/citable-cff.html#cm-citable-cff)\n- [Software licensing](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-software.html) and [compatibility](https://the-turing-way.netlify.app/reproducible-research/licensing/licensing-compatibility.html)\n"},{"_path":"/modules/softwaremanagementplans/requirements","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"SMP requirements","description":"This section gives a brief explanation of each SMP requirement listed in the Practical Guide to Software Managament Plans. These represent different aspects of the software management for researchers to consider before (and while) embarking on a software related project\nNote that not each SMP actually needs to address every single requirement, as this depends on the \"level\" of the SMP in question. Please refer to the guide or our slides above for more information on SMP levels.","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"requirements-for-a-software-management-plan"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Requirements for a Software Management Plan"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This section gives a brief explanation of each SMP requirement listed in the "},{"type":"element","tag":"a","props":{"href":"https://zenodo.org/records/7589725","rel":["nofollow"]},"children":[{"type":"text","value":"Practical Guide to Software Managament Plans"}]},{"type":"text","value":". These represent different aspects of the software management for researchers to consider before (and while) embarking on a software related project\nNote that not each SMP actually needs to address every single requirement, as this depends on the \"level\" of the SMP in question. Please refer to the guide or "},{"type":"element","tag":"a","props":{"href":"#placeholder"},"children":[{"type":"text","value":"our slides"}]},{"type":"text","value":" above for more information on SMP levels."}]},{"type":"element","tag":"h2","props":{"id":"purpose"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Purpose"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The software's purpose is the most important aspect of the SMP."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It allows you to be clear about the problem it addresses, and who the software is aimed at, as well as set boundaries on its scope.\nAddressing the limitations of the software, as well as the advantages it will provide, help determine its scope.\nThis will help the developers focus on the specific needs of the software."}]},{"type":"element","tag":"h2","props":{"id":"engineering"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Engineering"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"is related to building the software"}]},{"type":"element","tag":"h4","props":{"id":"version-control"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Version Control"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"has a myriad of benefits: it allows keeping track of history and provenance, can support experimentation and collaboration, and is crucial for the identification of specific versions of the software."}]},{"type":"element","tag":"h4","props":{"id":"testing"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Testing"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"ensures that software continues to work as intended.\nThere are many different approaches to this: units of code can be tested in unit tests; entire workflows can be verified in integration tests; acceptance tests can be created to ensure specific requirements are met; regression testing can be done to ensure new changes do not break existing functionality; and so on.\nDeciding whether and if so what testing will be implemented is an important element of the SMP."}]},{"type":"element","tag":"h4","props":{"id":"packaging"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Packaging"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"is important for the distribution of software. The format in which the software will be distributed is an important decision that should be made early on."}]},{"type":"element","tag":"h4","props":{"id":"code-quality"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Code Quality"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"should be addressed: what standards will be adhered to, and how will they be measured and supported?\nThere are many tools that can help with this, and it is important to choose them early on to maintain consistent code quality throughout the project."}]},{"type":"element","tag":"h2","props":{"id":"documentation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Documentation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"is an important component of software, and should be tailored to different audiences."}]},{"type":"element","tag":"h4","props":{"id":"user-documentation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"User Documentation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"the software's function should be explained, and instructions on how to use it should be provided."}]},{"type":"element","tag":"h4","props":{"id":"developer-documentation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Developer Documentation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"instructions on how to modify the software, and how to contribute to the project should be provided."}]},{"type":"element","tag":"h4","props":{"id":"deployment-documentation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Deployment Documentation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"explains any system requirements (such as dependencies) for deploying the software, and installation and testing instructions."}]},{"type":"element","tag":"h2","props":{"id":"project-management"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Project Management"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"addresses various conditions for the software's long-term sustainability and re-use."}]},{"type":"element","tag":"h4","props":{"id":"license"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"License"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Any reusable software should have an appropriate license, which is an important early decision."}]},{"type":"element","tag":"h4","props":{"id":"maintenance"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Maintenance"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Who will maintain the software and for how long?\nHow actively will user concerns be addressed?\nHow much time will this take?\nHow and when will it be retired?"}]},{"type":"element","tag":"h4","props":{"id":"citation"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Citation"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How will you collect information about its use? What DOI will you use for this?"}]},{"type":"element","tag":"h4","props":{"id":"repository"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Repository"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"where will the software be deposited and how accessible will it be?\nUsers should be able to obtain a functional copy of the software."}]},{"type":"element","tag":"h4","props":{"id":"resources"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Resources"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What resources - human, infrastructure, financial - will be needed, and when?"}]},{"type":"element","tag":"h4","props":{"id":"risk-analysis"},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Risk Analysis"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Are there privacy or security concerns?\nIs there potential for vendor lock, or other considerations for future reliability and reuse?\nWhat are the consequences of software failure and how will these be mitigated?"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"purpose","depth":2,"text":"Purpose"},{"id":"engineering","depth":2,"text":"Engineering"},{"id":"documentation","depth":2,"text":"Documentation"},{"id":"project-management","depth":2,"text":"Project Management"}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:requirements.md","_source":"local_fs","_file":"modules/softwaremanagementplans/requirements.md","_stem":"modules/softwaremanagementplans/requirements","_extension":"md","plainText":"---\ntitle: SMP requirements\ntype: reading\norder: 2\n---\n\n# **Requirements for a Software Management Plan**\n\nThis section gives a brief explanation of each SMP requirement listed in the [Practical Guide to Software Managament Plans](https://zenodo.org/records/7589725). These represent different aspects of the software management for researchers to consider before (and while) embarking on a software related project\nNote that not each SMP actually needs to address every single requirement, as this depends on the \"level\" of the SMP in question. Please refer to the guide or [our slides](#placeholder) above for more information on SMP levels.\n\n\n## **Purpose**\nThe software's purpose is the most important aspect of the SMP.\n\nIt allows you to be clear about the problem it addresses, and who the software is aimed at, as well as set boundaries on its scope.\nAddressing the limitations of the software, as well as the advantages it will provide, help determine its scope.\nThis will help the developers focus on the specific needs of the software.\n\n\n\n## **Engineering**\nis related to building the software\n\n#### **Version Control**\nhas a myriad of benefits: it allows keeping track of history and provenance, can support experimentation and collaboration, and is crucial for the identification of specific versions of the software.\n\n#### **Testing**\nensures that software continues to work as intended.\nThere are many different approaches to this: units of code can be tested in unit tests; entire workflows can be verified in integration tests; acceptance tests can be created to ensure specific requirements are met; regression testing can be done to ensure new changes do not break existing functionality; and so on.\nDeciding whether and if so what testing will be implemented is an important element of the SMP.\n\n#### **Packaging**\nis important for the distribution of software. The format in which the software will be distributed is an important decision that should be made early on.\n\n#### **Code Quality**\nshould be addressed: what standards will be adhered to, and how will they be measured and supported?\nThere are many tools that can help with this, and it is important to choose them early on to maintain consistent code quality throughout the project.\n\n\n\n## **Documentation**\nis an important component of software, and should be tailored to different audiences.\n\n#### **User Documentation**\nthe software's function should be explained, and instructions on how to use it should be provided.\n\n#### **Developer Documentation**\ninstructions on how to modify the software, and how to contribute to the project should be provided.\n\n#### **Deployment Documentation**\nexplains any system requirements (such as dependencies) for deploying the software, and installation and testing instructions.\n\n\n\n## **Project Management**\naddresses various conditions for the software's long-term sustainability and re-use.\n\n#### **License**\nAny reusable software should have an appropriate license, which is an important early decision.\n\n#### **Maintenance**\nWho will maintain the software and for how long? \nHow actively will user concerns be addressed?\nHow much time will this take?\nHow and when will it be retired?\n\n#### **Citation**\nHow will you collect information about its use? What DOI will you use for this?\n\n#### **Repository**\nwhere will the software be deposited and how accessible will it be?\nUsers should be able to obtain a functional copy of the software.\n\n#### **Resources**\nWhat resources - human, infrastructure, financial - will be needed, and when?\n\n#### **Risk Analysis**\nAre there privacy or security concerns?\nIs there potential for vendor lock, or other considerations for future reliability and reuse?\nWhat are the consequences of software failure and how will these be mitigated?\n"},{"_path":"/modules/softwaremanagementplans/slides-smp","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Software Management Plans","description":"===","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"software-management-plans"},"children":[{"type":"text","value":"Software Management Plans"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"research-reproducibility"},"children":[{"type":"text","value":"Research reproducibility"}]},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/maintenance.png","width":"40%","title":"Software Needs Maintenance"},"children":[]},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Image by "},{"type":"element","tag":"a","props":{"href":"https://github.com/c-martinez"},"children":[{"type":"text","value":"Carlos Martinez-Ortiz"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What role does research software play in promoting reproducibility?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nReproducibility of research allows validation of its findings, and is therefore vital in building a solid foundation for scientific progress.\nWe can only truly build upon existing research if we can reproduce its results."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When software has been used in research, this has enormous potential to facilitate the research reproducibility.\nHowever, it also comes with its own particular challenges: software reproducibility is not always straightforward."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"software-reusability"},"children":[{"type":"text","value":"Software reusability"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility relies on re-using research software.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users need to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"find"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"access"}]},{"type":"text","value":", and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"use"}]},{"type":"text","value":" the software."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproduction may just be a first step towards diversifying a study.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Users need to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"understand"}]},{"type":"text","value":" the software."}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software reusability encompasses both "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"reproducing"}]},{"type":"text","value":" existing results obtained with RS, as well as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"building upon"}]},{"type":"text","value":" existing RS to use it in new or different ways."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software Management Plans help developers ensuring that their research software is reusable."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nAn additional feature of software, is that it may be a product on its own, and can be reused by others.\nThis is a great opportunity to build on our collective knowledge and tools, and to avoid reinventing the wheel."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ensuring that the software is findable, accessible, usable, and understandable is key to both reproducibility and reusability."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software needs to be understood both from a:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"functional perspective: what steps does the software take to get to the results"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"developmental perspective: how are these steps put into code"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"overview"},"children":[{"type":"text","value":"Overview"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software Management Plan: what and why?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Aspects of software management"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Different needs for different software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"SMP template examples"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThis presentation will introduce you to the concept of software management plans, as a first step towards better software stewardship and sustainability.\nWe will look at different aspects of good software managements, as well as different needs for different types of software.\nFinally, we will take a look at some concrete examples of software management plans."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h3","props":{"id":"software-management-plan-smp"},"children":[{"type":"text","value":"Software Management Plan (SMP)"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Building on the success of Data Management Plans (DMPs)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A document detailing how research software will be managed\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What does it do?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who is it for?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What resources does it need?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who is responsible?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"How long will it be available?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"..."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Can be part of a project proposal or generated in the early phases"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should be a \"living document\", to be updated as plans change"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nSoftware management plans (SMPs) are inspired by the earlier adopted data management plans.\nIn these documents, often created at or before the start of a project, plans and explicit decisions are made about various aspects around the management of these digital objects.\nThey are increasingly required by funders and institutions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In an SMP it is explicitly stated what the software aims to do, who its target audience is, and what resources it is expected to need.\nIt also addresses the intended lifespan, and allocates responsibility: who makes releases? Who maintains the software at the end of the project, and if so for how long?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"an-smp-helps"},"children":[{"type":"text","value":"An SMP helps ..."}]},{"type":"element","tag":"div","props":{"style":"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center;"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/purpose.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... thinking about"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"purpose & necessity"}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/resources.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... planning"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"resource management"}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/problems_later.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... avoiding"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"problems later"}]},{"type":"text","value":"\n  "}]}]},{"type":"element","tag":"div","props":{"style":"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center; margin-top: 60px; margin-bottom: 60px;"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/structure.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... structuring"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"development"}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/explicit.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... making technical"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"choices explicit"}]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n  "},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/benefits/alive.png","style":"height: 100px;"},"children":[]},{"type":"text","value":"\n    "},{"type":"element","tag":"sub","props":{},"children":[{"type":"text","value":"... keeping research"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"software alive"}]},{"type":"text","value":"\n  "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":"Images generated by OpenAI's DALL·E 3 model via ChatGPT v2 and subsequently adapted by "},{"type":"element","tag":"a","props":{"href":"https://github.com/DaniBodor"},"children":[{"type":"text","value":"Dani Bodor"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With an SMP, you make explicit plans and decisions in an early stage.\nThe SMP provides the team with structured, relevant questions early on, with the aim to maximize the accessibility, reusability, and impact of the software in question.\nThis supports good software management practices, and it makes sure they are known to the researchers involved."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"More specifically, in an SMP you:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Make explicit technical choices. For example, what programming language will be used? What operating system will be supported?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Plan for necessary resources; be they financial, human, infrastructure or other."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assess whether new software is really needed; explore whether existing software can be reused, and to what extent;"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These are issues that arise during software development anyway, but all too often are not explicitly dealt with.\nBy tackling them early, a conscious decision can be made rather than needing to deal with consequences of implicit choices.\nResource planning moreover is vital for the sustainability of the software.\nFinally, the SMP will allow later verification of plans in a publicly funded project."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"an-smp-is-not"},"children":[{"type":"text","value":"An SMP is not ..."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"an additional bureaucratic hoop for researchers to jump through."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Make sure you represent it as a tool allowing researchers to get the most out of their effort."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is a common trap to present such documents to researchers and \"force\" them\nto fill them in without too much context. This is then often perceived as a\nbureaucratic burden that is not done with a lot of care or attention."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead, we recommend presenting SMPs as an agent allowing researchers to\nminimize their efforts, by making considerations early in the process and\nworking towards their goals, rather than having to make the call in the moment,\nwhen there may be other priorities/deadlines (publication, grant application,\n...)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"center","props":{},"children":[{"type":"element","tag":"img","props":{"src":"media/smpguide.png","width":"50%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.7038280","rel":["nofollow"]},"children":[{"type":"text","value":"doi:10.5281/zenodo.7038280"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nTo get started on creating a Software Management Plan, this practical guide has been created by NWO and the Netherlands eScience Center.\nIts first version was released in August of 2022, but it has since been, and will continue to be, updated.\nAll past versions and the latest release are available on Zenodo via this DOI."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"center","props":{},"children":[{"type":"element","tag":"img","props":{"src":"media/groupedrequirements.png","width":"60%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn the practical guide, the core requirements for an SMP are listed, and grouped into four foci:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Purpose"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Engineering"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Documentation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Project Management."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"smp-templates"},"children":[{"type":"text","value":"SMP templates"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Should be provided by the institution"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Include guidance:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Instructions on how to fill it out"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Resources for information and support"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Institution-specific regulations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Institution-specific resources available"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Who to contact for clarification/further information"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Include an assessment rubric (e.g. with (un)acceptable answers)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nThe Software Management Plan template is a duty of the institution.\nA good SMP includes guidance on how to fill it out, including institution-specific regulations and resources."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An assessment rubric should accompany the template, indicating per question or focus what conditions need to be met, and which answers are (un)acceptable."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"not-all-software-is-equal"},"children":[{"type":"text","value":"Not all software is equal"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/modules/softwaremanagementplans/media/softwarespectrum2.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIt is important to realize when making an SMP, that research software comes in many shapes and sizes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An ad-hoc R script written by a PhD student to analyse data from a specific machine, is research software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It can also be a multinational collaboration to develop a tool that is used by thousands of researchers worldwide."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Different software has different needs, but there are common principles in managing them and ensuring their sustainability."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The diversity of research software does mean that not all requirements apply to every type of software.\nTo address this, we can subset the core requirements to create different SMP templates tailored to software with different management needs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The SMP Guide distinguishes software with low, medium, and high management needs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"exercise-how-important-is-it"},"children":[{"type":"text","value":"Exercise: How important is it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nWhile teaching, we will usually do this exercise using "},{"type":"element","tag":"a","props":{"href":"https://www.mentimeter.com/app/folder/2612404","rel":["nofollow"]},"children":[{"type":"text","value":"mentimeter"}]},{"type":"text","value":" (this link is only accessible using an eScience Center account). It is not necessary to go to the slides vertically below this one."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For self-studiers: see slides vertically below this one to see the exercise."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h4","props":{"id":"consider-the-following-list-of-software"},"children":[{"type":"text","value":"Consider the following list of software:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.nemo-ocean.eu/","rel":["nofollow"]},"children":[{"type":"text","value":"NEMO"}]},{"type":"text","value":", a state of the art modelling framework, used for research and forecasting in ocean and climate sciences."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://alphafold.com/","rel":["nofollow"]},"children":[{"type":"text","value":"AlphaFold"}]},{"type":"text","value":", an AI system developed by Google DeepMind that predicts a protein’s 3D structure from its amino acid sequence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A Jupyter notebook to get the average length of everyone in this classroom."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A software package you yourself have been involved in, if any."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.facebook.com/","rel":["nofollow"]},"children":[{"type":"text","value":"Facebook"}]},{"type":"text","value":", a social media platform connecting people globally."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go to next slide"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We recommend scrolling up and down between this and previous slide to do the exercise."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h4","props":{"id":"how-important-are-the-different-requirements-for-each"},"children":[{"type":"text","value":"How important are the different requirements for each?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Randomly choose 5 SMP requirements for each software from the previous slide"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rate on a scale of 1-5 how important those aspects are to include in the SMP.\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"It is not necessary to look them up, make an estimation from stated information."}]}]}]}]},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/groupedrequirements.png","width":"30%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We recommend scrolling up and down between this and previous slide to do the exercise."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"making-the-call"},"children":[{"type":"text","value":"Making the call"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Not all SMPs need to encompass every single requirement, this will generally depend on:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Purpose"}]},{"type":"text","value":": what is the reason or expected end-use for the software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reliability"}]},{"type":"text","value":": what is the effect of software failure and/or non-maintenance?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Maintenance"}]},{"type":"text","value":": what is the long-term effort needed to maintain the software?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DCCs or organizations need to decide how it is determined which requirements to include and who is responsible for the decision."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"example-1-templates-per-management-level"},"children":[{"type":"text","value":"Example 1: Templates per \"management level\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DCCs create a few SMP templates based on the management level of software\n"},{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" (example from SMP guide, we recommend making a variation of this theme)"}]}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: left"},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"ul","props":{},"children":[{"type":"text","value":"\n    "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Management level"}]},{"type":"text","value":":\n    "},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Low"}]},{"type":"text","value":": single purpose/single user script with limited functionality"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Medium"}]},{"type":"text","value":": primary research output with unique functionality may be reused"}]},{"type":"text","value":"\n    "},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"High"}]},{"type":"text","value":": mission critical software in continuous use, failure of which would threaten research line"}]},{"type":"text","value":"\n  "}]}]},{"type":"element","tag":"div","props":{"style":"width: 50%; float: right"},"children":[{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/threelevels.png","width":"70%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nIn practice, we recommend creating more groups and/or redefining which requirements belong to each category (in the current form most software will fall in between Low and Medium)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"=="}]},{"type":"element","tag":"h2","props":{"id":"example-2-guidelines-per-requirement"},"children":[{"type":"text","value":"Example 2: Guidelines per requirement"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DCCs provide a guidelines for each requirement in which cases it should or should not be included in the SMP"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Purpose"}]},{"type":"text","value":": Always include."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"User Documentation"}]},{"type":"text","value":": If you want or expect users other than your direct colleagues to interact with the software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Citation"}]},{"type":"text","value":": If you would like the software to be citable independently of e.g. research paper."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Risk analysis"}]},{"type":"text","value":": For mission critical software or software that needs to run 24/7."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software is found in all stages of the research cycle"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research software comes in many shapes and sizes"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software stewardship starts with a good plan"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Good software management leads to better science"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Institutes should provide one or more SMP templates or guidelines"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:\nSoftware is found in all stages of the research cycle, and is used for many different purposes.\nIt comes in many shapes and sizes, and has different needs.\nSoftware stewardship starts with a good plan, and is an important scientific step: good software management leads to better science."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"020 - 460 47 70"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"research-reproducibility","depth":2,"text":"Research reproducibility"},{"id":"software-reusability","depth":2,"text":"Software reusability"},{"id":"overview","depth":2,"text":"Overview","children":[{"id":"software-management-plan-smp","depth":3,"text":"Software Management Plan (SMP)"}]},{"id":"an-smp-helps","depth":2,"text":"An SMP helps ..."},{"id":"an-smp-is-not","depth":2,"text":"An SMP is not ..."},{"id":"smp-templates","depth":2,"text":"SMP templates"},{"id":"not-all-software-is-equal","depth":2,"text":"Not all software is equal"},{"id":"exercise-how-important-is-it","depth":2,"text":"Exercise: How important is it?"},{"id":"making-the-call","depth":2,"text":"Making the call"},{"id":"example-1-templates-per-management-level","depth":2,"text":"Example 1: Templates per \"management level\""},{"id":"example-2-guidelines-per-requirement","depth":2,"text":"Example 2: Guidelines per requirement"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:slides-smp.md","_source":"local_fs","_file":"modules/softwaremanagementplans/slides-smp.md","_stem":"modules/softwaremanagementplans/slides-smp","_extension":"md","plainText":"---\ntitle: Software Management Plans\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n# Software Management Plans\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Research reproducibility\n\n<img src=\"media/maintenance.png\" width=\"40%\" title=\"Software Needs Maintenance\">\n<small>Image by <a href=\"https://github.com/c-martinez\">Carlos Martinez-Ortiz</a></small>\n\nWhat role does research software play in promoting reproducibility?\n\nNote:\nReproducibility of research allows validation of its findings, and is therefore vital in building a solid foundation for scientific progress.\nWe can only truly build upon existing research if we can reproduce its results.\n\nWhen software has been used in research, this has enormous potential to facilitate the research reproducibility.\nHowever, it also comes with its own particular challenges: software reproducibility is not always straightforward.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Software reusability\n\n- Reproducibility relies on re-using research software.\n  - Users need to **find**, **access**, and **use** the software.\n- Reproduction may just be a first step towards diversifying a study.\n  - Users need to **understand** the software.\n\nSoftware reusability encompasses both **reproducing** existing results obtained with RS, as well as **building upon** existing RS to use it in new or different ways.\n\nSoftware Management Plans help developers ensuring that their research software is reusable.\n\n\nNote:\nAn additional feature of software, is that it may be a product on its own, and can be reused by others.\nThis is a great opportunity to build on our collective knowledge and tools, and to avoid reinventing the wheel.\n\nEnsuring that the software is findable, accessible, usable, and understandable is key to both reproducibility and reusability.\n\nSoftware needs to be understood both from a:\n- functional perspective: what steps does the software take to get to the results\n- developmental perspective: how are these steps put into code\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Overview\n\n- Software Management Plan: what and why?\n- Aspects of software management\n- Different needs for different software\n- SMP template examples\n\nNote:\nThis presentation will introduce you to the concept of software management plans, as a first step towards better software stewardship and sustainability.\nWe will look at different aspects of good software managements, as well as different needs for different types of software.\nFinally, we will take a look at some concrete examples of software management plans.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n### Software Management Plan (SMP)\n\n- Building on the success of Data Management Plans (DMPs)\n- A document detailing how research software will be managed\n  - What does it do?\n  - Who is it for?\n  - What resources does it need?\n  - Who is responsible?\n  - How long will it be available?\n  - ...\n- Can be part of a project proposal or generated in the early phases\n- Should be a \"living document\", to be updated as plans change\n\n\nNote:\nSoftware management plans (SMPs) are inspired by the earlier adopted data management plans.\nIn these documents, often created at or before the start of a project, plans and explicit decisions are made about various aspects around the management of these digital objects.\nThey are increasingly required by funders and institutions.\n\nIn an SMP it is explicitly stated what the software aims to do, who its target audience is, and what resources it is expected to need.\nIt also addresses the intended lifespan, and allocates responsibility: who makes releases? Who maintains the software at the end of the project, and if so for how long?\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## An SMP helps ...\n\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center;\">\n  <div>\n    <img src=\"media/benefits/purpose.png\" style=\"height: 100px;\">\n    <sub>... thinking about<br>purpose & necessity</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/resources.png\" style=\"height: 100px;\">\n    <sub>... planning<br>resource management</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/problems_later.png\" style=\"height: 100px;\">\n    <sub>... avoiding<br>problems later</sub>\n  </div>\n</div>\n\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; text-align: center; margin-top: 60px; margin-bottom: 60px;\">\n  <div>\n    <img src=\"media/benefits/structure.png\" style=\"height: 100px;\">\n    <sub>... structuring<br>development</sub>\n  </div>\n  <div>\n    <img src=\"./media/benefits/explicit.png\" style=\"height: 100px;\">\n    <sub>... making technical<br>choices explicit</sub>\n  </div>\n  <div>\n    <img src=\"media/benefits/alive.png\" style=\"height: 100px;\">\n    <sub>... keeping research<br>software alive</sub>\n  </div>\n</div>\n\n<small>Images generated by OpenAI's DALL·E 3 model via ChatGPT v2 and subsequently adapted by <a href=\"https://github.com/DaniBodor\">Dani Bodor</a>.</small>\n\nNote:\n\nWith an SMP, you make explicit plans and decisions in an early stage.\nThe SMP provides the team with structured, relevant questions early on, with the aim to maximize the accessibility, reusability, and impact of the software in question.\nThis supports good software management practices, and it makes sure they are known to the researchers involved.\n\nMore specifically, in an SMP you:\n\n- Make explicit technical choices. For example, what programming language will be used? What operating system will be supported?\n- Plan for necessary resources; be they financial, human, infrastructure or other.\n- Assess whether new software is really needed; explore whether existing software can be reused, and to what extent;\n\nThese are issues that arise during software development anyway, but all too often are not explicitly dealt with.\nBy tackling them early, a conscious decision can be made rather than needing to deal with consequences of implicit choices.\nResource planning moreover is vital for the sustainability of the software.\nFinally, the SMP will allow later verification of plans in a publicly funded project.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## An SMP is not ...\n\nan additional bureaucratic hoop for researchers to jump through.\n\nMake sure you represent it as a tool allowing researchers to get the most out of their effort.  \n\nNote:\n\nIt is a common trap to present such documents to researchers and \"force\" them\nto fill them in without too much context. This is then often perceived as a\nbureaucratic burden that is not done with a lot of care or attention. \n\nInstead, we recommend presenting SMPs as an agent allowing researchers to\nminimize their efforts, by making considerations early in the process and\nworking towards their goals, rather than having to make the call in the moment,\nwhen there may be other priorities/deadlines (publication, grant application,\n...)\n\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<center>\n<img src=\"media/smpguide.png\" width=\"50%\" />\n\n[doi:10.5281/zenodo.7038280](https://doi.org/10.5281/zenodo.7038280)\n\n</center>\n\nNote:\nTo get started on creating a Software Management Plan, this practical guide has been created by NWO and the Netherlands eScience Center.\nIts first version was released in August of 2022, but it has since been, and will continue to be, updated.\nAll past versions and the latest release are available on Zenodo via this DOI.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n<center>\n<img src=\"media/groupedrequirements.png\" width=\"60%\" />\n</center>\n\nNote:\nIn the practical guide, the core requirements for an SMP are listed, and grouped into four foci:\n- Purpose\n- Engineering\n- Documentation\n- Project Management.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## SMP templates\n\n- Should be provided by the institution\n- Include guidance:\n  - Instructions on how to fill it out\n  - Resources for information and support\n  - Institution-specific regulations\n  - Institution-specific resources available\n  - Who to contact for clarification/further information\n- Include an assessment rubric (e.g. with (un)acceptable answers)\n\nNote:\nThe Software Management Plan template is a duty of the institution.\nA good SMP includes guidance on how to fill it out, including institution-specific regulations and resources.\n\nAn assessment rubric should accompany the template, indicating per question or focus what conditions need to be met, and which answers are (un)acceptable.\n\n===\n\n## Not all software is equal\n\n![](media/softwarespectrum2.png)\n\nNote:\nIt is important to realize when making an SMP, that research software comes in many shapes and sizes.\n\nAn ad-hoc R script written by a PhD student to analyse data from a specific machine, is research software.\n\nIt can also be a multinational collaboration to develop a tool that is used by thousands of researchers worldwide.\n\nDifferent software has different needs, but there are common principles in managing them and ensuring their sustainability.\n\nThe diversity of research software does mean that not all requirements apply to every type of software.\nTo address this, we can subset the core requirements to create different SMP templates tailored to software with different management needs.\n\nThe SMP Guide distinguishes software with low, medium, and high management needs.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Exercise: How important is it?\n\nNote:\nWhile teaching, we will usually do this exercise using [mentimeter](https://www.mentimeter.com/app/folder/2612404) (this link is only accessible using an eScience Center account). It is not necessary to go to the slides vertically below this one.\n\nFor self-studiers: see slides vertically below this one to see the exercise.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n#### Consider the following list of software:\n\n- [NEMO](https://www.nemo-ocean.eu/), a state of the art modelling framework, used for research and forecasting in ocean and climate sciences.\n- [AlphaFold](https://alphafold.com/), an AI system developed by Google DeepMind that predicts a protein’s 3D structure from its amino acid sequence.\n- A Jupyter notebook to get the average length of everyone in this classroom.\n- A software package you yourself have been involved in, if any.\n- [Facebook](https://www.facebook.com/), a social media platform connecting people globally.\n\nGo to next slide\n\nNote:\n\nWe recommend scrolling up and down between this and previous slide to do the exercise.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n#### How important are the different requirements for each?\n\n- Randomly choose 5 SMP requirements for each software from the previous slide\n- Rate on a scale of 1-5 how important those aspects are to include in the SMP.\n    - It is not necessary to look them up, make an estimation from stated information.\n\n<img src=\"media/groupedrequirements.png\" width=\"30%\" />\n\nNote:\n\nWe recommend scrolling up and down between this and previous slide to do the exercise.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Making the call\n\nNot all SMPs need to encompass every single requirement, this will generally depend on:\n  - **Purpose**: what is the reason or expected end-use for the software?\n  - **Reliability**: what is the effect of software failure and/or non-maintenance?\n  - **Maintenance**: what is the long-term effort needed to maintain the software?\n\nDCCs or organizations need to decide how it is determined which requirements to include and who is responsible for the decision.\n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Example 1: Templates per \"management level\"\n\nDCCs create a few SMP templates based on the management level of software\n<small> (example from SMP guide, we recommend making a variation of this theme)</small>\n\n<div style=\"width: 50%; float: left\">\n  <ul>\n    <strong>Management level</strong>:\n    <li><strong>Low</strong>: single purpose/single user script with limited functionality</li>\n    <li><strong>Medium</strong>: primary research output with unique functionality may be reused</li>\n    <li><strong>High</strong>: mission critical software in continuous use, failure of which would threaten research line</li>\n  </ul>\n</div>\n\n<div style=\"width: 50%; float: right\">\n<img src=\"media/threelevels.png\" width=\"70%\">\n</div>\n\nNote:\nIn practice, we recommend creating more groups and/or redefining which requirements belong to each category (in the current form most software will fall in between Low and Medium). \n\n==\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Example 2: Guidelines per requirement\n\nDCCs provide a guidelines for each requirement in which cases it should or should not be included in the SMP\n\nFor example:\n- **Purpose**: Always include.\n- **User Documentation**: If you want or expect users other than your direct colleagues to interact with the software.\n- **Citation**: If you would like the software to be citable independently of e.g. research paper.\n- **Risk analysis**: For mission critical software or software that needs to run 24/7.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n\n## Take home messages\n\n- Software is found in all stages of the research cycle\n- Research software comes in many shapes and sizes\n- Software stewardship starts with a good plan\n- Good software management leads to better science\n- Institutes should provide one or more SMP templates or guidelines\n\nNote:\nSoftware is found in all stages of the research cycle, and is used for many different purposes.\nIt comes in many shapes and sizes, and has different needs.\nSoftware stewardship starts with a good plan, and is an important scientific step: good software management leads to better science.\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n\n020 - 460 47 70\n"},{"_path":"/modules/softwaremanagementplans/smpvsfair","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"SMP vs FAIR","description":"","type":"exercise","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"smp-vs-fair"},"children":[{"type":"text","value":"SMP vs FAIR"}]},{"type":"element","tag":"h3","props":{"id":"why-do-we-care"},"children":[{"type":"text","value":"Why do we care?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When thinking of the importance of good software stewardship, management, and development practice, many reasons and motivations come to mind.\nYou may think of:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Accuracy of results"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reproducibility of results"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reusability of software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"User friendliness of software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software quality"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recognition and rewards for software developers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Scholarly archive"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software sustainability"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Do any other reasons or motivation come to mind?\nFor each reason, score how generally applicable they are to research software:\n1 = all, 2 = most, 3 = some, 4 = rarely, 5 = never"}]},{"type":"element","tag":"h3","props":{"id":"mapping-motivations"},"children":[{"type":"text","value":"Mapping motivations"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"NB:"}]},{"type":"text","value":" If you are not yet familiar with the FAIR principles for research software, take a look at the chapter on "},{"type":"element","tag":"a","props":{"href":"/modules/softwarelandscape/slides"},"children":[{"type":"text","value":"Software Landscapes"}]},{"type":"text","value":" before doing the following exercise.)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The motivations we listed above were important considerations for the development of Software Management Plans as well as the FAIR principles for research software.\nThey do not match completely, however.\nEach has its own focus and emphasis."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the following exercise, we will map the motivations we listed above to the ultimate goals of SMPs and the FAIR principles."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Draw a Venn diagram with two circles: SMP and FAIR:"}]},{"type":"element","tag":"img","props":{"src":"/modules/softwaremanagementplans/media/venn_fairsmp.png","width":400},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Map the motivations listed above to the Venn diagram."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Which motivations are covered by SMPs, which by FAIR, and which by both?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Do you find any motivations that are not covered by either?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What does this tell you about the relationship between SMPs and FAIR?"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"smp-vs-fair","depth":2,"text":"SMP vs FAIR","children":[{"id":"why-do-we-care","depth":3,"text":"Why do we care?"},{"id":"mapping-motivations","depth":3,"text":"Mapping motivations"}]}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:smpvsfair.md","_source":"local_fs","_file":"modules/softwaremanagementplans/smpvsfair.md","_stem":"modules/softwaremanagementplans/smpvsfair","_extension":"md","plainText":"---\ntitle: SMP vs FAIR\ntype: exercise\norder: 4\n---\n\n## SMP vs FAIR\n\n### Why do we care?\n\nWhen thinking of the importance of good software stewardship, management, and development practice, many reasons and motivations come to mind.\nYou may think of:\n\n- Accuracy of results\n- Reproducibility of results\n- Reusability of software\n- User friendliness of software\n- Software quality\n- Recognition and rewards for software developers\n- Scholarly archive\n- Software sustainability\n\nDo any other reasons or motivation come to mind?\nFor each reason, score how generally applicable they are to research software:\n1 = all, 2 = most, 3 = some, 4 = rarely, 5 = never\n\n### Mapping motivations\n\n(**NB:** If you are not yet familiar with the FAIR principles for research software, take a look at the chapter on [Software Landscapes](/modules/softwarelandscape/slides) before doing the following exercise.)\n\nThe motivations we listed above were important considerations for the development of Software Management Plans as well as the FAIR principles for research software.\nThey do not match completely, however.\nEach has its own focus and emphasis.\n\nIn the following exercise, we will map the motivations we listed above to the ultimate goals of SMPs and the FAIR principles.\n\nDraw a Venn diagram with two circles: SMP and FAIR:\n\n<img src=\"media/venn_fairsmp.png\" width=\"400\">\n\nMap the motivations listed above to the Venn diagram.\n\n- Which motivations are covered by SMPs, which by FAIR, and which by both?\n- Do you find any motivations that are not covered by either?\n- What does this tell you about the relationship between SMPs and FAIR?\n"},{"_path":"/modules/softwaremanagementplans/templatebuilding","_dir":"softwaremanagementplans","_draft":false,"_partial":false,"_locale":"","title":"Build a Template","description":"In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then create an SMP template for this project.","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"build-your-own-software-management-plan-template"},"children":[{"type":"text","value":"Build your own Software Management Plan template"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then create an SMP template for this project."}]}]},{"type":"element","tag":"h2","props":{"id":"step-1-choose-a-software-project"},"children":[{"type":"text","value":"Step 1: Choose a software project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Choose a software project for this exercise, preferably one you are familiar with."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you don't have a project in mind, you can use one of the following:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/esmvaltool","rel":["nofollow"]},"children":[{"type":"text","value":"ESMValTool"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/litstudy","rel":["nofollow"]},"children":[{"type":"text","value":"LitStudy"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/haddock3","rel":["nofollow"]},"children":[{"type":"text","value":"Haddock"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://cjvanlissa.github.io/worcs/index.html","rel":["nofollow"]},"children":[{"type":"text","value":"worcs"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://research-software-directory.org/software/democracy-topic-modelling","rel":["nofollow"]},"children":[{"type":"text","value":"democracy-topic-modelling"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Find the Practical Guide at "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.7589725","rel":["nofollow"]},"children":[{"type":"text","value":"tinyurl.com/SMP-guide"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"step-2-building-blocks"},"children":[{"type":"text","value":"Step 2: Building blocks"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Print the following "},{"type":"element","tag":"a","props":{"href":"/modules/softwaremanagementplans/media/SMP-requirements.pdf","target":"_blank"},"children":[{"type":"text","value":"figure from the Practical Guide"}]},{"type":"text","value":" and cut out the various hexagons/requirements."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Look at the software repository or page in the Research Software Directory or any other information you can find about your software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Take a fresh sheet of paper and some glue and glue the requirements that you think are relevant to your chosen software. You can also use the physical space on your sheet of paper to group the various requirements together."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For this, use the following considerations (section 5 in "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.7589725","rel":["nofollow"]},"children":[{"type":"text","value":"the guide"}]},{"type":"text","value":"):"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Purpose"}]},{"type":"text","value":". What is the current reason or expected end-use for developing the software?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Reliability"}]},{"type":"text","value":". The effect of software failure and/or non-maintenance on:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Risk of harm to self or others. This includes injury, privacy violation, bias, and inappropriate content."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Reputation. For example to self, institution or other."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Research, either your own or of others. This effect could be due to an obvious software failure (\"crash\") or a hidden one, for example, returning inconsistent numerical results on different operating systems."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Maintenance"}]},{"type":"text","value":". The long-term effort needed to maintain the software as long as it might be used as a standalone tool or dependency. This includes maintenance functions that can extend beyond the lifespan of the original development project and includes fixing bugs, dependency management, operating system compatibility, and security issues."}]}]},{"type":"element","tag":"h2","props":{"id":"step-3-assess-your-template"},"children":[{"type":"text","value":"Step 3: Assess your template"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Assess what level of management (low, medium, high) your custom template matches most."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"What is different from your custom template and the default management level template? Does this difference make sense?"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Finally use section 6 (Implementation Examples) from the "},{"type":"element","tag":"a","props":{"href":"https://doi.org/10.5281/zenodo.7589725","rel":["nofollow"]},"children":[{"type":"text","value":"Practical Guide to Software Management Plans"}]},{"type":"text","value":" to create the Software Management Plan template with questions that a researcher/developer would have to answer."}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"step-1-choose-a-software-project","depth":2,"text":"Step 1: Choose a software project"},{"id":"step-2-building-blocks","depth":2,"text":"Step 2: Building blocks"},{"id":"step-3-assess-your-template","depth":2,"text":"Step 3: Assess your template"}]}},"_type":"markdown","_id":"local_fs:modules:softwaremanagementplans:templatebuilding.md","_source":"local_fs","_file":"modules/softwaremanagementplans/templatebuilding.md","_stem":"modules/softwaremanagementplans/templatebuilding","_extension":"md","plainText":"---\ntitle: Build a Template\ntype: exercise\norder: 5\n---\n\n# Build your own Software Management Plan template\n\n*In a live setting, this exercise is done in groups.\nEach group will be assigned a software project.\nThe group will then create an SMP template for this project.*\n\n## Step 1: Choose a software project\n\nChoose a software project for this exercise, preferably one you are familiar with.\n\nIf you don't have a project in mind, you can use one of the following:\n\n- [ESMValTool](https://research-software-directory.org/software/esmvaltool)\n- [LitStudy](https://research-software-directory.org/software/litstudy)\n- [Haddock](https://research-software-directory.org/software/haddock3)\n- [worcs](https://cjvanlissa.github.io/worcs/index.html)\n- [democracy-topic-modelling](https://research-software-directory.org/software/democracy-topic-modelling)\n\nFind the Practical Guide at [tinyurl.com/SMP-guide](https://doi.org/10.5281/zenodo.7589725).\n\n## Step 2: Building blocks\n\n- Print the following [figure from the Practical Guide](media/SMP-requirements.pdf) and cut out the various hexagons/requirements. \n- Look at the software repository or page in the Research Software Directory or any other information you can find about your software. \n- Take a fresh sheet of paper and some glue and glue the requirements that you think are relevant to your chosen software. You can also use the physical space on your sheet of paper to group the various requirements together. \n\nFor this, use the following considerations (section 5 in [the guide](https://doi.org/10.5281/zenodo.7589725)):\n\n1. **Purpose**. What is the current reason or expected end-use for developing the software?\n2. **Reliability**. The effect of software failure and/or non-maintenance on:\n    - Risk of harm to self or others. This includes injury, privacy violation, bias, and inappropriate content.\n    - Reputation. For example to self, institution or other.\n    - Research, either your own or of others. This effect could be due to an obvious software failure (\"crash\") or a hidden one, for example, returning inconsistent numerical results on different operating systems.\n3. **Maintenance**. The long-term effort needed to maintain the software as long as it might be used as a standalone tool or dependency. This includes maintenance functions that can extend beyond the lifespan of the original development project and includes fixing bugs, dependency management, operating system compatibility, and security issues.\n\n\n## Step 3: Assess your template\n\n- Assess what level of management (low, medium, high) your custom template matches most. \n- What is different from your custom template and the default management level template? Does this difference make sense?\n- Finally use section 6 (Implementation Examples) from the [Practical Guide to Software Management Plans](https://doi.org/10.5281/zenodo.7589725) to create the Software Management Plan template with questions that a researcher/developer would have to answer. \n"},{"_path":"/modules/testing/ci-cd","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Continuous Integration","description":"","type":"reading","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"continuous-integration-ci-2-minutes"},"children":[{"type":"text","value":"Continuous Integration (CI) (2 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes into a shared remote repository, often several times a day. After each integration, a working version of the project is built, and the software's test suite is run automatically. This process allows for the early identification of defects, errors, flaws, or bugs introduced by changes, helping to maintain code quality and reduce the chances of major issues when combining everyone's work."}]},{"type":"element","tag":"h3","props":{"id":"importance-of-ci"},"children":[{"type":"text","value":"Importance of CI"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CI offers several key benefits:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Early Bug Detection"}]},{"type":"text","value":": By identifying bugs early, CI minimizes their impact and makes them easier to fix."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Synchronization"}]},{"type":"text","value":": Keeps project contributors up to date with each other’s work, allowing them to benefit from new features as soon as possible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Encouragement to Write Tests"}]},{"type":"text","value":": Promotes the practice of writing tests, ensuring better code quality."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Test Automation"}]},{"type":"text","value":": Automates the process of running tests, saving time and effort."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Frequent Testing"}]},{"type":"text","value":": Ensures that tests are run frequently, maintaining continuous validation of the software's functionality."}]}]},{"type":"element","tag":"h2","props":{"id":"continuous-deployment-cd-1-minute"},"children":[{"type":"text","value":"Continuous Deployment (CD) (1 minute)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuous Deployment (CD) is an extension of the CI practice that automates the release of software updates to users. This is done for every change that passes all stages of the development pipeline, including automated tests. CD ensures that the software is always in a releasable state and that new features, improvements, and bug fixes are delivered to users quickly and consistently."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Together, CI and CD form a powerful combination that enhances the efficiency, reliability, and speed of the software development process."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"continuous-integration-ci-2-minutes","depth":2,"text":"Continuous Integration (CI) (2 minutes)","children":[{"id":"importance-of-ci","depth":3,"text":"Importance of CI"}]},{"id":"continuous-deployment-cd-1-minute","depth":2,"text":"Continuous Deployment (CD) (1 minute)"}]}},"_type":"markdown","_id":"local_fs:modules:testing:ci-cd.md","_source":"local_fs","_file":"modules/testing/ci-cd.md","_stem":"modules/testing/ci-cd","_extension":"md","plainText":"---\ntitle: Continuous Integration\ntype: reading\norder: 3\n---\n\n## Continuous Integration (CI) (2 minutes)\nContinuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes into a shared remote repository, often several times a day. After each integration, a working version of the project is built, and the software's test suite is run automatically. This process allows for the early identification of defects, errors, flaws, or bugs introduced by changes, helping to maintain code quality and reduce the chances of major issues when combining everyone's work.\n\n### Importance of CI\nCI offers several key benefits:\n\n- **Early Bug Detection**: By identifying bugs early, CI minimizes their impact and makes them easier to fix.\n- **Synchronization**: Keeps project contributors up to date with each other’s work, allowing them to benefit from new features as soon as possible.\n- **Encouragement to Write Tests**: Promotes the practice of writing tests, ensuring better code quality.\n- **Test Automation**: Automates the process of running tests, saving time and effort.\n- **Frequent Testing**: Ensures that tests are run frequently, maintaining continuous validation of the software's functionality.\n\n## Continuous Deployment (CD) (1 minute)\nContinuous Deployment (CD) is an extension of the CI practice that automates the release of software updates to users. This is done for every change that passes all stages of the development pipeline, including automated tests. CD ensures that the software is always in a releasable state and that new features, improvements, and bug fixes are delivered to users quickly and consistently.\n\nTogether, CI and CD form a powerful combination that enhances the efficiency, reliability, and speed of the software development process."},{"_path":"/modules/testing/exercise1","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Exercise 1","description":"Choose an alternative that correctly answers the following questions:","type":"exercise","order":4,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"exercise-1"},"children":[{"type":"text","value":"Exercise 1"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Choose an alternative that correctly answers the following questions:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1.1 What is software testing?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"a) A method for evaluating a software's compatibility with different operating systems."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"b) The process of releasing updates and patches for software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"c) The process of verifying and validating that a software meets the required specifications and works as intended."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"d) A step in the software lifecycle focused on community engagement and feedback."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"e) The practice of documenting software functionalities."}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"1.2 Why is software testing important?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"a) To build and maintain the community's trust by demonstrating commitment to quality."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"b) To identify and fix bugs, ensure the software meets required standards, and assess its reliability and reproducibility."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"c) To design the software's user interface and graphics."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"d) To accelerate the overall software development process."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"e) To facilitate easier collaboration among developers."}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"answers:"}]},{"type":"text","value":"\n1.1 c)\n1.2 The most obvious answer is b), but in fact all answers except c) are correct\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:testing:exercise1.md","_source":"local_fs","_file":"modules/testing/exercise1.md","_stem":"modules/testing/exercise1","_extension":"md","plainText":"---\ntitle: Exercise 1\ntype: exercise\norder: 4\n---\n\n# Exercise 1\n\nChoose an alternative that correctly answers the following questions:\n\n**1.1 What is software testing?**\n\na) A method for evaluating a software's compatibility with different operating systems.\n\nb) The process of releasing updates and patches for software.\n\nc) The process of verifying and validating that a software meets the required specifications and works as intended.\n\nd) A step in the software lifecycle focused on community engagement and feedback.\n\ne) The practice of documenting software functionalities.\n\n---\n\n**1.2 Why is software testing important?**\n\na) To build and maintain the community's trust by demonstrating commitment to quality.\n\nb) To identify and fix bugs, ensure the software meets required standards, and assess its reliability and reproducibility.\n\nc) To design the software's user interface and graphics.\n\nd) To accelerate the overall software development process.\n\ne) To facilitate easier collaboration among developers.\n\n---\n\n<small> **answers:** \n1.1 c) \n1.2 The most obvious answer is b), but in fact all answers except c) are correct\n</small>\n"},{"_path":"/modules/testing/exercise2","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Exercise 2","description":"","type":"exercise","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"exercise-2"},"children":[{"type":"text","value":"Exercise 2"}]},{"type":"element","tag":"h2","props":{"id":"instructions"},"children":[{"type":"text","value":"Instructions"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Match the items in Column A with their corresponding items in Column B."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Write the letter of the correct match next to each item in Column A."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Have fun and learn!"}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"exercise"},"children":[{"type":"text","value":"Exercise"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Column A: Test Type"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Match"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Column B: Description"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"1. Smoke Test"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A. Style of testing that focuses on retesting after changes are made. The results of tests after the changes are compared to the results before, and errors are raised if these are different. The purpose of this test is to ensure that changes (enhancements or defect fixes) to the software have not adversely affected it."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"2. Unit Test"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"B. A level of the software testing process where the complete, integrated system is tested. The purpose of this test is to evaluate whether the system as a whole gives the correct outputs for given inputs."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"3. Integration Test"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"C. Very brief initial checks that ensure the basic units required to run the software can be initialized. If these fail there is no point proceeding to additional levels of testing until they are fixed."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"4. System Test"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"D. A level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"5. Regression Test"}]},{"type":"element","tag":"td","props":{},"children":[]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"E. A level of the software testing process where individual units of a software are tested. The purpose is to ensure that each unit of the software works as expected."}]}]}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"hint"},"children":[{"type":"text","value":"Hint"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here’s an analogy: during the process of manufacturing a ballpoint pen, the cap, the body, the tail, the ink cartridge and the ballpoint are produced separately and unit tested separately. When two or more units are ready, they are assembled and integration testing is performed, for example a test to check the cap fits on the body. When the complete pen is integrated, system testing is performed to check it can be used to write like any pen should."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" correct answers: 1.C., 2.E., 3.D., 4.B., and 5.A "}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"instructions","depth":2,"text":"Instructions"},{"id":"exercise","depth":2,"text":"Exercise"},{"id":"hint","depth":2,"text":"Hint"}]}},"_type":"markdown","_id":"local_fs:modules:testing:exercise2.md","_source":"local_fs","_file":"modules/testing/exercise2.md","_stem":"modules/testing/exercise2","_extension":"md","plainText":"---\ntitle: Exercise 2\ntype: exercise\norder: 5\n---\n\n# Exercise 2\n\n## Instructions\n\n- Match the items in Column A with their corresponding items in Column B.\n- Write the letter of the correct match next to each item in Column A.\n- Have fun and learn!\n\n---\n\n## Exercise\n\n| Column A: Test Type  | Match | Column B: Description |\n|----------------------|-------|-----------------------|\n| 1. Smoke Test        |       | A. Style of testing that focuses on retesting after changes are made. The results of tests after the changes are compared to the results before, and errors are raised if these are different. The purpose of this test is to ensure that changes (enhancements or defect fixes) to the software have not adversely affected it. |\n| 2. Unit Test         |       | B. A level of the software testing process where the complete, integrated system is tested. The purpose of this test is to evaluate whether the system as a whole gives the correct outputs for given inputs. |\n| 3. Integration Test  |       | C. Very brief initial checks that ensure the basic units required to run the software can be initialized. If these fail there is no point proceeding to additional levels of testing until they are fixed. |\n| 4. System Test       |       | D. A level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units. |\n| 5. Regression Test   |       | E. A level of the software testing process where individual units of a software are tested. The purpose is to ensure that each unit of the software works as expected. | \n\n---\n\n## Hint\n\nHere’s an analogy: during the process of manufacturing a ballpoint pen, the cap, the body, the tail, the ink cartridge and the ballpoint are produced separately and unit tested separately. When two or more units are ready, they are assembled and integration testing is performed, for example a test to check the cap fits on the body. When the complete pen is integrated, system testing is performed to check it can be used to write like any pen should.\n\n<small> correct answers: 1.C., 2.E., 3.D., 4.B., and 5.A </small>\n\n"},{"_path":"/modules/testing/exercise3","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Exercise 3","description":"","type":"exercise","order":6,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"exercise-3"},"children":[{"type":"text","value":"Exercise 3"}]},{"type":"element","tag":"h2","props":{"id":"scenario"},"children":[{"type":"text","value":"Scenario"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You are part of a research team working on a complex simulation software that models climate change. The software is developed collaboratively by a diverse group of scientists, each contributing to different modules (e.g., ocean temperature modeling, atmospheric chemistry, etc.). The team has faced issues with code integration, where new contributions occasionally break existing functionalities or cause unexpected results, leading to delays in their research. You are considering the adoption of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Continuous Integration"}]},{"type":"text","value":"."}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h2","props":{"id":"question"},"children":[{"type":"text","value":"Question"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which of the following best describes Continuous Integration and its benefits for this project?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"a) Continuous Integration is a practice where team members work in isolation to ensure their code is perfect before integrating it once at the end of the project, helping to avoid conflicts and errors."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"b) Continuous Integration involves the use of specialized software to automatically translate code into multiple programming languages, making it more versatile and reducing workload."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"c) Continuous Integration is a development practice where team members frequently integrate their work, often several times a day, to detect and fix integration issues early, thereby improving collaboration and code quality."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"d) Continuous Integration is a method where team members manually review each other's code at the end of each day, ensuring that the code meets quality standards and is ready for client presentation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"e) Continuous Integration refers to the continuous updating of software to incorporate user feedback and new features, ensuring the software evolves to meet user needs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" correct answer: c) "}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"scenario","depth":2,"text":"Scenario"},{"id":"question","depth":2,"text":"Question"}]}},"_type":"markdown","_id":"local_fs:modules:testing:exercise3.md","_source":"local_fs","_file":"modules/testing/exercise3.md","_stem":"modules/testing/exercise3","_extension":"md","plainText":"---\ntitle: Exercise 3\ntype: exercise\norder: 6\n---\n\n# Exercise 3\n\n## Scenario\n\nYou are part of a research team working on a complex simulation software that models climate change. The software is developed collaboratively by a diverse group of scientists, each contributing to different modules (e.g., ocean temperature modeling, atmospheric chemistry, etc.). The team has faced issues with code integration, where new contributions occasionally break existing functionalities or cause unexpected results, leading to delays in their research. You are considering the adoption of **Continuous Integration**.\n\n---\n\n## Question\n\nWhich of the following best describes Continuous Integration and its benefits for this project?\n\na) Continuous Integration is a practice where team members work in isolation to ensure their code is perfect before integrating it once at the end of the project, helping to avoid conflicts and errors.\n\nb) Continuous Integration involves the use of specialized software to automatically translate code into multiple programming languages, making it more versatile and reducing workload.\n\nc) Continuous Integration is a development practice where team members frequently integrate their work, often several times a day, to detect and fix integration issues early, thereby improving collaboration and code quality.\n\nd) Continuous Integration is a method where team members manually review each other's code at the end of each day, ensuring that the code meets quality standards and is ready for client presentation.\n\ne) Continuous Integration refers to the continuous updating of software to incorporate user feedback and new features, ensuring the software evolves to meet user needs.\n\n<small> correct answer: c) </small>"},{"_path":"/modules/testing","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Testing","description":"A cut-out of the following image:","category":"Developing Software","order":4,"abstract":"Local testing of your software and using Continuous Integration and Continuous Deployment (CI/CD)","author":"eScience Center","thumbnail":"thumbnail-testing.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A cut-out of the following image:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Crash test dummy in a 2010 Hyundai Tucson GLS at the Insurance Institute for Highway Safety Vehicle Research Center.\nThis file is licensed under the "},{"type":"element","tag":"a","props":{"href":"https://creativecommons.org/licenses/by/3.0/deed.en","rel":["nofollow"]},"children":[{"type":"text","value":"Creative Commons Attribution 3.0 Unported"}]},{"type":"text","value":" license.\n"},{"type":"element","tag":"a","props":{"href":"https://commons.wikimedia.org/wiki/File:IIHS_crash_test_dummy_in_Hyundai_Tucson.jpg","rel":["nofollow"]},"children":[{"type":"text","value":"thumbnail-testing"}]},{"type":"text","value":"\nPhoto by Brady Holt"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:testing:index.md","_source":"local_fs","_file":"modules/testing/index.md","_stem":"modules/testing/index","_extension":"md","plainText":"---\ntitle: Software Testing\ncategory: Developing Software\norder: 4\nabstract: Local testing of your software and using Continuous Integration and Continuous Deployment (CI/CD)\nauthor: eScience Center\nthumbnail: \"thumbnail-testing.jpg\"\nvisibility: visible\n---\n\nA cut-out of the following image:\n\nCrash test dummy in a 2010 Hyundai Tucson GLS at the Insurance Institute for Highway Safety Vehicle Research Center.\nThis file is licensed under the [Creative Commons Attribution 3.0 Unported](https://creativecommons.org/licenses/by/3.0/deed.en) license.\n[thumbnail-testing](https://commons.wikimedia.org/wiki/File:IIHS_crash_test_dummy_in_Hyundai_Tucson.jpg)\nPhoto by Brady Holt"},{"_path":"/modules/testing/info","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Appreciate the importance of testing software"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understand the various benefits of testing"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understand the types of tests and what info they convey"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Get familiar with the idea of continuous integration and its importance"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:testing:info.md","_source":"local_fs","_file":"modules/testing/info.md","_stem":"modules/testing/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- Appreciate the importance of testing software\n- Understand the various benefits of testing\n- Understand the types of tests and what info they convey\n- Get familiar with the idea of continuous integration and its importance\n"},{"_path":"/modules/testing/reading","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Reading material","description":"","type":"reading","order":7,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"reading-material"},"children":[{"type":"text","value":"Reading material"}]},{"type":"element","tag":"h2","props":{"id":"testing"},"children":[{"type":"text","value":"Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Follow the links below to read more about software testing."}]},{"type":"element","tag":"h3","props":{"id":"the-turing-way"},"children":[{"type":"text","value":"The Turing Way"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in the Turing Way about "},{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/testing","rel":["nofollow"]},"children":[{"type":"text","value":"Code Testing"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"code-refinery"},"children":[{"type":"text","value":"Code Refinery"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in CodeRefinery about "},{"type":"element","tag":"a","props":{"href":"https://coderefinery.github.io/testing/motivation/","rel":["nofollow"]},"children":[{"type":"text","value":"Automated testing"}]}]},{"type":"element","tag":"h3","props":{"id":"ibm"},"children":[{"type":"text","value":"IBM"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Link to an "},{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/topics/software-testing","rel":["nofollow"]},"children":[{"type":"text","value":"IBM article"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"arxiv"},"children":[{"type":"text","value":"arXiv"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read this interesting article about "},{"type":"element","tag":"a","props":{"href":"https://arxiv.org/abs/2205.15982","rel":["nofollow"]},"children":[{"type":"text","value":"Testing Research Software"}]}]},{"type":"element","tag":"h2","props":{"id":"cicd"},"children":[{"type":"text","value":"CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Follow the links below to read more about CI/CD."}]},{"type":"element","tag":"h3","props":{"id":"the-turing-way-1"},"children":[{"type":"text","value":"The Turing Way"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in the Turing Way about "},{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/ci","rel":["nofollow"]},"children":[{"type":"text","value":"Continuous Integration"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"code-refinery-1"},"children":[{"type":"text","value":"Code Refinery"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in CodeRefinery about "},{"type":"element","tag":"a","props":{"href":"https://coderefinery.github.io/testing/continuous-integration/","rel":["nofollow"]},"children":[{"type":"text","value":"Continuous integration"}]}]},{"type":"element","tag":"h3","props":{"id":"bytebytego-newsletter"},"children":[{"type":"text","value":"ByteByteGo Newsletter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Read in ByteByteGo newsletter about "},{"type":"element","tag":"a","props":{"href":"https://blog.bytebytego.com/p/a-crash-course-in-cicd","rel":["nofollow"]},"children":[{"type":"text","value":"A Crash Course in CI/CD"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"testing","depth":2,"text":"Testing","children":[{"id":"the-turing-way","depth":3,"text":"The Turing Way"},{"id":"code-refinery","depth":3,"text":"Code Refinery"},{"id":"ibm","depth":3,"text":"IBM"},{"id":"arxiv","depth":3,"text":"arXiv"}]},{"id":"cicd","depth":2,"text":"CI/CD","children":[{"id":"the-turing-way-1","depth":3,"text":"The Turing Way"},{"id":"code-refinery-1","depth":3,"text":"Code Refinery"},{"id":"bytebytego-newsletter","depth":3,"text":"ByteByteGo Newsletter"}]}]}},"_type":"markdown","_id":"local_fs:modules:testing:reading.md","_source":"local_fs","_file":"modules/testing/reading.md","_stem":"modules/testing/reading","_extension":"md","plainText":"---\ntitle: Reading material\ntype: reading\norder: 7\n---\n\n# Reading material\n\n## Testing\nFollow the links below to read more about software testing.\n\n### The Turing Way\nRead in the Turing Way about [Code Testing](https://the-turing-way.netlify.app/reproducible-research/testing).\n\n### Code Refinery\nRead in CodeRefinery about [Automated testing](https://coderefinery.github.io/testing/motivation/)\n\n### IBM\nLink to an [IBM article](https://www.ibm.com/topics/software-testing).\n\n### arXiv\nRead this interesting article about [Testing Research Software](https://arxiv.org/abs/2205.15982)\n\n## CI/CD\nFollow the links below to read more about CI/CD.\n\n### The Turing Way\nRead in the Turing Way about [Continuous Integration](https://the-turing-way.netlify.app/reproducible-research/ci).\n\n### Code Refinery\nRead in CodeRefinery about [Continuous integration](https://coderefinery.github.io/testing/continuous-integration/)\n\n### ByteByteGo Newsletter\nRead in ByteByteGo newsletter about [A Crash Course in CI/CD](https://blog.bytebytego.com/p/a-crash-course-in-cicd)"},{"_path":"/modules/testing/slides","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Software Testing","description":"","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"software-testing"},"children":[{"type":"text","value":"Software Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"what-is-software-testing"},"children":[{"type":"text","value":"What is software testing?"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"“Software testing is the process of evaluating and verifying that a software product or application does what it’s supposed to do. The benefits of good testing include preventing bugs and improving performance.”"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.ibm.com/topics/software-testing","rel":["nofollow"]},"children":[{"type":"text","value":"From IBM Featured Topics"}]},{"type":"text","value":" "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is software testing?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software testing is the process of evaluating and verifying that a software and its components meet specified requirements and work as expected. Its primary purpose is to identify defects, errors, flaws, or bugs early in the development process."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software testing can be done manually, where a human actively uses the software to observe for defects, or automatically, where test scripts or tools are used to execute tests."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Untested software can be compared to uncalibrated experimental devices."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"risks-of-poorly-tested-research-software"},"children":[{"type":"text","value":"Risks of poorly tested (research) software"}]},{"type":"element","tag":"center","props":{},"children":[{"type":"element","tag":"img","props":{"src":"media/testing-motivation1.png","width":"30%","style":"display:inline;"},"children":[]},{"type":"element","tag":"img","props":{"src":"media/testing-motivation2.png","width":"30%","style":"display:inline;"},"children":[]},{"type":"element","tag":"img","props":{"src":"media/testing-motivation3.png","width":"30%","style":"display:inline;"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" Find the complete articles "},{"type":"element","tag":"a","props":{"href":"https://www.science.org/doi/full/10.1126/science.314.5807.1856","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":", "},{"type":"element","tag":"a","props":{"href":"https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":", and "},{"type":"element","tag":"a","props":{"href":"https://www.wired.com/2010/11/1110mars-climate-observer-report/","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several examples in which the lack of proper software testings resulted in serious consequences."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The first article from 2006 reports about a software flaw (a plus sign in place of a minus sign) that lead to a retraction of 5 scientific articles."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the second from 2019, researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There is also the case of the Ariane flight V88, an European Space Agency rocket which was destroyed just 40 seconds after its launch due to a software bug; see "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Ariane_flight_V88","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Ariane_flight_V88"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"why-test-your-software"},"children":[{"type":"text","value":"Why test your software ?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Ensure software reliability, validity, and reproducibility."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Confirm correct installation and demonstrate use."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Boost developer confidence for contributions and modifications."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Maintain expected software functionality."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Simplify and manage code complexity."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Why testing your software is so crucial?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Specifically for research software, tests are vital for ensuring the reliability, validity, and reproducibility of your scientific results."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"They help users by enabling them confirm that the software is installed correctly, providing usage examples."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tests also help other developers modify and contribute to your software. A good test suite gives collaborators confidence to make modifications without breaking existing functionalities.\nThey preserve the expected functionality of the software."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Manage complexity: Code that is easy to test is often easier to understand and maintain."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"types-of-testing"},"children":[{"type":"text","value":"Types of testing"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Unit tests"}]},{"type":"text","value":": Assess individual components for correctness."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Integration tests"}]},{"type":"text","value":": Verify interactions between different parts of the software."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"System tests"}]},{"type":"text","value":": Evaluate the complete and integrated software system."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Regression tests"}]},{"type":"text","value":": Ensure new changes don’t disrupt existing functionality."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several types of software testing, each of which with its own purpose."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In unit tests each individual unit of a software is tested separately. The purpose is to ensure that each component of the software works as expected."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Integration tests are a level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The complete, integrated system is checked via the so-called system tests. The purpose here is to evaluate whether the software as a whole gives the correct outputs for given inputs."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, regression tests check for unexpected side-effects in existing features after changes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"continuous-integration-and-continuous-deployment-cicd"},"children":[{"type":"text","value":"Continuous Integration and Continuous Deployment (CI/CD)"}]},{"type":"element","tag":"center","props":{},"children":[{"type":"element","tag":"img","props":{"src":"media/cicd_scheme.png","width":"50%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes, often several times a day, into a shared remote repository. After every integration, a working version of the project is build and the software's test suite is run automatically, making it possible to identify defects, errors, flaws, or bugs introduced by changes early in the development process. This helps keep the code up-to-date and reduces the chances of major issues when combining everyone's work."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Continuous deployment (CD) is the next step after CI in the CI/CD pipeline shown in the figure. CD is the practice of automatically deploying every working version of the project that passes the automated testing phase to its end-users."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"benefits-of-continuous-integration"},"children":[{"type":"text","value":"Benefits of continuous integration"}]},{"type":"element","tag":"center","props":{},"children":[{"type":"element","tag":"img","props":{"src":"media/benefits_of_ci.png","width":"70%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"take-home-messages"},"children":[{"type":"text","value":"Take home messages"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Software testing is key for quality, reliability, and reproducibility"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Unit tests verify individual components, integration tests check component interactions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"CI/CD streamline development and enhance deployment efficiency."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"http://www.esciencecenter.nl","rel":["nofollow"]},"children":[{"type":"text","value":"www.esciencecenter.nl"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"mailto:info@esciencecenter.nl"},"children":[{"type":"text","value":"info@esciencecenter.nl"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-testing","depth":2,"text":"Software Testing"},{"id":"what-is-software-testing","depth":2,"text":"What is software testing?"},{"id":"risks-of-poorly-tested-research-software","depth":2,"text":"Risks of poorly tested (research) software"},{"id":"why-test-your-software","depth":2,"text":"Why test your software ?"},{"id":"types-of-testing","depth":2,"text":"Types of testing"},{"id":"continuous-integration-and-continuous-deployment-cicd","depth":2,"text":"Continuous Integration and Continuous Deployment (CI/CD)"},{"id":"benefits-of-continuous-integration","depth":2,"text":"Benefits of continuous integration"},{"id":"take-home-messages","depth":2,"text":"Take home messages"}]}},"_type":"markdown","_id":"local_fs:modules:testing:slides.md","_source":"local_fs","_file":"modules/testing/slides.md","_stem":"modules/testing/slides","_extension":"md","plainText":"---\ntitle: Software Testing\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\" -->\n\n## Software Testing\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## What is software testing?\n\n> “Software testing is the process of evaluating and verifying that a software product or application does what it’s supposed to do. The benefits of good testing include preventing bugs and improving performance.”\n\n<small>[From IBM Featured Topics](https://www.ibm.com/topics/software-testing) </small>\n\nNote:\n\nWhat is software testing?\n\nSoftware testing is the process of evaluating and verifying that a software and its components meet specified requirements and work as expected. Its primary purpose is to identify defects, errors, flaws, or bugs early in the development process.\n\nSoftware testing can be done manually, where a human actively uses the software to observe for defects, or automatically, where test scripts or tools are used to execute tests.\n\nUntested software can be compared to uncalibrated experimental devices.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Risks of poorly tested (research) software\n\n<center>\n<img src=\"media/testing-motivation1.png\" width=\"30%\" style=\"display:inline;\">\n<img src=\"media/testing-motivation2.png\" width=\"30%\" style=\"display:inline;\">\n<img src=\"media/testing-motivation3.png\" width=\"30%\" style=\"display:inline;\">\n</center>\n\n\n<small> Find the complete articles [here](https://www.science.org/doi/full/10.1126/science.314.5807.1856), [here](https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/), and [here](https://www.wired.com/2010/11/1110mars-climate-observer-report/) </small>\n\nNote:\n\nThere are several examples in which the lack of proper software testings resulted in serious consequences.\n\nThe first article from 2006 reports about a software flaw (a plus sign in place of a minus sign) that lead to a retraction of 5 scientific articles.\n\nIn the second from 2019, researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies.\n\nThe loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake.\n\nThere is also the case of the Ariane flight V88, an European Space Agency rocket which was destroyed just 40 seconds after its launch due to a software bug; see https://en.wikipedia.org/wiki/Ariane_flight_V88.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Why test your software ?\n\n- Ensure software reliability, validity, and reproducibility.\n- Confirm correct installation and demonstrate use.\n- Boost developer confidence for contributions and modifications.\n- Maintain expected software functionality.\n- Simplify and manage code complexity.\n\nNote:\n\nWhy testing your software is so crucial?\n\nSpecifically for research software, tests are vital for ensuring the reliability, validity, and reproducibility of your scientific results.\n\nThey help users by enabling them confirm that the software is installed correctly, providing usage examples.\n\nTests also help other developers modify and contribute to your software. A good test suite gives collaborators confidence to make modifications without breaking existing functionalities.\nThey preserve the expected functionality of the software.\n\nManage complexity: Code that is easy to test is often easier to understand and maintain.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Types of testing\n\n- **Unit tests**: Assess individual components for correctness.\n- **Integration tests**: Verify interactions between different parts of the software.\n- **System tests**: Evaluate the complete and integrated software system.\n- **Regression tests**: Ensure new changes don’t disrupt existing functionality.\n\nNote:\n\nThere are several types of software testing, each of which with its own purpose.\n\nIn unit tests each individual unit of a software is tested separately. The purpose is to ensure that each component of the software works as expected.\n\nIntegration tests are a level of software testing where individual units are combined and tested as a group. The purpose of this level of testing is to expose faults in the interaction between integrated units.\n\nThe complete, integrated system is checked via the so-called system tests. The purpose here is to evaluate whether the software as a whole gives the correct outputs for given inputs.\n\nFinally, regression tests check for unexpected side-effects in existing features after changes.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Continuous Integration and Continuous Deployment (CI/CD)\n\n<center>\n<img src=\"media/cicd_scheme.png\" width=\"50%\">\n</center>\n\nNote:\n\nContinuous Integration (CI) is a practice in software development where team members regularly integrate their individual code changes, often several times a day, into a shared remote repository. After every integration, a working version of the project is build and the software's test suite is run automatically, making it possible to identify defects, errors, flaws, or bugs introduced by changes early in the development process. This helps keep the code up-to-date and reduces the chances of major issues when combining everyone's work.\n\nContinuous deployment (CD) is the next step after CI in the CI/CD pipeline shown in the figure. CD is the practice of automatically deploying every working version of the project that passes the automated testing phase to its end-users.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Benefits of continuous integration\n\n<center>\n<img src=\"media/benefits_of_ci.png\" width=\"70%\">\n</center>\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n\n## Take home messages\n\n- Software testing is key for quality, reliability, and reproducibility\n- Unit tests verify individual components, integration tests check component interactions\n- CI/CD streamline development and enhance deployment efficiency.\n\n===\n\n<!-- .slide: data-state=\"keepintouch\" -->\n\n\nwww.esciencecenter.nl\n\ninfo@esciencecenter.nl\n"},{"_path":"/modules/testing/software-testing","_dir":"testing","_draft":false,"_partial":false,"_locale":"","title":"Software Testing","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"software-testing-5-minutes"},"children":[{"type":"text","value":"Software Testing (5 minutes)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Software testing is the process of evaluating and verifying that software and its components meet specified requirements and function as expected. This critical step in the software development lifecycle ensures that the final product is reliable, functional, and free of significant defects."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The primary goal of software testing is to identify defects, errors, flaws, or bugs early in the development process. By detecting issues early, developers can address them before the software is released, reducing the risk of costly fixes and enhancing overall quality. Software testing can be conducted manually, where a human tester actively uses the software, performing various actions and observing the results to detect any anomalies or unexpected behavior. Alternatively, automated testing utilizes test scripts or tools to execute tests automatically, which is efficient for repetitive tasks and can quickly cover a wide range of test scenarios."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Untested software can be likened to uncalibrated experimental devices. Just as uncalibrated instruments may provide inaccurate data and lead to erroneous conclusions, untested software can contain hidden defects that compromise its reliability and performance, potentially leading to critical failures in real-world applications; see optional section below."}]},{"type":"element","tag":"h3","props":{"id":"what-can-tests-help-you-do"},"children":[{"type":"text","value":"What can tests help you do?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tests play a crucial role in ensuring the reliability, validity, and reproducibility of your software's results. They help users easily verify that they have correctly installed your software, often providing examples of how to use it effectively. Tests also enable other developers to contribute to your software and make modifications with confidence, knowing that nothing is breaking."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Additionally, tests preserve expected functionality by ensuring that new changes do not introduce unintended side effects. They manage complexity by encouraging code that is easier to test, which in turn makes it easier to understand and maintain."}]},{"type":"element","tag":"h3","props":{"id":"types-of-testing"},"children":[{"type":"text","value":"Types of Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several types of tests used in software development, each serving a specific purpose to ensure the quality and functionality of the software."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Smoke Tests"}]},{"type":"text","value":": Also known as \"verification testing\", \"confidence testing\" or \"sanity testing\", smoke tests are a preliminary type of testing that checks the basic functionality of the software. They are often used to determine if a new build is stable enough to proceed with more detailed testing. Smoke tests quickly identify major issues that could prevent the software from functioning at a basic level."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Unit Tests"}]},{"type":"text","value":": These tests focus on individual functions or components of the software, testing them one at a time. Unit tests are designed to validate that each function performs as expected in isolation, ensuring that the smallest parts of the codebase work correctly."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Integration Tests"}]},{"type":"text","value":": These tests evaluate how different parts of the software work together. Integration tests are crucial for identifying issues that arise when components interact, ensuring that the integrated parts function seamlessly as a whole."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"System Tests"}]},{"type":"text","value":": These tests involve evaluating the entire software system running in an environment that simulates real-world conditions. System tests aim to verify that the software meets all specified requirements and performs well under expected usage scenarios."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Regression Tests"}]},{"type":"text","value":": These tests are used to ensure that recent code changes have not adversely affected existing functionality. By checking that the software produces the same results as before the changes, regression tests help maintain stability and prevent the reintroduction of previously fixed bugs."}]}]},{"type":"element","tag":"h2","props":{"id":"examples-of-untested-research-software-40-minutes-optional"},"children":[{"type":"text","value":"Examples of untested research software (40 minutes, optional)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"There are several examples in which the lack of proper software testings resulted in serious consequences. Here are a few interesting cases:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Therac-25","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Therac-25"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(1980) A tragic example of software bugs leading to loss of life, the Therac-25 radiation therapy machine had a flaw in its software, which resulted in patients receiving lethal doses of radiation."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Ariane_flight_V88","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Ariane_flight_V88"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(1996) This European Space Agency rocket was destroyed just 40 seconds after its launch due to a software bug."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.wired.com/2010/11/1110mars-climate-observer-report/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.wired.com/2010/11/1110mars-climate-observer-report/"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(1999) The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Year_2000_problem","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Year_2000_problem"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(2000) The Y2K bug was a widespread computer flaw that was expected to cause chaos as the date changed from December 31, 1999, to January 1, 2000."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.science.org/doi/full/10.1126/science.314.5807.1856","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.science.org/doi/full/10.1126/science.314.5807.1856"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(2006) A software flaw (a plus sign which should have been a minus) lead to a retraction of 5 scientific articles."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Knight_Capital_Group","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Knight_Capital_Group"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(2013) Knight Capital, a financial services firm, lost around $440 million within less than an hour due to a software glitch in its trading algorithms."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings","rel":["nofollow"]},"children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(2018-2019) Software issues with the Boeing 737 MAX's Maneuvering Characteristics Augmentation System (MCAS) were implicated in two fatal crashes"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/","rel":["nofollow"]},"children":[{"type":"text","value":"https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"(2019) Researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"software-testing-5-minutes","depth":2,"text":"Software Testing (5 minutes)","children":[{"id":"what-can-tests-help-you-do","depth":3,"text":"What can tests help you do?"},{"id":"types-of-testing","depth":3,"text":"Types of Testing"}]},{"id":"examples-of-untested-research-software-40-minutes-optional","depth":2,"text":"Examples of untested research software (40 minutes, optional)"}]}},"_type":"markdown","_id":"local_fs:modules:testing:software-testing.md","_source":"local_fs","_file":"modules/testing/software-testing.md","_stem":"modules/testing/software-testing","_extension":"md","plainText":"---\ntitle: Software Testing\ntype: reading\norder: 2\n---\n\n## Software Testing (5 minutes)\n\nSoftware testing is the process of evaluating and verifying that software and its components meet specified requirements and function as expected. This critical step in the software development lifecycle ensures that the final product is reliable, functional, and free of significant defects.\n\nThe primary goal of software testing is to identify defects, errors, flaws, or bugs early in the development process. By detecting issues early, developers can address them before the software is released, reducing the risk of costly fixes and enhancing overall quality. Software testing can be conducted manually, where a human tester actively uses the software, performing various actions and observing the results to detect any anomalies or unexpected behavior. Alternatively, automated testing utilizes test scripts or tools to execute tests automatically, which is efficient for repetitive tasks and can quickly cover a wide range of test scenarios.\n\nUntested software can be likened to uncalibrated experimental devices. Just as uncalibrated instruments may provide inaccurate data and lead to erroneous conclusions, untested software can contain hidden defects that compromise its reliability and performance, potentially leading to critical failures in real-world applications; see optional section below.\n\n### What can tests help you do?\n\nTests play a crucial role in ensuring the reliability, validity, and reproducibility of your software's results. They help users easily verify that they have correctly installed your software, often providing examples of how to use it effectively. Tests also enable other developers to contribute to your software and make modifications with confidence, knowing that nothing is breaking.\n\nAdditionally, tests preserve expected functionality by ensuring that new changes do not introduce unintended side effects. They manage complexity by encouraging code that is easier to test, which in turn makes it easier to understand and maintain.\n\n### Types of Testing\n\nThere are several types of tests used in software development, each serving a specific purpose to ensure the quality and functionality of the software.\n\n- **Smoke Tests**: Also known as \"verification testing\", \"confidence testing\" or \"sanity testing\", smoke tests are a preliminary type of testing that checks the basic functionality of the software. They are often used to determine if a new build is stable enough to proceed with more detailed testing. Smoke tests quickly identify major issues that could prevent the software from functioning at a basic level.\n\n- **Unit Tests**: These tests focus on individual functions or components of the software, testing them one at a time. Unit tests are designed to validate that each function performs as expected in isolation, ensuring that the smallest parts of the codebase work correctly.\n\n- **Integration Tests**: These tests evaluate how different parts of the software work together. Integration tests are crucial for identifying issues that arise when components interact, ensuring that the integrated parts function seamlessly as a whole.\n\n- **System Tests**: These tests involve evaluating the entire software system running in an environment that simulates real-world conditions. System tests aim to verify that the software meets all specified requirements and performs well under expected usage scenarios.\n\n- **Regression Tests**: These tests are used to ensure that recent code changes have not adversely affected existing functionality. By checking that the software produces the same results as before the changes, regression tests help maintain stability and prevent the reintroduction of previously fixed bugs.\n\n## Examples of untested research software (40 minutes, optional)\n\nThere are several examples in which the lack of proper software testings resulted in serious consequences. Here are a few interesting cases:\n\n- https://en.wikipedia.org/wiki/Therac-25\n  - (1980) A tragic example of software bugs leading to loss of life, the Therac-25 radiation therapy machine had a flaw in its software, which resulted in patients receiving lethal doses of radiation.\n\n- https://en.wikipedia.org/wiki/Ariane_flight_V88\n  - (1996) This European Space Agency rocket was destroyed just 40 seconds after its launch due to a software bug.\n\n- https://www.wired.com/2010/11/1110mars-climate-observer-report/\n  - (1999) The loss of the Mars Climate Orbiter in 1999 is another prominent example of a catastrophe caused by a software error, specifically a unit conversion mistake.\n\n- https://en.wikipedia.org/wiki/Year_2000_problem\n  - (2000) The Y2K bug was a widespread computer flaw that was expected to cause chaos as the date changed from December 31, 1999, to January 1, 2000.\n\n- https://www.science.org/doi/full/10.1126/science.314.5807.1856\n  - (2006) A software flaw (a plus sign which should have been a minus) lead to a retraction of 5 scientific articles.\n\n- https://en.wikipedia.org/wiki/Knight_Capital_Group\n  - (2013) Knight Capital, a financial services firm, lost around $440 million within less than an hour due to a software glitch in its trading algorithms.\n\n- https://en.wikipedia.org/wiki/Boeing_737_MAX_groundings\n  - (2018-2019) Software issues with the Boeing 737 MAX's Maneuvering Characteristics Augmentation System (MCAS) were implicated in two fatal crashes\n\n- https://arstechnica.com/information-technology/2019/10/chemists-discover-cross-platform-python-scripts-not-so-cross-platform/\n  - (2019) Researchers found that a programming error in a set of Python scripts commonly used for computational analysis of chemistry data returned varying results based on which operating system they were run on—throwing doubt on the results of more than 150 published chemistry studies."},{"_path":"/modules/version-control","_dir":"modules","_draft":false,"_partial":false,"_locale":"","title":"Software Version Control","description":"Photo by Kelsy Gagnebin on Unsplash","order":1,"trl":"high","category":"Developing Software","abstract":"Local version control and collaborative code development, for example using Git and GitHub","author":"eScience Center, TU Delft","thumbnail":"thumbnail-version-control.jpg","visibility":"visible","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Photo by "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/@kelsymichael?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Kelsy Gagnebin"}]},{"type":"text","value":" on "},{"type":"element","tag":"a","props":{"href":"https://unsplash.com/photos/a-stack-of-books-R52YghRa_Ik?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash"},"children":[{"type":"text","value":"Unsplash"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:version-control:index.md","_source":"local_fs","_file":"modules/version-control/index.md","_stem":"modules/version-control/index","_extension":"md","plainText":"---\norder: 1\ntrl: high\ncategory: Developing Software\ntitle: Software Version Control\nabstract: Local version control and collaborative code development, for example using Git and GitHub\nauthor: eScience Center, TU Delft\nthumbnail: \"thumbnail-version-control.jpg\"\nvisibility: visible\n---\n\nPhoto by <a href=\"https://unsplash.com/@kelsymichael?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Kelsy Gagnebin</a> on <a href=\"https://unsplash.com/photos/a-stack-of-books-R52YghRa_Ik?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n  "},{"_path":"/modules/version-control/info","_dir":"version-control","_draft":false,"_partial":false,"_locale":"","title":"Learning objectives","description":"In this module you will learn to answer the following questions:","type":"info","order":0,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this module you will learn to answer the following questions:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Explain what version control of research software is"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Illustrate the importance of using version control"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Identify when in the research cycle to employ version control"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Compare the use of local and remote version control"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"List the various tools or systems for version control"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Identify relevant resources for researchers about features commonly used in version control"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"local_fs:modules:version-control:info.md","_source":"local_fs","_file":"modules/version-control/info.md","_stem":"modules/version-control/info","_extension":"md","plainText":"---\ntitle: Learning objectives\ntype: info\norder: 0\n---\n\nIn this module you will learn to answer the following questions:\n\n- Explain what version control of research software is\n- Illustrate the importance of using version control\n- Identify when in the research cycle to employ version control\n- Compare the use of local and remote version control\n- List the various tools or systems for version control\n- Identify relevant resources for researchers about features commonly used in version control\n"},{"_path":"/modules/version-control/slides-version-control","_dir":"version-control","_draft":false,"_partial":false,"_locale":"","title":"Version Control Slides","description":"What is version control and why should I use it?","type":"slides","order":1,"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"version-control"},"children":[{"type":"text","value":"Version Control"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What is version control and why should I use it?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nYou are probably using version control every day. Word documents store a history of changes for you, which you can undo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"img","props":{"src":"https://swcarpentry.github.io/git-novice/fig/phd101212s.png","width":"45%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"text","value":" \"Piled Higher and Deeper” by Jorge Cham, "},{"type":"element","tag":"a","props":{"href":"http://www.phdcomics.com","rel":["nofollow"]},"children":[{"type":"text","value":"http://www.phdcomics.com"}]},{"type":"text","value":" "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"documents-are"},"children":[{"type":"text","value":"Documents are..."}]},{"type":"element","tag":"div","props":{},"children":[{"type":"text","value":"\n  a series of changes\n  "},{"type":"element","tag":"img","props":{"style":"height: 30vh; margin: 0; padding: 0;","src":"https://swcarpentry.github.io/git-novice/fig/play-changes.svg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nIn version control systems, documents start with a base version and record all the changes that happened on top of that base version. Because of this you can always \"play back\" to an earlier version, while it does not store duplicates."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"changes-are-stored"},"children":[{"type":"text","value":"Changes are stored"}]},{"type":"element","tag":"img","props":{"src":"/modules/version-control/media/git-diff.png","width":"80%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nA version control system (like git) keeps track of the individual changes for us."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"changes-are-stored-1"},"children":[{"type":"text","value":"Changes are stored"}]},{"type":"element","tag":"img","props":{"src":"/modules/version-control/media/git-log.png","width":"80%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nThe changes are stored along with some useful metadata. A set of changes, along with its metadata is called a \"commit\"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"more-than-one"},"children":[{"type":"text","value":"More than one..."}]},{"type":"element","tag":"div","props":{"style":"float: left; width: 49%;"},"children":[{"type":"text","value":"\n  independent change\n  "},{"type":"element","tag":"img","props":{"style":"height: 350px;","src":"/modules/version-control/media/versions.svg"},"children":[]}]},{"type":"element","tag":"div","props":{"style":"float: right; width: 49%;"},"children":[{"type":"text","value":"\n  can be merged\n  "},{"type":"element","tag":"img","props":{"style":"height: 350px;","src":"/modules/version-control/media/merge.svg"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nWhen collaborating you might have various versions (sets of changes) that co-exist at the same time on so called \"branches\". Modern version control software can usually automatically merge multiple changes into a single document."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"merge-conflicts"},"children":[{"type":"text","value":"Merge conflicts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, if multiple contributors work on the same thing..."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"This line contains a typos.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"This line contains a typos.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"... then \"merge conflicts\" may arise:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"<<<<<<< contributor1\nThis line contains typos.\n=======\nThis line contains a typo.\n>>>>>>> contributor2\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<<<<<<< contributor1\nThis line contains typos.\n=======\nThis line contains a typo.\n>>>>>>> contributor2\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If changes are made to the same section (usually the same or consecutive line(s) of text) of a document a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"conflict"}]},{"type":"text","value":" arises. Changes cannot be automatically merged, as the interpreter does not know which version or which combination to use. Human intervention is required and can involve rolling back a change, finding common ground between changes, etc."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"avoiding-merge-conflicts"},"children":[{"type":"text","value":"Avoiding merge conflicts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How to minimize creating merge conflicts:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Communicate:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"discuss who is working on what"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"agree on common standards such as formatting, (conflicting) style guides, linting rules, etc."}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Frequent merging:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Merge (small) changes back to the central repository often"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pull changes to your local repository regularly"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Organize changes:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"use \"feature branches\" rather than making changes to the main document directly"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"avoid \"scope creep\" and instead create separate independent branches for isolated topics"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"review each other's changes before merging them"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nResolving merge conflicts can be time-consuming and error prone, especially for larger changes/conflicts. Therefore it is a good idea for teams to agree on some basic practices to avoid creating conflicts in the first place. Keep in mind, that it is unrealistic to prevent all conflicts. This is fine, but they will need some attention to resolve."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"collaboration"},"children":[{"type":"text","value":"Collaboration"}]},{"type":"element","tag":"img","props":{"style":"height: 350px;","src":"https://www.researchgate.net/profile/Mark-Ziemann/publication/371671830/figure/fig2/AS:11431281168661745@1687060872300/Distributed-version-control-Adapted-from-48.png","alt":"Distributed version control. Adapted from [48]."},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"small","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.researchgate.net/figure/Distributed-version-control-Adapted-from-48_fig2_371671830","rel":["nofollow"]},"children":[{"type":"text","value":"The five pillars of computational reproducibility: Bioinformatics and beyond"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nCollaborative code developers often make use of a remote server (like GitHub, or GitLab) as a central repository from which all other repositories derive. But this is not the only way you can use version control to do collaborative development."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"some-terminology"},"children":[{"type":"text","value":"Some terminology"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Files can be stored in:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"working directory"}]},{"type":"text","value":": the files you can see"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"staging area / index"}]},{"type":"text","value":": files about to be committed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"local repository"}]},{"type":"text","value":": the (permanent) record on a given user's disk"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"remote repository"}]},{"type":"text","value":": an online copy of the record, often used as the central repository"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"the-right-tool"},"children":[{"type":"text","value":"The right tool?"}]},{"type":"element","tag":"img","props":{"src":"/modules/version-control/media/repository_logos.png","width":"90%"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"note:\nMany different tools exist specifically for collaborative version control of computer source code and other simple text-based documents. It is often good to know what is the default or most-used tool in your university, institute or group."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Git (for version control) with Gitlab and Github (for collaboration) are the mainstream, used by many and with lots of features. You might run into projects using other repositories."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"==="}]},{"type":"element","tag":"h2","props":{"id":"key-points"},"children":[{"type":"text","value":"Key Points"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version control is like unlimited "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"undo"}]},{"type":"text","value":" in MS Word, and more"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Version control also allows many people to work in parallel"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"For collaborative development a remote, cloud hosted repository is often used as central hub"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Communication is key to avoid conflicting versions of the same software"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"documents-are","depth":2,"text":"Documents are..."},{"id":"changes-are-stored","depth":2,"text":"Changes are stored"},{"id":"changes-are-stored-1","depth":2,"text":"Changes are stored"},{"id":"more-than-one","depth":2,"text":"More than one..."},{"id":"merge-conflicts","depth":2,"text":"Merge conflicts"},{"id":"avoiding-merge-conflicts","depth":2,"text":"Avoiding merge conflicts"},{"id":"collaboration","depth":2,"text":"Collaboration"},{"id":"some-terminology","depth":2,"text":"Some terminology"},{"id":"the-right-tool","depth":2,"text":"The right tool?"},{"id":"key-points","depth":2,"text":"Key Points"}]}},"_type":"markdown","_id":"local_fs:modules:version-control:slides-version-control.md","_source":"local_fs","_file":"modules/version-control/slides-version-control.md","_stem":"modules/version-control/slides-version-control","_extension":"md","plainText":"---\ntitle: Version Control Slides\ntype: slides\norder: 1\n---\n\n<!-- .slide: data-state=\"title\"  -->\n\n# Version Control\n\nWhat is version control and why should I use it?\n\nnote:\nYou are probably using version control every day. Word documents store a history of changes for you, which you can undo. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n<img src=\"https://swcarpentry.github.io/git-novice/fig/phd101212s.png\" width=\"45%\">\n\n<small> \"Piled Higher and Deeper” by Jorge Cham, http://www.phdcomics.com </small>\n\n===\n\n<!-- .slide: data-state=\"standard center\"  -->\n## Documents are...\n\n<div >\n  a series of changes\n  <img style=\"height: 30vh; margin: 0; padding: 0;\" src=\"https://swcarpentry.github.io/git-novice/fig/play-changes.svg\"/>\n</div>\n\nnote:\nIn version control systems, documents start with a base version and record all the changes that happened on top of that base version. Because of this you can always \"play back\" to an earlier version, while it does not store duplicates.\n\n===\n\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Changes are stored\n\n<img src=\"media/git-diff.png\" width=\"80%\">\n\nnote:\nA version control system (like git) keeps track of the individual changes for us. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## Changes are stored\n\n<img src=\"media/git-log.png\" width=\"80%\">\n\nnote:\nThe changes are stored along with some useful metadata. A set of changes, along with its metadata is called a \"commit\". \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## More than one...\n\n<div style=\"float: left; width: 49%;\">\n  independent change\n  <img style=\"height: 350px;\" src=\"media/versions.svg\"/>\n</div>\n\n<div style=\"float: right; width: 49%;\">\n  can be merged\n  <img style=\"height: 350px;\" src=\"media/merge.svg\"/>\n</div>\n\nnote:\nWhen collaborating you might have various versions (sets of changes) that co-exist at the same time on so called \"branches\". Modern version control software can usually automatically merge multiple changes into a single document.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Merge conflicts\n\nHowever, if multiple contributors work on the same thing...\n\n```bash\nThis line contains a typos.\n```\n<!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\n... then \"merge conflicts\" may arise: \n<!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\n```bash\n<<<<<<< contributor1\nThis line contains typos.\n=======\nThis line contains a typo.\n>>>>>>> contributor2\n```\n<!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\nnote:\n\nIf changes are made to the same section (usually the same or consecutive line(s) of text) of a document a **conflict** arises. Changes cannot be automatically merged, as the interpreter does not know which version or which combination to use. Human intervention is required and can involve rolling back a change, finding common ground between changes, etc.\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n## Avoiding merge conflicts\n\nHow to minimize creating merge conflicts:\n\n- Communicate:\n  - discuss who is working on what\n  - agree on common standards such as formatting, (conflicting) style guides, linting rules, etc.\n- Frequent merging:\n  - Merge (small) changes back to the central repository often\n  - Pull changes to your local repository regularly\n- Organize changes:\n  - use \"feature branches\" rather than making changes to the main document directly \n  - avoid \"scope creep\" and instead create separate independent branches for isolated topics\n  - review each other's changes before merging them\n\n<!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\nnote:\nResolving merge conflicts can be time-consuming and error prone, especially for larger changes/conflicts. Therefore it is a good idea for teams to agree on some basic practices to avoid creating conflicts in the first place. Keep in mind, that it is unrealistic to prevent all conflicts. This is fine, but they will need some attention to resolve. \n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n## Collaboration\n\n<img style=\"height: 350px;\" src=\"https://www.researchgate.net/profile/Mark-Ziemann/publication/371671830/figure/fig2/AS:11431281168661745@1687060872300/Distributed-version-control-Adapted-from-48.png\" alt=\"Distributed version control. Adapted from [48].\"/>\n\n<small>[The five pillars of computational reproducibility: Bioinformatics and beyond](https://www.researchgate.net/figure/Distributed-version-control-Adapted-from-48_fig2_371671830)</small>\n\n\nnote:\nCollaborative code developers often make use of a remote server (like GitHub, or GitLab) as a central repository from which all other repositories derive. But this is not the only way you can use version control to do collaborative development. \n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Some terminology\n\nFiles can be stored in:\n - **working directory**: the files you can see\n - **staging area / index**: files about to be committed\n - **local repository**: the (permanent) record on a given user's disk \n - **remote repository**: an online copy of the record, often used as the central repository\n\n===\n\n<!-- .slide: data-state=\"standard center\" -->\n\n## The right tool?\n\n<img src=\"media/repository_logos.png\" width=\"90%\">\n\nnote:\nMany different tools exist specifically for collaborative version control of computer source code and other simple text-based documents. It is often good to know what is the default or most-used tool in your university, institute or group. \n\nGit (for version control) with Gitlab and Github (for collaboration) are the mainstream, used by many and with lots of features. You might run into projects using other repositories.\n\n===\n\n<!-- .slide: data-state=\"standard\" -->\n## Key Points\n- Version control is like unlimited **undo** in MS Word, and more\n- Version control also allows many people to work in parallel\n- For collaborative development a remote, cloud hosted repository is often used as central hub\n- Communication is key to avoid conflicting versions of the same software\n"},{"_path":"/modules/version-control/version_control_exercise","_dir":"version-control","_draft":false,"_partial":false,"_locale":"","title":"What to include in the repository","description":"","type":"exercise","order":3,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"exercise-which-of-the-following-do-you-think-should-be-part-of-a-code-repository-5-10-mins"},"children":[{"type":"text","value":"Exercise: Which of the following do you think should be part of a code repository (5-10 mins)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Discuss with your neighbor which of the following should be part of the code repository and why it should or should not."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Discuss with your neighbor which of the following should be part of the code repository and why it should or should not."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"installation instructions (i.e. detailed instructions on how to install the software)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"user documentation (i.e. information for the users of the software about its functionality and features)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"full dataset to reproduce figures from a paper"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"a few data files to test the functionality of the code base"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"in-line comments intended only for code developers"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"exercise-which-of-the-following-do-you-think-should-be-part-of-a-code-repository-5-10-mins","depth":2,"text":"Exercise: Which of the following do you think should be part of a code repository (5-10 mins)"}]}},"_type":"markdown","_id":"local_fs:modules:version-control:version_control_exercise.md","_source":"local_fs","_file":"modules/version-control/version_control_exercise.md","_stem":"modules/version-control/version_control_exercise","_extension":"md","plainText":"---\ntitle: What to include in the repository\ntype: exercise\norder: 3\n---\n\n## Exercise: Which of the following do you think should be part of a code repository (5-10 mins)\n\nDiscuss with your neighbor which of the following should be part of the code repository and why it should or should not.\n\nDiscuss with your neighbor which of the following should be part of the code repository and why it should or should not.\n\n- installation instructions (i.e. detailed instructions on how to install the software)\n- user documentation (i.e. information for the users of the software about its functionality and features)\n- full dataset to reproduce figures from a paper\n- a few data files to test the functionality of the code base\n- in-line comments intended only for code developers\n"},{"_path":"/modules/version-control/version_control_resources","_dir":"version-control","_draft":false,"_partial":false,"_locale":"","title":"Further reading","description":"","type":"reading","order":5,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"resources"},"children":[{"type":"text","value":"Resources"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://swcarpentry.github.io/git-novice/01-basics.html","rel":["nofollow"]},"children":[{"type":"text","value":"Version Control with Git: Automated Version Control (swcarpentry.github.io)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://training.github.com/downloads/github-git-cheat-sheet.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Git commands cheat sheet"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://the-turing-way.netlify.app/reproducible-research/vcs","rel":["nofollow"]},"children":[{"type":"text","value":"https://the-turing-way.netlify.app/reproducible-research/vcs"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://coderefinery.github.io/git-intro/","rel":["nofollow"]},"children":[{"type":"text","value":"https://coderefinery.github.io/git-intro/"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"resources","depth":2,"text":"Resources"}]}},"_type":"markdown","_id":"local_fs:modules:version-control:version_control_resources.md","_source":"local_fs","_file":"modules/version-control/version_control_resources.md","_stem":"modules/version-control/version_control_resources","_extension":"md","plainText":"---\ntitle: Further reading\ntype: reading\norder: 5\n---\n\n## Resources\n\n[Version Control with Git: Automated Version Control (swcarpentry.github.io)](https://swcarpentry.github.io/git-novice/01-basics.html) \n\n[Git commands cheat sheet](https://training.github.com/downloads/github-git-cheat-sheet.pdf)\n\nhttps://the-turing-way.netlify.app/reproducible-research/vcs \n\nhttps://coderefinery.github.io/git-intro/"},{"_path":"/modules/version-control/version_control_terminology","_dir":"version-control","_draft":false,"_partial":false,"_locale":"","title":"Terminology","description":"","type":"reading","order":2,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"terminology"},"children":[{"type":"text","value":"Terminology"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Branch"}]},{"type":"text","value":": Branches allow different sets of changes to co-exist. In this way, multiple people can work on the same (set of) files, and different \"themed\" changes can be developed in isolation. The main branch, from which all other branches (indirectly) are derived is often called \"trunk\". In practice this is done by having multiple commits (see below) point to the same parent commit. Branches are usually intended to \"merge\" back into the main branch or trunk."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Commit (noun)"}]},{"type":"text","value":": A commit or changeset is a set of alterations packaged together, along with meta-information  about the alterations. A commit/changeset describes the exact differences between two successive versions in the version control system's repository of changes along with information about the context of these changes, e.g. author, date, description (commit message) and a pointer to the parent commit."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Commit (verb)"}]},{"type":"text","value":": To write the changes made in a working copy into the repository using a \"commit (noun, see above)\"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Pull/push"}]},{"type":"text","value":": Copy revisions/commits from one repository into another. Pull is initiated by the receiving repository, while push is initiated by the source. Fetch is sometimes used as a synonym for pull, or to mean a pull followed by an update."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Pull/merge request"}]},{"type":"text","value":": Contributions to a source code repository that uses a distributed version control system are commonly made by means of a pull request or merge request (synonyms). The contributor requests the project maintainer to pull their changes, hence the name \"pull request\". The maintainer has to merge the pull request if the contribution should become part of the source base."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Repository"}]},{"type":"text","value":": In version control systems, a repository is a data structure that stores metadata for a set of files or directory structure."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Working copy"}]},{"type":"text","value":": The working copy is the local copy of files from a repository. All work done to the files in a repository is initially done on a working copy, hence the name."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://training.github.com/downloads/github-git-cheat-sheet.pdf","rel":["nofollow"]},"children":[{"type":"text","value":"Git commands cheat sheet"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"terminology","depth":2,"text":"Terminology"}]}},"_type":"markdown","_id":"local_fs:modules:version-control:version_control_terminology.md","_source":"local_fs","_file":"modules/version-control/version_control_terminology.md","_stem":"modules/version-control/version_control_terminology","_extension":"md","plainText":"---\ntitle: Terminology\ntype: reading\norder: 2\n---\n\n## Terminology\n* **Branch**: Branches allow different sets of changes to co-exist. In this way, multiple people can work on the same (set of) files, and different \"themed\" changes can be developed in isolation. The main branch, from which all other branches (indirectly) are derived is often called \"trunk\". In practice this is done by having multiple commits (see below) point to the same parent commit. Branches are usually intended to \"merge\" back into the main branch or trunk.\n* **Commit (noun)**: A commit or changeset is a set of alterations packaged together, along with meta-information  about the alterations. A commit/changeset describes the exact differences between two successive versions in the version control system's repository of changes along with information about the context of these changes, e.g. author, date, description (commit message) and a pointer to the parent commit.\n* **Commit (verb)**: To write the changes made in a working copy into the repository using a \"commit (noun, see above)\". \n* **Pull/push**: Copy revisions/commits from one repository into another. Pull is initiated by the receiving repository, while push is initiated by the source. Fetch is sometimes used as a synonym for pull, or to mean a pull followed by an update. \n* **Pull/merge request**: Contributions to a source code repository that uses a distributed version control system are commonly made by means of a pull request or merge request (synonyms). The contributor requests the project maintainer to pull their changes, hence the name \"pull request\". The maintainer has to merge the pull request if the contribution should become part of the source base.\n* **Repository**: In version control systems, a repository is a data structure that stores metadata for a set of files or directory structure.\n* **Working copy**: The working copy is the local copy of files from a repository. All work done to the files in a repository is initially done on a working copy, hence the name.\n\n[Git commands cheat sheet](https://training.github.com/downloads/github-git-cheat-sheet.pdf)\n"},{"_path":"/readme","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"Research Software Support","description":"This repository contains the contents for the Research Software Support platform. In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"research-software-support"},"children":[{"type":"text","value":"Research Software Support"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This repository contains the contents for the Research Software Support platform. In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software."}]},{"type":"element","tag":"h2","props":{"id":"teaching-this-lesson"},"children":[{"type":"text","value":"Teaching this lesson?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Do you want to teach Research Software Support? This material is open-source and freely available.\nAre you planning on using our material in your teaching?\nWe would love to help you prepare to teach the lesson and receive feedback on how it could be further improved, based on your experience in the workshop."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can notify us that you plan to teach this lesson by creating an issue in this repository. Also, it would be great if you can update "},{"type":"element","tag":"a","props":{"href":"main/workshops"},"children":[{"type":"text","value":"this overview of all workshops taught with this lesson material"}]},{"type":"text","value":". This helps us show the impact of developing open-source lessons to our funders."}]},{"type":"element","tag":"h2","props":{"id":"target-audience"},"children":[{"type":"text","value":"Target audience"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The target audience for this material is University management and support staff. University management taking part in courses involving these modules may be involved in creating university policy around research software. The University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software."}]},{"type":"element","tag":"h2","props":{"id":"contributing"},"children":[{"type":"text","value":"Contributing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We welcome contributions to the content of the Research Software Support platform. Please view "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/research-software-support/blob/main/CONTRIBUTING.md","rel":["nofollow"]},"children":[{"type":"text","value":"the contributing guidelines"}]},{"type":"text","value":" for more information."}]},{"type":"element","tag":"h2","props":{"id":"technical-documentation"},"children":[{"type":"text","value":"Technical documentation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This platform uses the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA","rel":["nofollow"]},"children":[{"type":"text","value":"NEBULA framework"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For elaborate setup instructions and other documentation, see the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA-docs","rel":["nofollow"]},"children":[{"type":"text","value":"NEBULA documentation"}]}]},{"type":"element","tag":"h2","props":{"id":"quick-local-setup"},"children":[{"type":"text","value":"Quick local setup"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"More detailed information about local setup can be found in the "},{"type":"element","tag":"a","props":{"href":"https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/local-rendering.md","rel":["nofollow"]},"children":[{"type":"text","value":"NEBULA local rendering docs"}]}]},{"type":"element","tag":"h3","props":{"id":"content-directoryrepository"},"children":[{"type":"text","value":"Content directory/repository"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To use NEBULA to build the content in this repository locally, you will need to clone this repository and the NEBULA repository:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"git clone git@github.com:esciencecenter-digital-skills/research-software-support.git\ngit clone git@github.com:esciencecenter-digital-skills/NEBULA.git\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"git clone git@github.com:esciencecenter-digital-skills/research-software-support.git\ngit clone git@github.com:esciencecenter-digital-skills/NEBULA.git\n"}]}]},{"type":"element","tag":"h3","props":{"id":"link-to-the-content-repository"},"children":[{"type":"text","value":"Link to the content repository"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To make sure that NEBULA knows where to find the content, we create the following environment variable:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"export CONTENT_PATH=\"/path/to/your/content/repository\"\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"export CONTENT_PATH=\"/path/to/your/content/repository\"\n"}]}]},{"type":"element","tag":"h3","props":{"id":"install-dependencies"},"children":[{"type":"text","value":"Install dependencies"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Check whether you have node and npm installed:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"node -v\nnpm -v\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"node -v\nnpm -v\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above commands should output the installed versions, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"e.g."}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"10.6.0"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"v20.9.0"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If this is not the case, proceed with installing the "},{"type":"element","tag":"a","props":{"href":"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm","rel":["nofollow"]},"children":[{"type":"text","value":"node package manager"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First, "},{"type":"element","tag":"a","props":{"href":"https://github.com/nvm-sh/nvm?tab=readme-ov-file#install--update-script","rel":["nofollow"]},"children":[{"type":"text","value":"use nvm"}]},{"type":"text","value":", the \"node version manager\", this is a shell script that enables the installation, management and use of multiple versions of the node runtime environment and package manager."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now, install the the node Javascript runtime environment which includes the node package manager (npm):"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"nvm install node\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"nvm install node\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, you can use npm (node package manager) to install the dependencies of NEBULA. Navigate to the NEBULA respository:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"cd /path/to/your/NEBULA/repository\nnpm install\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"cd /path/to/your/NEBULA/repository\nnpm install\n"}]}]},{"type":"element","tag":"h3","props":{"id":"local-development-build"},"children":[{"type":"text","value":"Local development build"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Navigate to the NEBULA folder and run"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"# node package manager\nnpm run dev\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# node package manager\nnpm run dev\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now you can open a browser and navigate to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"http://localhost:3000/research-software-support"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"teaching-this-lesson","depth":2,"text":"Teaching this lesson?"},{"id":"target-audience","depth":2,"text":"Target audience"},{"id":"contributing","depth":2,"text":"Contributing"},{"id":"technical-documentation","depth":2,"text":"Technical documentation"},{"id":"quick-local-setup","depth":2,"text":"Quick local setup","children":[{"id":"content-directoryrepository","depth":3,"text":"Content directory/repository"},{"id":"link-to-the-content-repository","depth":3,"text":"Link to the content repository"},{"id":"install-dependencies","depth":3,"text":"Install dependencies"},{"id":"local-development-build","depth":3,"text":"Local development build"}]}]}},"_type":"markdown","_id":"local_fs:README.md","_source":"local_fs","_file":"README.md","_stem":"README","_extension":"md","plainText":"# Research Software Support\nThis repository contains the contents for the Research Software Support platform. In the Research Software Support modules we want to provide a comprehensive overview of the different aspects of research software.\n\n## Teaching this lesson?\nDo you want to teach Research Software Support? This material is open-source and freely available. \nAre you planning on using our material in your teaching? \nWe would love to help you prepare to teach the lesson and receive feedback on how it could be further improved, based on your experience in the workshop.\n\nYou can notify us that you plan to teach this lesson by creating an issue in this repository. Also, it would be great if you can update [this overview of all workshops taught with this lesson material](main/workshops.md). This helps us show the impact of developing open-source lessons to our funders.\n\n## Target audience\nThe target audience for this material is University management and support staff. University management taking part in courses involving these modules may be involved in creating university policy around research software. The University support staff targeted are not themselves researchers or software engineers, but they support researchers and research software engineers in creating research software.\n\n## Contributing\nWe welcome contributions to the content of the Research Software Support platform. Please view [the contributing guidelines](https://github.com/esciencecenter-digital-skills/research-software-support/blob/main/CONTRIBUTING.md) for more information.\n\n## Technical documentation\nThis platform uses the [NEBULA framework](https://github.com/esciencecenter-digital-skills/NEBULA).\n\nFor elaborate setup instructions and other documentation, see the [NEBULA documentation](https://github.com/esciencecenter-digital-skills/NEBULA-docs)\n\n## Quick local setup\n\nMore detailed information about local setup can be found in the [NEBULA local rendering docs](https://github.com/esciencecenter-digital-skills/NEBULA-docs/blob/main/local-rendering.md)\n\n### Content directory/repository\n\nTo use NEBULA to build the content in this repository locally, you will need to clone this repository and the NEBULA repository:\n\n```bash\ngit clone git@github.com:esciencecenter-digital-skills/research-software-support.git\ngit clone git@github.com:esciencecenter-digital-skills/NEBULA.git\n```\n\n### Link to the content repository\n\nTo make sure that NEBULA knows where to find the content, we create the following environment variable:\n\n```bash\nexport CONTENT_PATH=\"/path/to/your/content/repository\"\n```\n\n### Install dependencies\n\n\nCheck whether you have node and npm installed:\n```bash\nnode -v\nnpm -v\n```\nThe above commands should output the installed versions, *e.g.*, `10.6.0` and `v20.9.0`.\n\nIf this is not the case, proceed with installing the [node package manager](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n\nFirst, [use nvm](https://github.com/nvm-sh/nvm?tab=readme-ov-file#install--update-script), the \"node version manager\", this is a shell script that enables the installation, management and use of multiple versions of the node runtime environment and package manager.\n\n```bash\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n\nNow, install the the node Javascript runtime environment which includes the node package manager (npm):\n```bash\nnvm install node\n```\n\nFinally, you can use npm (node package manager) to install the dependencies of NEBULA. Navigate to the NEBULA respository:\n```bash\ncd /path/to/your/NEBULA/repository\nnpm install\n```\n\n### Local development build\n\nNavigate to the NEBULA folder and run\n\n```bash\n# node package manager\nnpm run dev\n```\n\nNow you can open a browser and navigate to `http://localhost:3000/research-software-support`\n"}],"navigation":[{"title":"Config","_path":"/config"},{"title":"Contributing to this Research Software Support platform","_path":"/contributing"},{"title":"Hello world","_path":"/"},{"title":"LICENSE","_path":"/license"},{"title":"Main","_path":"/main","children":[{"title":"About","_path":"/main/about"},{"title":"Contribute","_path":"/main/contribute"},{"title":"Workshops","_path":"/main/workshops"},{"title":"Yellow Pages","_path":"/main/yellowpages"}]},{"title":"Modules","_path":"/modules","children":[{"title":"Software Citation","_path":"/modules/citation","children":[{"title":"CITATION.cff file","_path":"/modules/citation/citationcff"},{"title":"CFFinit tool","_path":"/modules/citation/create_citation_file"},{"title":"What to cite?","_path":"/modules/citation/ex_what-to-cite"},{"title":"Further reading","_path":"/modules/citation/further_reading"},{"title":"Software Citation","_path":"/modules/citation"},{"title":"Learning objectives","_path":"/modules/citation/info"},{"title":"Citing software","_path":"/modules/citation/introduction"},{"title":"The principles","_path":"/modules/citation/principles"},{"title":"Software Citation","_path":"/modules/citation/slides-citation"}]},{"title":"Software Distribution","_path":"/modules/distributing","children":[{"title":"Distributing Software","_path":"/modules/distributing/distributing"},{"title":"Dependency tracking","_path":"/modules/distributing/exercise-tracking"},{"title":"Further reading","_path":"/modules/distributing/further-reading"},{"title":"Software Distribution","_path":"/modules/distributing"},{"title":"Learning objectives","_path":"/modules/distributing/info"},{"title":"Distributing Software","_path":"/modules/distributing/slides-distributing"}]},{"title":"Software Documentation","_path":"/modules/documentation","children":[{"title":"Suitable documentation","_path":"/modules/documentation/ex_suitability"},{"title":"Levels of documentation","_path":"/modules/documentation/exercise-levels"},{"title":"Software Documentation","_path":"/modules/documentation"},{"title":"Learning objectives","_path":"/modules/documentation/info"},{"title":"Further reading","_path":"/modules/documentation/reading"},{"title":"Documentation","_path":"/modules/documentation/slides_documentation"},{"title":"Types of documentation","_path":"/modules/documentation/types-of-documentation"}]},{"title":"Software Licenses","_path":"/modules/licenses","children":[{"title":"Copyright","_path":"/modules/licenses/copyright"},{"title":"Choose a license","_path":"/modules/licenses/ex_choose_a_license"},{"title":"Find the license","_path":"/modules/licenses/ex_finding_the_license"},{"title":"How to share software","_path":"/modules/licenses/how_to_share"},{"title":"Software Licenses","_path":"/modules/licenses"},{"title":"Learning objectives","_path":"/modules/licenses/info"},{"title":"Software licenses","_path":"/modules/licenses/licenses"},{"title":"Software Licensing","_path":"/modules/licenses/slides"},{"title":"Software policies","_path":"/modules/licenses/university_policy"}]},{"title":"Software Publication","_path":"/modules/publication","children":[{"title":"Automating publication","_path":"/modules/publication/automating_software_publication"},{"title":"Find your registry","_path":"/modules/publication/ex_registries"},{"title":"Software Publication","_path":"/modules/publication"},{"title":"Learning objectives","_path":"/modules/publication/info"},{"title":"Review your software","_path":"/modules/publication/joss_checklist"},{"title":"Further reading","_path":"/modules/publication/reading"},{"title":"Publishing Software","_path":"/modules/publication/slides-publication"},{"title":"Publication pipeline","_path":"/modules/publication/software_publication_pipeline"}]},{"title":"What is (Research) Software?","_path":"/modules/researchsoftware","children":[{"title":"Is it Research Software?","_path":"/modules/researchsoftware/exercise-is-it-research-software"},{"title":"Research Life Cycle","_path":"/modules/researchsoftware/exercise-research-life-cycle"},{"title":"Writing Software","_path":"/modules/researchsoftware/exercise-writing-software"},{"title":"Further Reading","_path":"/modules/researchsoftware/further-reading"},{"title":"What is (Research) Software?","_path":"/modules/researchsoftware"},{"title":"Learning Objectives","_path":"/modules/researchsoftware/info"},{"title":"Research Software","_path":"/modules/researchsoftware/slides-researchsoftware"},{"title":"What is Software?","_path":"/modules/researchsoftware/slides-software"}]},{"title":"Software in the Scientific Landscape","_path":"/modules/softwarelandscape","children":[{"title":"Study & present","_path":"/modules/softwarelandscape/exercise1"},{"title":"Mapping the principles","_path":"/modules/softwarelandscape/exercise2"},{"title":"Role playing","_path":"/modules/softwarelandscape/exercise3"},{"title":"Software in the Scientific Landscape","_path":"/modules/softwarelandscape"},{"title":"Learning objectives","_path":"/modules/softwarelandscape/info"},{"title":"Further reading","_path":"/modules/softwarelandscape/reading"},{"title":"Software Landscape","_path":"/modules/softwarelandscape/slides"}]},{"title":"Software Management Plans","_path":"/modules/softwaremanagementplans","children":[{"title":"Software Management Plans","_path":"/modules/softwaremanagementplans"},{"title":"Learning objectives","_path":"/modules/softwaremanagementplans/info"},{"title":"Practical Guide","_path":"/modules/softwaremanagementplans/practicalguide"},{"title":"Reading material","_path":"/modules/softwaremanagementplans/reading"},{"title":"SMP requirements","_path":"/modules/softwaremanagementplans/requirements"},{"title":"Software Management Plans","_path":"/modules/softwaremanagementplans/slides-smp"},{"title":"SMP vs FAIR","_path":"/modules/softwaremanagementplans/smpvsfair"},{"title":"Build a Template","_path":"/modules/softwaremanagementplans/templatebuilding"}]},{"title":"Software Testing","_path":"/modules/testing","children":[{"title":"Continuous Integration","_path":"/modules/testing/ci-cd"},{"title":"Exercise 1","_path":"/modules/testing/exercise1"},{"title":"Exercise 2","_path":"/modules/testing/exercise2"},{"title":"Exercise 3","_path":"/modules/testing/exercise3"},{"title":"Software Testing","_path":"/modules/testing"},{"title":"Learning objectives","_path":"/modules/testing/info"},{"title":"Reading material","_path":"/modules/testing/reading"},{"title":"Software Testing","_path":"/modules/testing/slides"},{"title":"Software Testing","_path":"/modules/testing/software-testing"}]},{"title":"Software Version Control","_path":"/modules/version-control","children":[{"title":"Software Version Control","_path":"/modules/version-control"},{"title":"Learning objectives","_path":"/modules/version-control/info"},{"title":"Version Control Slides","_path":"/modules/version-control/slides-version-control"},{"title":"What to include in the repository","_path":"/modules/version-control/version_control_exercise"},{"title":"Further reading","_path":"/modules/version-control/version_control_resources"},{"title":"Terminology","_path":"/modules/version-control/version_control_terminology"}]}]},{"title":"Research Software Support","_path":"/readme"}]}